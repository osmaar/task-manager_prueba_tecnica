var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.517,1,1.34]],["body/components/AppComponent.html",[0,0.737,1,2.047,2,1.274,3,0.747,4,0.319,5,1.365,6,0.848,7,0.848,8,0.273,9,1.649,10,0.676,11,2.425,12,3.862,13,1.557,14,1.628,15,3.382,16,3.036,17,1.256,18,2.815,19,2.108,20,1.91,21,2.477,22,1.209,23,2.477,24,1.833,25,1.43,26,1.833,27,5.541,28,2.047,29,3.036,30,3.036,31,3.036,32,1.22,33,1.773,34,1.955,35,0.968,36,1.833,37,0.905,38,1.613,39,3.647,40,2.202,41,2.202,42,2.975,43,1.91,44,1.718,45,0.046,46,2.532,47,2.648,48,2.202,49,2.533,50,2.674,51,2.347,52,2.347,53,1.915,54,2.191,55,3.647,56,2.425,57,2.532,58,2.532,59,1.704,60,2.975,61,3.809,62,3.647,63,3.647,64,3.647,65,2.975,66,2.202,67,3.647,68,2.15,69,3.647,70,0.548,71,3.647,72,2.411,73,2.15,74,1.938,75,1.938,76,2.46,77,2.347,78,2.533,79,2.651,80,1.938,81,2.533,82,4.982,83,2.255,84,2.648,85,2.301,86,3.809,87,5.222,88,4.564,89,2.584,90,1.938,91,2.15,92,2.674,93,2.99,94,3.153,95,1.955,96,3.647,97,1.938,98,1.938,99,2.202,100,2.202,101,2.202,102,2.15,103,3.647,104,1.087,105,2.202,106,3.647,107,2.202,108,3.723,109,5.485,110,2.975,111,1.53,112,1.938,113,1.718,114,2.975,115,2.532,116,2.648,117,3.647,118,3.17,119,2.09,120,3.647,121,2.532,122,3.246,123,3.723,124,3.647,125,2.425,126,1.53,127,3.647,128,3.647,129,2.975,130,3.17,131,2.532,132,5.222,133,3.647,134,3.647,135,3.647,136,3.647,137,0.858,138,2.975,139,4.564,140,2.202,141,2.975,142,2.756,143,2.975,144,2.425,145,2.532,146,3.545,147,4.564,148,0.479,149,1.709,150,0.548,151,0.737,152,0.552,153,0.905,154,1.137,155,2.021,156,1.43,157,3.036,158,2.021,159,1.074,160,0.419,161,2.021,162,1.22,163,1.22,164,1.649,165,1.649,166,1.403,167,2.021,168,2.021,169,2.021,170,2.021,171,0.319,172,0.475,173,0.952,174,1.274,175,1.833,176,1.22,177,2.448,178,1.22,179,0.806,180,1.22,181,0.952,182,1.22,183,0.952,184,1.22,185,1.22,186,0.603,187,0.676,188,1.22,189,1.22,190,0.023,191,0.023]],["title/interfaces/CompoDocConfig.html",[192,0.59,193,1.511]],["body/interfaces/CompoDocConfig.html",[0,0.499,3,0.433,4,0.433,5,0.663,6,0.743,7,0.743,8,0.685,22,0.528,33,0.663,35,0.47,37,1.003,44,0.835,45,0.046,47,1.787,48,1.07,49,2.419,50,2.546,51,1.584,52,1.584,53,2.22,54,2.237,56,1.459,59,1.511,66,1.07,68,0.835,70,0.239,72,1.719,73,1.584,74,1.787,75,1.787,76,2.13,77,2.042,78,2.13,79,1.584,81,1.294,83,1.897,84,1.787,85,2.126,89,1.784,90,0.942,91,0.835,92,2.53,93,2.605,94,1.07,97,2.178,98,0.942,99,1.07,100,1.07,101,1.07,102,0.835,104,1.129,105,2.287,107,2.03,111,2.237,112,2.403,113,2.13,116,2.178,119,0.743,122,2.617,125,0.942,126,1.411,137,1.336,140,1.07,148,0.53,149,0.663,150,0.756,151,0.982,152,0.688,159,0.964,160,0.368,171,0.279,172,0.417,179,0.47,186,0.528,187,1.694,190,0.021,191,0.021,192,0.698,193,1.787,194,0.743,195,0.592,196,0.743,197,1.07,198,1.731,199,2.63,200,2.63,201,2.63,202,2.63,203,2.63,204,2.63,205,2.63,206,2.63,207,2.63,208,2.63,209,2.63,210,2.63,211,2.63,212,2.63,213,2.63,214,2.63,215,2.63,216,2.63,217,2.63,218,2.63,219,2.63,220,2.63,221,2.63,222,2.846,223,1.754,224,1.907,225,1.231,226,2.335,227,1.907,228,1.907,229,1.07,230,1.028,231,1.07,232,1.028,233,1.787,234,1.07,235,1.028,236,0.835,237,1.07,238,1.459,239,1.07,240,2.178,241,1.907,242,1.907,243,1.231,244,1.231,245,1.231,246,2.846,247,1.907,248,1.907,249,1.907,250,1.231,251,2.549,252,1.584,253,2.03,254,2.652,255,1.294,256,1.231,257,1.907,258,1.231,259,1.07,260,1.907,261,1.07,262,3.73,263,0.835,264,2.335,265,0.743,266,0.942,267,1.231,268,0.743,269,1.694,270,1.231,271,1.231,272,1.07,273,1.231,274,1.231,275,1.658,276,2.335,277,1.231,278,1.907,279,2.03,280,1.231,281,1.231,282,1.07,283,2.474,284,1.907,285,1.658,286,1.231,287,1.07,288,1.231,289,1.231,290,1.07,291,1.231,292,1.07,293,1.07,294,2.178,295,2.63,296,2.63,297,1.784,298,3.01,299,1.231,300,3.14,301,2.846,302,1.231,303,1.907,304,1.231,305,1.231,306,2.335,307,3.332,308,1.231,309,1.907,310,2.03,311,1.07,312,2.03,313,1.231,314,1.231,315,1.658,316,1.907,317,1.231,318,1.231,319,1.231,320,1.231,321,1.231,322,1.07,323,1.07,324,1.231,325,1.231,326,1.787,327,2.403,328,1.231,329,2.335,330,1.231,331,2.03,332,2.335,333,1.231,334,1.907,335,1.658,336,2.335,337,1.907,338,1.231,339,1.231,340,2.03,341,2.304,342,1.658,343,1.907,344,0.942,345,3.01,346,1.231,347,2.287,348,1.907,349,1.907,350,1.231,351,1.231,352,1.231,353,1.231,354,2.821,355,1.231,356,1.07,357,1.907,358,1.231,359,1.231,360,1.231,361,1.231,362,1.231,363,1.231,364,1.231,365,1.231,366,1.231,367,1.231,368,1.231,369,1.231,370,1.231,371,1.231,372,1.907,373,1.231,374,1.231,375,1.231,376,1.231,377,1.784,378,1.231,379,0.891,380,1.028,381,1.231,382,1.294,383,1.231,384,1.231,385,1.231,386,1.231,387,1.231,388,1.431,389,3.404,390,1.231,391,0.835,392,1.231,393,1.231,394,1.231,395,1.231,396,1.96,397,1.07,398,1.819,399,2.352,400,1.231,401,1.231,402,1.231,403,1.231,404,1.719,405,2.057,406,1.931,407,1.231,408,1.231,409,2.335,410,1.907,411,1.231,412,1.819,413,1.511,414,3.675,415,1.231,416,2.63,417,3.01,418,1.231,419,1.231,420,1.231,421,2.335,422,1.222,423,2.335,424,2.03,425,1.231,426,1.231,427,1.231,428,1.231,429,1.231,430,1.231,431,1.231,432,2.63,433,1.231,434,1.231,435,1.231,436,1.907,437,1.231,438,1.07,439,1.231,440,1.658,441,0.942,442,1.231,443,2.335,444,0.942,445,1.231,446,1.231,447,1.231,448,1.231,449,1.231,450,1.028,451,1.231,452,1.266,453,1.07,454,1.231,455,1.231,456,2.335,457,0.942,458,1.231,459,1.231,460,1.231,461,1.231,462,1.231,463,1.231,464,1.231,465,1.231,466,1.231,467,0.743,468,1.231,469,1.231,470,1.231,471,1.231,472,1.907,473,1.231,474,1.231,475,1.907,476,1.231,477,1.231,478,1.231,479,1.231,480,1.07,481,1.07,482,1.07,483,1.07,484,1.231,485,1.07,486,1.231,487,1.07,488,1.231,489,1.231,490,1.231,491,1.231,492,1.07,493,0.942,494,1.07,495,1.231,496,2.013,497,1.231,498,0.942,499,1.231,500,1.231,501,1.231,502,1.231,503,1.231,504,1.658,505,1.231,506,1.907,507,1.231,508,2.287,509,1.231,510,1.231,511,1.907,512,1.231,513,1.231,514,1.231,515,1.907,516,1.231,517,1.231,518,1.231,519,1.231,520,1.459,521,1.231,522,1.07,523,1.07,524,1.07,525,1.07,526,1.07,527,1.07,528,1.231,529,1.231,530,1.231,531,1.231,532,1.231,533,1.231,534,0.942,535,1.231]],["title/interfaces/CreateTaskRequest.html",[192,0.59,536,1.193]],["body/interfaces/CreateTaskRequest.html",[3,0.512,4,0.512,8,0.439,10,1.811,13,1.734,14,1.944,17,0.861,45,0.046,70,0.439,95,1.992,148,0.668,150,0.791,151,1.057,152,0.909,153,0.968,156,2.356,171,0.744,190,0.032,191,0.032,192,1.077,194,1.362,198,1.586,223,1.491,379,0.764,380,2.128,536,1.979,537,1.96,538,3.276,539,1.857,540,1.778,541,1.766,542,2.352,543,2.192,544,2.942,545,2.558,546,2.942,547,2.558,548,2.507,549,2.507,550,2.657,551,2.827,552,2.827,553,2.657,554,3.318,555,2.661,556,2.92,557,3.019,558,2.657,559,2.254,560,1.96,561,1.215,562,2.254,563,2.254,564,3.355,565,2.254,566,1.529,567,1.725,568,1.96,569,1.996,570,1.725,571,1.96,572,2.254,573,2.254,574,1.96,575,1.725,576,1.96,577,1.996,578,2.848,579,2.252,580,1.362,581,2.254]],["title/injectables/HbsRenderService.html",[235,1.065,582,0.951]],["body/injectables/HbsRenderService.html",[0,0.929,2,1.845,3,0.781,4,0.806,5,1.445,8,0.639,10,1.749,33,1.647,34,1.057,35,0.749,45,0.046,53,1.619,54,1.184,59,1.476,70,0.522,83,1.845,85,1.845,92,1.819,95,1.445,104,1.151,108,2.303,111,1.845,112,2.051,113,2.072,115,3.438,119,1.184,137,1.286,148,0.781,150,0.639,151,1.011,152,0.513,153,1.151,154,1.913,159,0.664,160,0.586,171,0.445,172,0.664,174,1.619,179,1.356,187,0.944,190,0.029,191,0.029,195,1.749,198,0.842,223,0.842,235,1.445,254,1.5,255,1.33,263,1.819,269,1.806,272,1.705,275,2.331,282,1.705,283,3.262,285,2.331,292,2.331,293,2.331,297,1.33,315,3.086,322,2.656,323,2.331,326,2.631,340,1.705,344,2.716,379,0.664,382,1.33,388,1.645,391,2.072,397,2.331,398,1.619,404,1.184,405,2.077,413,1.611,422,0.842,424,2.331,450,1.445,452,1.58,467,1.184,482,2.331,492,1.705,493,1.5,494,1.705,520,1.5,561,1.647,582,1.29,583,1.5,584,3.633,585,1.961,586,4.398,587,2.077,588,4.728,589,4.728,590,4.728,591,3.86,592,3.86,593,2.823,594,1.983,595,2.823,596,2.823,597,3.86,598,4.951,599,2.823,600,1.33,601,2.823,602,1.961,603,1.705,604,2.823,605,2.823,606,2.823,607,2.823,608,4.346,609,2.823,610,2.823,611,2.823,612,2.823,613,2.823,614,5.232,615,2.823,616,3.86,617,5.232,618,1.961,619,3.283,620,3.857,621,5.111,622,5.111,623,2.823,624,2.823,625,4.398,626,2.823,627,2.823,628,3.149,629,2.823,630,2.823,631,2.823,632,3.86,633,2.303,634,2.823,635,2.823,636,2.823,637,3.86,638,2.303,639,4.039,640,2.331,641,2.331,642,3.149,643,2.68,644,2.823,645,2.823,646,2.823,647,2.823,648,2.823,649,2.823,650,3.86,651,2.823,652,2.823,653,4.951,654,4.728,655,2.823,656,2.303,657,2.823,658,2.823,659,3.86,660,2.823,661,2.823,662,2.823,663,2.823,664,2.823,665,3.86,666,2.303,667,2.823,668,2.303,669,3.86,670,2.823,671,2.823,672,2.823,673,2.303,674,2.823,675,3.86,676,2.823,677,2.823,678,2.303,679,2.303,680,2.823,681,4.398,682,2.823,683,2.823,684,2.823,685,2.823,686,2.823,687,2.303,688,2.823,689,3.86,690,2.823,691,2.823,692,2.823,693,2.303,694,2.823,695,2.823,696,4.398]],["title/interfaces/Session.html",[192,0.59,240,1.511]],["body/interfaces/Session.html",[0,0.531,3,0.461,4,0.461,5,0.719,6,0.806,7,0.806,8,0.698,22,0.573,33,0.719,35,0.51,37,1.054,44,0.905,45,0.046,47,1.879,48,1.16,49,2.462,50,2.579,51,1.666,52,1.666,53,2.253,54,2.269,56,1.553,59,1.54,66,1.16,68,0.905,70,0.26,72,1.783,73,1.666,74,1.879,75,1.879,76,2.193,77,2.109,78,2.193,79,1.666,81,1.377,83,1.952,84,1.879,85,2.166,89,1.862,90,1.021,91,0.905,92,2.564,93,2.662,94,1.16,97,2.259,98,1.021,99,1.16,100,1.16,101,1.16,102,0.905,104,1.178,105,2.386,107,2.135,111,2.269,112,2.473,113,2.193,116,2.259,119,0.806,122,2.703,125,1.021,126,1.484,137,1.346,140,1.16,148,0.558,149,0.719,150,0.605,151,0.983,152,0.718,159,1,160,0.399,171,0.303,172,0.452,179,0.51,186,0.573,187,1.726,190,0.022,191,0.022,192,0.734,193,1.553,194,0.806,195,0.642,196,0.806,197,1.16,199,1.334,200,1.334,201,1.334,202,1.334,203,1.334,204,1.334,205,1.334,206,1.334,207,1.334,208,1.334,209,1.334,210,1.334,211,1.334,212,1.334,213,1.334,214,1.334,215,1.334,216,1.334,217,1.334,218,1.334,219,1.334,220,1.334,221,1.334,222,2.029,223,1.678,224,2.029,225,1.334,226,2.456,227,2.029,228,2.029,229,1.16,230,1.094,231,1.16,232,1.094,233,1.879,234,1.16,235,1.094,236,0.905,237,1.16,238,1.553,239,1.16,240,2.379,241,2.952,242,2.952,243,2.744,244,1.334,245,1.334,246,2.952,247,2.029,248,2.029,249,2.029,250,1.334,251,2.611,252,1.666,253,2.135,254,2.706,255,1.377,256,1.334,257,2.029,258,1.334,259,1.16,260,2.029,261,1.16,262,3.779,263,0.905,264,2.456,265,0.806,266,1.021,267,1.334,268,0.806,269,1.726,270,1.334,271,1.334,272,1.16,273,1.334,274,1.334,275,1.764,276,2.456,277,1.334,278,2.029,279,2.135,280,1.334,281,1.334,282,1.16,283,2.567,284,2.029,285,1.764,286,1.334,287,1.16,288,1.334,289,1.334,290,1.16,291,1.334,292,1.16,293,1.16,294,2.259,295,2.744,296,2.744,297,1.862,298,3.109,299,1.334,300,3.232,301,2.952,302,1.334,303,2.029,304,1.334,305,1.334,306,2.456,307,3.411,308,1.334,309,2.029,310,2.135,311,1.16,312,2.135,313,1.334,314,1.334,315,1.764,316,2.029,317,1.334,318,1.334,319,1.334,320,1.334,321,1.334,322,1.16,323,1.16,324,1.334,325,1.334,326,1.879,327,2.473,328,1.334,329,2.456,330,1.334,331,2.135,332,2.456,333,1.334,334,2.029,335,1.764,336,2.456,337,2.029,338,1.334,339,1.334,340,2.135,341,2.379,342,1.764,343,2.029,344,1.021,345,3.109,346,1.334,347,2.386,348,2.029,349,2.029,350,1.334,351,1.334,352,1.334,353,1.334,354,2.896,355,1.334,356,1.16,357,2.029,358,1.334,359,1.334,360,1.334,361,1.334,362,1.334,363,1.334,364,1.334,365,1.334,366,1.334,367,1.334,368,1.334,369,1.334,370,1.334,371,1.334,372,2.029,373,1.334,374,1.334,375,1.334,376,1.334,377,1.862,378,1.334,379,0.93,380,1.094,381,1.334,382,1.377,383,1.334,384,1.334,385,1.334,386,1.334,387,1.334,388,1.465,389,3.479,390,1.334,391,0.905,392,1.334,393,1.334,394,1.334,395,1.334,396,2.012,397,1.16,398,1.878,399,2.399,400,1.334,401,1.334,402,1.334,403,1.334,404,1.783,405,2.102,406,2.003,407,1.334,408,1.334,409,2.456,410,2.029,411,1.334,412,1.878,413,1.54,414,3.729,415,1.334,416,2.744,417,3.109,418,1.334,419,1.334,420,1.334,421,2.456,422,1.267,423,2.456,424,2.135,425,1.334,426,1.334,427,1.334,428,1.334,429,1.334,430,1.334,431,1.334,432,2.744,433,1.334,434,1.334,435,1.334,436,2.029,437,1.334,438,1.16,439,1.334,440,1.764,441,1.021,442,1.334,443,2.456,444,1.021,445,1.334,446,1.334,447,1.334,448,1.334,449,1.334,450,1.094,451,1.334,452,1.321,453,1.16,454,1.334,455,1.334,456,2.456,457,1.021,458,1.334,459,1.334,460,1.334,461,1.334,462,1.334,463,1.334,464,1.334,465,1.334,466,1.334,467,0.806,468,1.334,469,1.334,470,1.334,471,1.334,472,2.029,473,1.334,474,1.334,475,2.029,476,1.334,477,1.334,478,1.334,479,1.334,480,1.16,481,1.16,482,1.16,483,1.16,484,1.334,485,1.16,486,1.334,487,1.16,488,1.334,489,1.334,490,1.334,491,1.334,492,1.16,493,1.021,494,1.16,495,1.334,496,2.1,497,1.334,498,1.021,499,1.334,500,1.334,501,1.334,502,1.334,503,1.334,504,1.764,505,1.334,506,2.029,507,1.334,508,2.386,509,1.334,510,1.334,511,2.029,512,1.334,513,1.334,514,1.334,515,2.029,516,1.334,517,1.334,518,1.334,519,1.334,520,1.553,521,1.334,522,1.16,523,1.16,524,1.16,525,1.16,526,1.16,527,1.16,528,1.334,529,1.334,530,1.334,531,1.334,532,1.334,533,1.334,534,1.021,535,1.334]],["title/interfaces/Task.html",[17,0.755,192,0.59]],["body/interfaces/Task.html",[3,0.486,4,0.486,8,0.417,10,1.789,13,1.759,14,1.962,15,2.845,17,1.221,18,2.141,45,0.046,70,0.417,95,1.964,148,0.646,150,0.793,151,1.057,152,0.927,153,1.221,156,2.309,171,0.725,190,0.031,191,0.031,192,1.059,194,1.294,198,1.461,223,1.564,379,0.964,380,2.152,536,1.719,537,1.862,538,3.404,539,1.753,540,1.294,541,1.722,542,2.14,543,2.204,544,2.141,545,1.862,546,2.141,547,1.862,548,2.471,549,2.471,550,2.605,551,2.787,552,2.888,553,2.605,554,3.282,555,2.639,556,2.888,557,2.959,558,2.605,559,2.845,560,2.473,561,1.835,562,2.845,563,2.845,564,3.322,565,2.845,566,1.93,567,2.177,568,2.473,569,2.404,570,2.177,571,2.959,572,2.845,573,2.845,574,2.959,575,1.639,576,1.862,577,1.93,578,2.777,579,2.177,580,1.294,581,2.141,697,1.453,698,3.084,699,3.084,700,3.084,701,2.473,702,2.141,703,3.084,704,2.516,705,1.862,706,3.084,707,3.084,708,3.084]],["title/components/TaskFormComponent.html",[0,0.517,181,1.34]],["body/components/TaskFormComponent.html",[0,0.731,1,0.936,2,1.258,3,0.313,4,0.313,5,0.744,6,0.834,7,0.834,8,0.269,10,1.62,11,2.41,13,1.725,14,1.739,17,1.41,19,2.082,20,2.646,22,1.551,25,2.451,26,1.81,28,1.894,32,1.2,33,1.763,34,1.698,35,0.527,36,2.605,37,1.286,38,1.593,40,2.18,41,2.18,43,0.936,45,0.046,46,2.082,49,1.701,50,2.137,51,1.413,52,1.413,53,0.834,54,1.81,57,1.38,58,1.38,59,1.286,61,2.507,65,1.621,68,0.936,70,0.269,72,0.834,73,0.936,76,0.936,77,0.936,78,0.936,79,2.218,80,1.593,81,1.701,83,1.81,84,1.056,85,0.834,86,2.792,89,1.701,91,0.936,95,1.763,102,1.413,111,0.834,115,2.082,119,0.834,121,2.082,126,0.834,130,2.507,131,1.38,137,0.946,148,0.473,149,1.763,150,0.636,151,0.881,152,0.656,153,1.076,154,1.948,156,2.283,159,1.238,160,0.412,162,1.2,163,1.2,171,0.313,172,0.468,173,0.936,174,1.258,175,1.81,176,1.2,177,2.427,178,1.2,179,1.067,180,1.2,181,2.033,182,1.2,183,0.936,184,1.2,185,1.2,186,0.593,187,0.664,188,1.2,189,1.2,190,0.023,191,0.023,198,0.894,223,1.199,252,0.936,269,1.805,294,1.056,297,0.936,326,1.056,354,1.81,377,2.033,379,0.849,388,1.076,391,1.701,396,1.514,398,0.834,399,0.936,404,0.834,405,1.514,406,0.936,412,1.81,413,1.286,452,1.516,453,1.81,536,1.258,539,1.805,540,2.033,541,1.505,542,1.687,543,2.022,545,2.427,548,1.701,549,2.218,550,2.136,551,1.593,552,2.136,553,1.593,555,1.413,558,2.686,564,1.81,566,1.894,570,2.575,580,2.033,587,1.258,594,2.183,600,1.413,643,2.082,673,1.621,697,2.662,705,2.738,709,3.177,710,3.654,711,1.621,712,4.005,713,2.738,714,2.082,715,2.082,716,4.846,717,5.054,718,2.446,719,3.841,720,3.61,721,2.507,722,3.61,723,3.61,724,3.61,725,3.61,726,3.61,727,2.507,728,2.446,729,3.61,730,2.082,731,2.998,732,4.02,733,2.996,734,3.61,735,1.894,736,2.998,737,4.02,738,2.998,739,4.02,740,4.02,741,4.02,742,4.536,743,2.998,744,1.988,745,2.998,746,3.28,747,2.446,748,2.427,749,2.41,750,4.02,751,2.998,752,2.998,753,1.988,754,2.446,755,4.708,756,2.446,757,2.446,758,2.998,759,2.792,760,1.81,761,1.988,762,2.446,763,2.998,764,4.708,765,4.02,766,2.998,767,2.998,768,1.988,769,3.28,770,4.536,771,3.7,772,4.02,773,4.02,774,3.28,775,4.02,776,2.998,777,1.988,778,2.082,779,4.02,780,2.446,781,2.998,782,2.998,783,2.446,784,1.988,785,2.446,786,2.998,787,2.446,788,2.082,789,2.446,790,2.446,791,2.792,792,1.593,793,1.81,794,2.082,795,1.988,796,2.998,797,2.998,798,2.998,799,2.446,800,2.998,801,2.998,802,1.988,803,1.988,804,2.998,805,2.082,806,1.988,807,1.593,808,1.38,809,2.446,810,1.988,811,1.38,812,1.056,813,1.988,814,3.61,815,1.988,816,1.988,817,1.988,818,1.988,819,1.38,820,1.2,821,1.38,822,2.945,823,1.988,824,1.988,825,1.988,826,1.988,827,2.998,828,1.988,829,1.988,830,1.988,831,2.082,832,1.988,833,1.988,834,1.988,835,1.988,836,1.988,837,2.507,838,1.988,839,1.988,840,1.621,841,1.988,842,1.988,843,1.988,844,1.988,845,1.621,846,1.988,847,1.988,848,1.988,849,1.988,850,1.38,851,1.988,852,1.988,853,1.988,854,1.988,855,1.988,856,1.988,857,1.988,858,1.988,859,1.988,860,2.998,861,2.998,862,2.998,863,2.998,864,2.082,865,2.998,866,1.81,867,2.998,868,2.998,869,2.998,870,2.998,871,2.998,872,2.998,873,2.446,874,2.998,875,2.082,876,2.998,877,2.082,878,1.38,879,1.621,880,4.02,881,1.988,882,1.621,883,1.621,884,1.621,885,1.621,886,1.621,887,1.988,888,1.621,889,1.988,890,1.988,891,1.988,892,2.446,893,1.621,894,1.988,895,1.621,896,1.988,897,1.621,898,1.988]],["title/components/TaskItemComponent.html",[0,0.517,183,1.34]],["body/components/TaskItemComponent.html",[0,0.7,1,0.862,2,1.181,3,0.444,4,0.288,5,0.685,6,0.767,7,0.767,8,0.247,10,1.146,11,2.047,13,1.716,14,1.892,17,1.537,20,2.544,22,1.474,25,1.814,26,1.699,28,2.224,32,2.651,33,1.712,34,1.712,35,0.485,36,2.51,37,1.364,38,1.495,40,2.071,41,2.071,42,2.798,43,0.862,45,0.046,46,1.27,47,2.047,49,1.959,50,2.544,51,1.959,52,1.814,53,1.744,54,2.303,57,1.27,58,1.27,59,1.5,60,1.492,61,2.674,68,0.862,70,0.247,72,1.616,73,1.326,74,1.495,75,0.972,76,1.959,77,1.959,78,0.862,79,1.814,80,0.972,81,0.862,83,1.744,85,0.767,86,3.494,89,2.155,90,1.495,91,1.814,92,2.069,93,2.047,95,1.054,97,1.495,98,1.495,102,1.814,104,0.545,110,1.492,111,1.616,113,0.862,114,1.492,116,1.823,119,1.616,121,1.954,125,0.972,126,0.767,129,1.492,130,1.27,131,1.27,137,0.662,144,1.823,145,2.382,148,0.444,149,1.712,150,0.655,151,0.7,152,0.511,153,0.839,154,1.912,159,1.201,160,0.38,162,1.104,163,1.104,164,1.492,171,0.288,172,0.43,173,0.862,174,1.181,175,1.699,176,1.104,177,2.325,178,1.104,179,0.747,180,1.104,181,0.862,182,1.104,183,1.959,184,1.104,185,1.104,186,0.545,187,0.611,188,1.104,189,1.104,190,0.021,191,0.021,223,1.148,269,1.287,279,1.104,294,1.495,297,1.326,310,1.699,311,1.699,312,1.699,331,1.104,335,1.104,341,0.972,342,1.699,344,2.047,356,1.104,379,0.978,380,1.712,388,1.24,396,1.842,398,1.181,399,1.326,404,1.181,405,1.842,406,1.326,412,1.919,413,1.148,422,0.839,457,1.495,480,1.104,481,1.104,483,1.699,534,2.333,539,1.578,541,1.054,543,2.133,548,1.326,549,2.069,552,2.333,553,1.495,554,1.104,555,0.862,556,0.972,557,1.699,558,2.43,561,1.054,566,2.069,567,2.333,569,0.862,578,1.699,580,1.981,587,1.181,594,1.981,620,3.142,633,1.492,642,2.296,643,1.954,666,2.296,678,3.142,693,1.492,697,1.326,701,2.071,709,3.122,713,1.699,721,2.382,727,2.382,728,2.296,730,1.954,733,2.382,735,1.814,746,3.142,747,3.582,748,2.851,749,2.828,754,2.798,759,1.27,769,2.296,778,2.674,788,1.954,789,4.034,790,2.296,791,2.674,792,2.047,793,1.699,794,2.674,805,1.954,807,1.495,808,1.27,809,3.142,812,0.972,819,1.27,820,1.104,821,1.27,822,3.392,837,3.049,850,1.954,879,3.142,882,1.492,883,1.492,884,1.492,885,1.492,886,1.492,888,1.492,892,3.392,893,3.852,895,1.492,897,1.492,899,3.591,900,1.492,901,2.296,902,2.296,903,2.814,904,2.814,905,2.814,906,3.142,907,3.279,908,2.814,909,2.296,910,2.814,911,3.43,912,3.43,913,3.43,914,3.43,915,2.798,916,3.43,917,3.43,918,3.43,919,2.814,920,4.158,921,4.158,922,3.43,923,3.851,924,3.851,925,3.851,926,4.391,927,3.851,928,4.391,929,1.829,930,1.829,931,2.814,932,1.954,933,1.829,934,3.851,935,1.829,936,2.814,937,2.814,938,1.829,939,2.814,940,1.829,941,2.296,942,1.829,943,1.829,944,3.43,945,2.814,946,1.829,947,2.814,948,1.492,949,1.829,950,4.391,951,2.814,952,3.142,953,2.814,954,1.829,955,2.325,956,2.296,957,2.814,958,1.829,959,2.814,960,1.954,961,2.814,962,2.814,963,1.829,964,2.325,965,2.814,966,1.829,967,1.829,968,1.829,969,1.492,970,1.829,971,1.829,972,1.829,973,1.829,974,3.43,975,2.296,976,1.829,977,1.829,978,1.829,979,1.829,980,2.814,981,1.829,982,1.829,983,1.492,984,1.829,985,1.829,986,1.829,987,4.574,988,1.829,989,2.814,990,1.829,991,1.829,992,1.829,993,1.829,994,1.829,995,1.492,996,1.829,997,2.814,998,2.814,999,1.954,1000,2.814,1001,4.391,1002,4.391,1003,4.391,1004,2.814,1005,3.43,1006,2.814,1007,2.814,1008,2.814,1009,2.814,1010,4.391,1011,3.851,1012,2.814,1013,1.829,1014,1.829,1015,1.829,1016,3.43,1017,1.829,1018,1.829,1019,1.829,1020,1.829,1021,3.43,1022,1.829,1023,2.814,1024,1.829,1025,3.43,1026,1.829,1027,3.851,1028,1.829,1029,1.829,1030,1.829,1031,1.829,1032,1.829,1033,1.829,1034,1.829,1035,1.829,1036,2.814,1037,1.829,1038,1.829,1039,3.43,1040,1.829,1041,1.829,1042,1.829,1043,1.829,1044,1.829,1045,2.814,1046,1.829,1047,1.829]],["title/components/TaskListComponent.html",[0,0.517,43,1.34]],["body/components/TaskListComponent.html",[0,0.686,1,0.829,2,1.145,3,0.277,4,0.277,6,0.738,7,0.738,8,0.238,10,1.445,11,2.004,13,1.722,14,1.751,17,1.512,20,2.668,22,1.289,24,2.277,25,2.736,26,1.648,28,1.577,32,1.062,33,1.688,34,1.618,35,0.467,36,2.466,37,0.998,38,1.451,40,2.02,41,2.02,43,1.924,44,1.286,45,0.046,59,1.289,70,0.452,80,1.778,137,0.642,138,2.73,144,1.451,145,1.896,148,0.431,149,1.865,150,0.609,151,1.001,152,0.905,153,1.125,154,2.008,156,2.196,159,1.206,160,0.365,162,1.062,163,1.648,166,3.749,171,0.277,172,0.414,173,0.829,174,1.145,175,1.648,176,1.062,177,2.277,178,1.062,179,1.197,180,1.062,181,1.777,182,1.062,183,1.777,184,1.062,185,1.062,186,0.524,187,0.588,188,1.062,189,1.062,190,0.021,191,0.021,198,1.218,223,0.524,261,1.062,327,2.396,379,0.787,382,2.125,388,1.661,396,1.404,398,0.738,399,0.829,404,0.738,405,1.145,406,0.829,412,1.713,413,1.345,452,1.691,457,2.297,485,1.648,539,1.733,540,1.145,541,1.745,542,1.145,543,2.043,560,1.648,561,1.529,568,1.062,569,2.49,570,1.451,579,0.935,580,2.122,587,1.145,594,2.358,600,1.924,618,3.131,619,3.601,697,2.196,702,1.221,709,3.259,710,1.221,712,2.619,713,1.648,714,1.896,721,2.324,727,2.324,730,1.896,733,2.324,735,1.777,748,2.814,749,2.297,759,2.619,774,1.435,783,2.227,787,1.435,791,1.896,792,2.396,793,1.648,799,2.227,805,1.896,807,1.778,808,1.221,812,0.935,819,1.221,820,1.062,821,1.221,831,3.001,837,1.896,850,1.221,864,3.001,877,2.324,899,1.221,901,2.227,907,1.896,909,2.227,915,2.73,932,1.896,941,3.803,948,3.526,952,4.127,955,1.062,956,2.227,960,3.237,964,1.648,969,1.435,999,2.324,1048,1.435,1049,2.73,1050,2.73,1051,2.73,1052,2.73,1053,1.896,1054,4.322,1055,2.73,1056,2.73,1057,4.064,1058,3.397,1059,3.803,1060,4.084,1061,3.346,1062,3.346,1063,3.346,1064,2.73,1065,2.73,1066,2.73,1067,3.346,1068,2.73,1069,3.077,1070,4.322,1071,3.772,1072,4.322,1073,4.322,1074,4.322,1075,3.772,1076,4.322,1077,4.322,1078,2.73,1079,2.73,1080,2.73,1081,2.73,1082,2.73,1083,1.759,1084,4.345,1085,2.73,1086,2.227,1087,1.759,1088,2.73,1089,3.772,1090,2.73,1091,1.759,1092,5.185,1093,5.43,1094,5.238,1095,2.73,1096,3.772,1097,1.759,1098,4.322,1099,4.787,1100,1.759,1101,3.772,1102,1.759,1103,1.759,1104,4.51,1105,3.346,1106,1.759,1107,3.772,1108,1.759,1109,2.73,1110,1.759,1111,2.73,1112,2.73,1113,1.759,1114,3.346,1115,3.346,1116,2.73,1117,1.759,1118,2.73,1119,2.73,1120,2.73,1121,1.759,1122,2.73,1123,2.73,1124,4.322,1125,2.73,1126,2.73,1127,1.759,1128,2.73,1129,2.73,1130,2.73,1131,2.73,1132,2.227,1133,2.73,1134,2.73,1135,1.759,1136,2.73,1137,4.661,1138,3.077,1139,2.73,1140,3.772,1141,3.331,1142,1.759,1143,2.73,1144,2.227,1145,1.759,1146,1.759,1147,2.73,1148,2.227,1149,1.759,1150,1.759,1151,1.759,1152,1.759,1153,1.759,1154,1.759,1155,1.759,1156,1.759,1157,3.331,1158,1.759,1159,1.759,1160,1.759,1161,4.084,1162,1.759,1163,1.759,1164,1.759,1165,1.759,1166,1.759,1167,1.759,1168,1.759,1169,1.759,1170,1.759,1171,1.759,1172,1.435,1173,1.759,1174,1.759,1175,1.759,1176,1.759,1177,1.759,1178,2.73,1179,1.759,1180,1.759,1181,2.73,1182,1.759,1183,1.759,1184,1.759,1185,1.759,1186,1.759,1187,1.759,1188,1.759,1189,1.759,1190,1.759,1191,1.759,1192,1.759,1193,1.759,1194,3.772,1195,3.772,1196,3.772,1197,2.73,1198,2.73,1199,2.73,1200,2.73,1201,2.73,1202,2.73,1203,2.73,1204,2.227,1205,2.73]],["title/injectables/TaskService.html",[582,0.951,735,1.34]],["body/injectables/TaskService.html",[3,0.333,4,0.333,8,0.285,10,1.65,13,1.73,14,1.797,17,1.231,19,2.179,20,2.587,22,1.471,23,2.56,24,1.275,25,2.698,28,2.483,35,0.56,37,1.116,45,0.046,70,0.285,95,1.402,104,1.32,142,2.502,144,1.667,148,0.495,149,2.129,150,0.627,151,0.958,152,0.897,153,1.471,154,2.028,159,0.881,160,0.438,171,0.333,172,0.738,179,1.1,190,0.024,191,0.024,198,1.236,269,1.824,377,1.952,379,0.975,380,1.175,382,0.995,388,1.471,391,1.764,396,2.273,412,2.379,413,1.571,422,1.503,452,1.251,536,1.858,539,1.824,540,2.015,541,1.848,542,1.316,543,2.117,548,1.478,549,1.764,555,0.995,556,1.667,561,2.095,566,2.325,569,1.952,571,2.26,574,2.502,575,2.622,576,1.895,577,2.086,579,2.202,580,1.738,582,1.049,583,1.122,587,1.316,594,2.303,600,1.952,603,1.275,656,3.054,697,1.478,701,2.673,705,2.673,712,1.467,715,2.179,718,2.56,735,1.764,748,1.895,749,2.962,760,2.502,762,2.56,788,3.222,792,2.801,793,3.098,807,2.466,820,1.275,831,3.075,840,2.56,845,2.56,866,1.275,877,2.179,906,3.38,907,2.179,955,2.801,960,2.179,964,2.502,975,2.56,995,3.054,999,2.179,1053,2.179,1057,4.3,1058,2.6,1059,3.054,1068,1.723,1069,3.38,1084,4.385,1086,2.56,1132,1.723,1136,3.919,1138,4.113,1141,1.723,1144,3.785,1148,4.526,1157,3.054,1206,1.723,1207,3.138,1208,2.56,1209,3.138,1210,3.138,1211,3.138,1212,3.138,1213,3.138,1214,4.144,1215,5.206,1216,3.744,1217,4.64,1218,5.418,1219,3.744,1220,3.744,1221,3.744,1222,3.138,1223,3.138,1224,4.144,1225,3.138,1226,3.744,1227,3.138,1228,2.112,1229,3.138,1230,2.112,1231,3.138,1232,2.112,1233,2.56,1234,3.138,1235,3.138,1236,2.112,1237,3.138,1238,3.138,1239,3.138,1240,2.112,1241,4.144,1242,2.112,1243,4.428,1244,2.112,1245,2.112,1246,3.138,1247,4.144,1248,2.56,1249,3.138,1250,3.138,1251,2.112,1252,3.138,1253,4.428,1254,2.112,1255,3.138,1256,4.144,1257,4.144,1258,2.112,1259,4.64,1260,2.112,1261,3.138,1262,2.112,1263,3.138,1264,2.56,1265,3.138,1266,2.56,1267,3.138,1268,2.112,1269,3.138,1270,3.138,1271,1.723,1272,3.744,1273,2.112,1274,2.112,1275,3.138,1276,1.723,1277,1.723,1278,4.428,1279,3.138,1280,1.467,1281,2.56,1282,1.723,1283,3.138,1284,2.112,1285,2.112,1286,2.112,1287,3.744,1288,2.112,1289,2.112,1290,2.112,1291,2.112,1292,2.112,1293,3.138,1294,3.744,1295,3.138,1296,3.138,1297,2.112,1298,3.138,1299,2.112,1300,3.138,1301,3.138,1302,2.112,1303,2.112,1304,2.112,1305,2.112,1306,2.112,1307,2.112,1308,2.112,1309,2.112,1310,2.112,1311,2.112,1312,2.112,1313,2.112,1314,2.112,1315,2.112,1316,2.112]],["title/interfaces/Template.html",[137,0.669,192,0.59]],["body/interfaces/Template.html",[0,0.53,3,0.46,4,0.46,5,0.718,6,0.805,7,0.805,8,0.698,22,0.572,33,0.718,35,0.509,37,1.053,44,0.904,45,0.046,47,1.877,48,1.158,49,2.461,50,2.578,51,1.664,52,1.664,53,2.252,54,2.268,56,1.551,59,1.539,66,1.158,68,0.904,70,0.259,72,1.782,73,1.664,74,1.877,75,1.877,76,2.191,77,2.108,78,2.191,79,1.664,81,1.375,83,1.951,84,1.877,85,2.166,89,1.86,90,1.019,91,0.904,92,2.563,93,2.661,94,1.158,97,2.257,98,1.019,99,1.158,100,1.158,101,1.158,102,0.904,104,1.177,105,2.384,107,2.133,111,2.268,112,2.472,113,2.191,116,2.257,119,0.805,122,2.701,125,1.019,126,1.482,137,1.353,140,1.158,148,0.557,149,0.718,150,0.664,151,0.983,152,0.718,159,0.999,160,0.398,171,0.302,172,0.451,179,1.048,186,0.572,187,1.725,190,0.022,191,0.022,192,0.733,193,1.551,194,0.805,195,0.641,196,0.805,197,1.158,199,1.332,200,1.332,201,1.332,202,1.332,203,1.332,204,1.332,205,1.332,206,1.332,207,1.332,208,1.332,209,1.332,210,1.332,211,1.332,212,1.332,213,1.332,214,1.332,215,1.332,216,1.332,217,1.332,218,1.332,219,1.332,220,1.332,221,1.332,222,2.027,223,1.667,224,2.027,225,1.332,226,2.453,227,2.027,228,2.027,229,1.158,230,1.093,231,1.158,232,1.093,233,1.877,234,1.158,235,1.093,236,0.904,237,1.158,238,2.257,239,2.133,240,2.257,241,2.027,242,2.027,243,1.332,244,1.332,245,1.332,246,2.95,247,2.027,248,2.027,249,2.027,250,1.332,251,2.609,252,1.664,253,2.133,254,2.705,255,1.375,256,1.332,257,2.027,258,1.332,259,1.158,260,2.027,261,1.158,262,3.778,263,0.904,264,2.453,265,0.805,266,1.019,267,1.332,268,0.805,269,1.725,270,1.332,271,1.332,272,1.158,273,1.332,274,1.332,275,1.762,276,2.453,277,1.332,278,2.027,279,2.133,280,1.332,281,1.332,282,1.158,283,2.565,284,2.027,285,1.762,286,1.332,287,1.158,288,1.332,289,1.332,290,1.158,291,1.332,292,1.158,293,1.158,294,2.257,295,2.741,296,2.741,297,1.86,298,3.107,299,1.332,300,3.23,301,2.95,302,1.332,303,2.027,304,1.332,305,1.332,306,2.453,307,3.41,308,1.332,309,2.027,310,2.133,311,1.158,312,2.133,313,1.332,314,1.332,315,1.762,316,2.027,317,1.332,318,1.332,319,1.332,320,1.332,321,1.332,322,1.158,323,1.158,324,1.332,325,1.332,326,1.877,327,2.472,328,1.332,329,2.453,330,1.332,331,2.133,332,2.453,333,1.332,334,2.027,335,1.762,336,2.453,337,2.027,338,1.332,339,1.332,340,2.133,341,2.377,342,1.762,343,2.027,344,1.019,345,3.107,346,1.332,347,2.384,348,2.027,349,2.027,350,1.332,351,1.332,352,1.332,353,1.332,354,2.894,355,1.332,356,1.158,357,2.027,358,1.332,359,1.332,360,1.332,361,1.332,362,1.332,363,1.332,364,1.332,365,1.332,366,1.332,367,1.332,368,1.332,369,1.332,370,1.332,371,1.332,372,2.027,373,1.332,374,1.332,375,1.332,376,1.332,377,1.86,378,1.332,379,0.929,380,1.093,381,1.332,382,1.375,383,1.332,384,1.332,385,1.332,386,1.332,387,1.332,388,1.464,389,3.478,390,1.332,391,0.904,392,1.332,393,1.332,394,1.332,395,1.332,396,2.011,397,1.158,398,1.877,399,2.398,400,1.332,401,1.332,402,1.332,403,1.332,404,1.782,405,2.101,406,2.001,407,1.332,408,1.332,409,2.453,410,2.027,411,1.332,412,1.877,413,1.539,414,3.728,415,1.332,416,2.741,417,3.107,418,1.332,419,1.332,420,1.332,421,2.453,422,1.266,423,2.453,424,2.133,425,1.332,426,1.332,427,1.332,428,1.332,429,1.332,430,1.332,431,1.332,432,2.741,433,1.332,434,1.332,435,1.332,436,2.027,437,1.332,438,1.158,439,1.332,440,1.762,441,1.019,442,1.332,443,2.453,444,1.019,445,1.332,446,1.332,447,1.332,448,1.332,449,1.332,450,1.093,451,1.332,452,1.32,453,1.158,454,1.332,455,1.332,456,2.453,457,1.019,458,1.332,459,1.332,460,1.332,461,1.332,462,1.332,463,1.332,464,1.332,465,1.332,466,1.332,467,0.805,468,1.332,469,1.332,470,1.332,471,1.332,472,2.027,473,1.332,474,1.332,475,2.027,476,1.332,477,1.332,478,1.332,479,1.332,480,1.158,481,1.158,482,1.158,483,1.158,484,1.332,485,1.158,486,1.332,487,1.158,488,1.332,489,1.332,490,1.332,491,1.332,492,1.158,493,1.019,494,1.158,495,1.332,496,2.098,497,1.332,498,1.019,499,1.332,500,1.332,501,1.332,502,1.332,503,1.332,504,1.762,505,1.332,506,2.027,507,1.332,508,2.384,509,1.332,510,1.332,511,2.027,512,1.332,513,1.332,514,1.332,515,2.027,516,1.332,517,1.332,518,1.332,519,1.332,520,1.551,521,1.332,522,1.158,523,1.158,524,1.158,525,1.158,526,1.158,527,1.158,528,1.332,529,1.332,530,1.332,531,1.332,532,1.332,533,1.332,534,1.019,535,1.332]],["title/injectables/TemplateEditorService.html",[230,1.065,582,0.951]],["body/injectables/TemplateEditorService.html",[3,0.486,4,0.486,8,0.416,35,1.086,37,1.595,44,1.451,45,0.046,70,0.416,72,1.292,148,0.645,150,0.709,151,1.036,152,0.744,153,1.52,154,2.034,159,0.725,160,0.639,171,0.486,172,0.725,174,1.717,179,1.3,190,0.031,191,0.031,195,1.839,196,2.307,198,1.461,230,1.532,236,1.451,259,1.859,269,1.885,341,1.636,347,3.079,377,2.403,379,1.082,388,1.563,413,1.371,438,2.471,440,1.859,441,1.636,444,1.636,450,1.909,452,1.816,561,1.153,582,1.368,583,1.636,587,1.717,594,2.199,600,2.308,602,2.138,603,1.859,608,3.339,618,2.138,619,3.541,687,3.339,878,2.138,1280,2.138,1317,2.138,1318,4.597,1319,4.899,1320,4.093,1321,4.899,1322,4.093,1323,4.093,1324,3.08,1325,4.093,1326,3.08,1327,5.1,1328,4.093,1329,4.597,1330,3.08,1331,3.08,1332,4.093,1333,3.08,1334,4.093,1335,3.08,1336,4.093,1337,3.08,1338,3.08,1339,3.08,1340,3.192,1341,3.08,1342,4.899,1343,3.08,1344,5.1,1345,3.08,1346,3.08,1347,3.08,1348,3.08,1349,4.093,1350,3.08,1351,3.08,1352,3.08,1353,3.08,1354,3.08,1355,3.08,1356,3.08,1357,3.08,1358,3.08,1359,3.08,1360,3.08,1361,4.093,1362,3.08,1363,3.08,1364,3.08,1365,3.339,1366,3.08,1367,3.08,1368,3.08,1369,3.08,1370,3.08,1371,3.08,1372,3.08,1373,4.093,1374,3.08,1375,3.08,1376,3.08,1377,3.08,1378,3.08,1379,3.08,1380,3.08,1381,3.339,1382,2.512,1383,2.512,1384,2.512,1385,3.08,1386,2.512,1387,3.08,1388,3.08,1389,3.08,1390,3.08,1391,3.08,1392,3.08,1393,3.08,1394,4.093,1395,4.093,1396,4.093,1397,3.08,1398,4.597,1399,4.597,1400,3.08,1401,3.08,1402,3.08,1403,3.08,1404,3.08,1405,4.093,1406,4.597,1407,4.597,1408,4.899,1409,3.08,1410,3.08,1411,3.08,1412,3.08,1413,3.08,1414,5.555,1415,5.434,1416,3.08,1417,3.08]],["title/modules/TemplatePlaygroundModule.html",[640,1.717,1418,1.717]],["body/modules/TemplatePlaygroundModule.html",[3,0.642,4,0.642,8,0.55,38,2.162,45,0.046,137,1.149,159,1.36,160,0.844,171,0.642,172,0.957,173,1.917,186,1.746,190,0.037,191,0.037,195,1.36,196,1.707,229,2.457,230,2.108,231,2.457,232,2.108,233,2.162,234,2.457,235,2.108,236,1.917,237,2.457,252,1.917,268,1.707,640,2.457,641,2.457,811,2.826,812,2.162,1418,3.547,1419,4.266,1420,3.158,1421,3.632,1422,3.319,1423,3.319,1424,3.319,1425,3.319,1426,3.319,1427,3.982,1428,3.319,1429,4.069,1430,4.882,1431,4.882,1432,3.319,1433,2.457,1434,4.882,1435,4.882,1436,4.882,1437,4.069]],["title/interfaces/UpdateTaskRequest.html",[192,0.59,577,1.34]],["body/interfaces/UpdateTaskRequest.html",[3,0.512,4,0.512,8,0.439,10,1.812,13,1.742,14,1.933,17,0.862,45,0.046,70,0.439,95,1.992,148,0.668,150,0.793,151,1.057,152,0.858,156,2.357,171,0.744,190,0.032,191,0.032,192,1.077,194,1.363,198,1.672,223,1.587,379,0.764,380,2.128,536,1.778,537,1.961,538,3.277,539,1.779,540,1.363,541,1.767,542,2.177,543,2.183,544,2.256,545,1.961,546,2.256,547,1.961,548,2.507,549,2.507,550,2.658,551,2.658,552,2.828,553,2.658,554,3.319,555,2.642,556,2.921,557,3.02,558,2.658,559,2.256,560,1.961,561,1.216,562,2.256,563,2.256,564,3.355,565,2.256,566,1.53,567,1.726,568,1.961,569,2.445,570,1.726,571,1.961,572,2.256,573,2.256,574,1.961,575,2.253,576,2.559,577,2.223,578,3.213,579,2.658,580,1.778,581,2.944]],["title/injectables/ZipExportService.html",[232,1.065,582,0.951]],["body/injectables/ZipExportService.html",[3,0.562,4,0.562,5,1.846,8,0.7,21,2.909,35,0.946,45,0.046,56,1.895,70,0.482,104,1.342,118,2.477,126,1.496,137,1.219,150,0.667,151,0.971,154,1.846,159,0.839,160,0.74,171,0.562,172,0.839,174,1.496,179,1.194,187,1.192,190,0.034,191,0.034,195,1.731,198,1.342,232,1.685,233,2.838,236,1.68,238,1.895,239,2.153,253,2.153,254,3.045,255,2.609,269,1.823,287,2.153,388,1.063,413,1.592,422,1.063,444,1.895,450,1.685,452,1.505,467,2.069,487,2.718,493,1.895,504,3.293,508,3.127,520,2.392,522,2.153,523,2.153,524,2.153,525,2.153,526,2.153,527,2.153,582,1.505,583,1.895,587,1.888,594,2.069,600,2.121,602,2.477,603,2.153,638,2.909,668,3.672,679,2.909,866,2.153,873,2.909,875,3.425,878,3.425,983,3.672,1280,3.126,1365,2.909,1381,4.023,1383,3.672,1384,4.023,1438,3.597,1439,2.477,1440,4.501,1441,4.501,1442,5.18,1443,4.501,1444,3.566,1445,4.501,1446,3.566,1447,5.602,1448,3.566,1449,3.126,1450,3.566,1451,3.566,1452,3.566,1453,4.023,1454,3.566,1455,3.566,1456,3.566,1457,2.909,1458,3.566,1459,3.566,1460,3.566,1461,3.566,1462,3.566,1463,3.566,1464,3.566,1465,3.566,1466,3.566,1467,3.566,1468,3.566,1469,4.501,1470,3.566,1471,4.501,1472,3.566,1473,3.566,1474,3.566,1475,5.18,1476,3.566,1477,3.566,1478,2.909,1479,2.909,1480,3.566,1481,3.566,1482,3.566,1483,4.932,1484,3.566,1485,3.566,1486,3.566,1487,3.566,1488,3.566,1489,3.566,1490,3.566,1491,4.501,1492,3.566,1493,3.566,1494,3.566,1495,3.566,1496,3.566,1497,3.566,1498,3.566,1499,3.566,1500,3.566,1501,3.566,1502,3.566,1503,3.566,1504,3.566]],["title/coverage.html",[266,2.061]],["body/coverage.html",[0,0.991,1,1.802,8,0.517,9,3.12,17,1.015,34,1.432,43,1.802,45,0.045,59,1.766,80,2.987,137,0.9,150,0.517,166,2.655,181,1.802,183,1.802,186,1.14,190,0.036,191,0.036,192,1.152,193,2.032,195,1.924,196,2.328,197,3.206,230,1.432,232,1.432,235,1.432,240,2.032,251,2.032,265,1.604,266,2.032,422,1.14,450,1.432,467,1.604,536,1.604,537,3.073,577,1.802,582,1.775,584,3.264,585,3.264,709,3.073,710,2.655,711,3.12,735,1.802,899,2.655,900,3.12,1048,3.12,1206,3.12,1317,3.264,1340,2.655,1420,2.309,1438,3.264,1439,3.264,1449,2.655,1505,3.824,1506,3.824,1507,3.824,1508,5.851,1509,5.833,1510,3.824,1511,3.824,1512,3.824,1513,5.09,1514,3.824,1515,3.835,1516,3.12,1517,3.12,1518,3.12,1519,3.12,1520,3.12,1521,3.12,1522,3.824,1523,3.824,1524,3.824,1525,3.824,1526,3.824,1527,3.824,1528,3.824,1529,3.824,1530,3.824,1531,3.12,1532,4.447,1533,3.12,1534,3.12,1535,3.12,1536,3.824,1537,3.12,1538,3.824,1539,3.824]],["title/dependencies.html",[268,1.435,496,1.262]],["body/dependencies.html",[45,0.045,160,0.919,190,0.039,191,0.039,268,1.859,498,2.354,811,3.076,812,2.354,1271,3.614,1432,4.421,1433,3.099,1540,4.43,1541,5.133,1542,5.825,1543,4.43,1544,3.614,1545,4.43,1546,4.43,1547,4.43,1548,4.43,1549,3.614,1550,4.43,1551,4.43,1552,4.43,1553,4.43,1554,4.43,1555,4.43]],["title/index.html",[70,0.384,1453,2.32]],["body/index.html",[0,0.811,2,1.219,11,2.372,12,3.212,13,1.686,14,1.762,15,3.473,17,1.483,18,3.473,20,2.527,22,1.427,24,2.696,25,2.484,28,2.103,34,1.474,45,0.046,104,0.867,118,3.1,141,2.371,142,3.374,143,3.904,144,2.657,146,2.371,165,3.642,190,0.03,191,0.03,255,2.484,290,2.377,327,2.372,422,0.867,441,2.543,467,1.219,534,2.372,539,1.837,540,2.098,541,1.671,542,1.219,543,1.088,547,2.377,550,1.544,551,1.544,567,1.544,575,1.544,639,4.375,697,2.484,701,3.019,702,2.018,704,2.371,705,1.755,713,1.755,714,2.734,715,2.018,719,3.642,749,1.544,756,2.371,757,3.212,760,2.377,771,3.212,778,2.018,780,3.212,785,2.371,792,2.092,794,2.018,807,2.092,864,3.1,866,1.755,875,2.018,902,2.371,932,2.018,955,2.377,964,1.755,1053,2.018,1058,2.018,1172,3.212,1204,2.371,1208,2.371,1248,4.079,1264,3.212,1266,2.371,1276,3.642,1277,4.375,1281,3.642,1282,2.371,1382,3.212,1386,2.371,1457,3.904,1478,2.371,1479,3.642,1544,2.371,1556,5.001,1557,4.785,1558,2.906,1559,2.906,1560,2.906,1561,2.906,1562,2.906,1563,4.465,1564,2.906,1565,2.906,1566,2.906,1567,2.906,1568,2.906,1569,2.906,1570,3.937,1571,3.937,1572,3.937,1573,3.937,1574,2.906,1575,2.906,1576,2.906,1577,5.749,1578,2.906,1579,4.785,1580,5.363,1581,2.906,1582,5.272,1583,2.906,1584,5.001,1585,2.906,1586,2.906,1587,2.906,1588,2.906,1589,2.906,1590,3.937,1591,2.906,1592,4.785,1593,4.465,1594,2.906,1595,4.785,1596,4.465,1597,4.785,1598,2.906,1599,2.906,1600,2.906,1601,5.436,1602,2.906,1603,2.906,1604,2.906,1605,3.937,1606,3.937,1607,5.272,1608,2.906,1609,2.906,1610,2.906,1611,2.906,1612,2.906,1613,5.363,1614,2.906,1615,2.906,1616,2.906,1617,2.906,1618,2.906,1619,2.906,1620,3.937,1621,2.906,1622,2.906,1623,2.906,1624,2.906,1625,2.906,1626,2.906,1627,2.906,1628,2.906,1629,3.937,1630,2.906,1631,2.906,1632,3.937,1633,2.906,1634,2.906,1635,2.906,1636,2.906,1637,2.371,1638,2.906,1639,2.906,1640,2.906,1641,2.906,1642,2.906,1643,2.906,1644,2.906,1645,2.906,1646,2.906,1647,2.906,1648,2.906,1649,2.906,1650,2.906,1651,2.906,1652,2.906,1653,2.906,1654,2.906,1655,2.906,1656,2.906,1657,2.906,1658,2.906,1659,4.465,1660,2.906,1661,2.906,1662,2.906,1663,2.906,1664,2.906,1665,2.906,1666,2.906,1667,2.906,1668,2.906,1669,2.906,1670,2.906,1671,2.906,1672,2.906,1673,3.937,1674,2.906,1675,2.906,1676,2.906,1677,2.906,1678,2.906,1679,2.906,1680,2.906,1681,2.906,1682,2.906,1683,2.906,1684,2.906,1685,2.906,1686,3.937,1687,2.906,1688,2.906,1689,2.906,1690,3.937,1691,4.465,1692,3.937,1693,3.937,1694,2.906,1695,2.906,1696,2.906]],["title/modules.html",[641,2.342]],["body/modules.html",[45,0.04,190,0.04,191,0.04,641,2.797,1418,2.797,1433,2.797,1697,4.633,1698,4.633,1699,4.633]],["title/overview.html",[263,1.828]],["body/overview.html",[2,1.846,45,0.044,59,1.312,104,1.312,173,2.073,186,1.724,190,0.039,191,0.039,194,1.846,230,2.023,232,2.023,235,2.023,252,2.073,263,2.073,268,1.846,583,2.338,640,3.086,1418,3.558,1419,3.589,1420,2.656,1421,3.055,1422,3.589,1423,3.589,1424,3.589,1425,3.589,1426,3.589,1427,4.17,1428,3.589,1700,4.399,1701,4.399,1702,4.399]],["title/properties.html",[148,0.539,496,1.262]],["body/properties.html",[45,0.042,123,3.788,148,0.732,190,0.04,191,0.04,1703,4.643]],["title/routes.html",[265,1.627]],["body/routes.html",[45,0.04,190,0.04,191,0.04,265,1.954]],["title/miscellaneous/variables.html",[1704,1.938,1705,2.79]],["body/miscellaneous/variables.html",[13,1.179,22,1.179,34,1.796,37,1.179,45,0.046,70,0.534,142,2.387,150,0.765,152,1.056,153,1.733,190,0.036,191,0.036,195,1.726,196,1.659,238,2.101,251,2.745,265,2.167,422,1.179,450,1.796,498,2.101,539,1.321,584,2.745,585,3.331,628,3.914,760,2.387,1233,3.225,1317,3.331,1340,3.331,1420,2.896,1421,3.331,1433,2.387,1438,2.745,1439,3.331,1449,3.331,1515,3.225,1516,4.213,1517,3.225,1518,3.914,1519,3.225,1520,3.914,1521,3.225,1531,3.225,1532,3.225,1533,3.914,1534,3.914,1535,3.914,1537,3.914,1549,3.225,1637,3.225,1704,3.225,1705,3.225,1706,5.502,1707,3.953,1708,3.953,1709,4.797,1710,3.953,1711,3.953,1712,3.953,1713,3.953,1714,3.953,1715,3.953,1716,3.953,1717,3.953,1718,3.953,1719,3.953,1720,3.953,1721,3.953,1722,3.953,1723,3.953,1724,3.953,1725,3.953,1726,3.953,1727,3.953,1728,4.797,1729,3.953,1730,3.953,1731,3.953,1732,3.953,1733,3.953,1734,3.953,1735,3.953,1736,3.953,1737,3.953,1738,3.953,1739,3.953,1740,3.953]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":1703,"title":{},"body":{"properties.html":{}}}],["0.0.0.0",{"_index":1621,"title":{},"body":{"index.html":{}}}],["0.1",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{}}}],["0.125rem",{"_index":351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15",{"_index":1014,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.15.0",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.25rem",{"_index":357,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.375rem",{"_index":355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":311,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["0.5px",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":307,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.6",{"_index":1047,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.7",{"_index":343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.8",{"_index":1017,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.85rem",{"_index":1032,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.875rem",{"_index":300,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.9rem",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1029,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["004085",{"_index":361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["1.1rem",{"_index":1024,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.2rem",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["1.4",{"_index":1026,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.5",{"_index":1031,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.5rem",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1.8rem",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["1000",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["100vh",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":673,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{}}}],["12/13",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["1200px",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["120px",{"_index":891,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["12px",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["13/13",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1352,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["140px",{"_index":890,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["15/16",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["19",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["19.2.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["19.2.16",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["19.2.19",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["19.x",{"_index":1657,"title":{},"body":{"index.html":{}}}],["19/19",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["1976d2",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["1c7430",{"_index":368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":321,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2",{"_index":1280,"title":{},"body":{"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["2.3.0",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":313,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["20px",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{}}}],["212121",{"_index":1039,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["218",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["22",{"_index":1665,"title":{},"body":{"index.html":{}}}],["250px",{"_index":325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["259200000",{"_index":1284,"title":{},"body":{"injectables/TaskService.html":{}}}],["28a745",{"_index":306,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2px",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["2rem",{"_index":295,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":866,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["3/3",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["300ms",{"_index":385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["30px",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["3600000",{"_index":1283,"title":{},"body":{"injectables/TaskService.html":{}}}],["4",{"_index":1701,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["4200",{"_index":1679,"title":{},"body":{"index.html":{}}}],["42005",{"_index":1623,"title":{},"body":{"index.html":{}}}],["480px",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["495057",{"_index":330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":895,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["4e555b",{"_index":365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1700,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["500",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["545b62",{"_index":364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["56",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":1702,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["600px",{"_index":881,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["666",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["667eea",{"_index":885,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["6c757d",{"_index":301,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7.8.0",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["764ba2",{"_index":886,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["768px",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["8",{"_index":245,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["86400000",{"_index":1279,"title":{},"body":{"injectables/TaskService.html":{}}}],["8px",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["9/9",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["_nextid",{"_index":1216,"title":{},"body":{"injectables/TaskService.html":{}}}],["_tasks",{"_index":1217,"title":{},"body":{"injectables/TaskService.html":{}}}],["a.click",{"_index":526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.href",{"_index":523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.style.display",{"_index":1503,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a5d6a7",{"_index":1041,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["a:hover",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":858,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["acceder",{"_index":1266,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["acceptsuggestiononenter",{"_index":1368,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["acceso",{"_index":756,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["acción",{"_index":1186,"title":{},"body":{"components/TaskListComponent.html":{}}}],["action",{"_index":483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["activar",{"_index":782,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["active",{"_index":491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actual",{"_index":952,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["actual_component",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["actualiza",{"_index":959,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["actualización",{"_index":573,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualizada",{"_index":579,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualizado",{"_index":578,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualizar",{"_index":575,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["actualmente",{"_index":1095,"title":{},"body":{"components/TaskListComponent.html":{}}}],["add",{"_index":875,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["add_task",{"_index":860,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["additional",{"_index":1472,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["adicionales",{"_index":1629,"title":{},"body":{"index.html":{}}}],["again",{"_index":494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["agreg",{"_index":1175,"title":{},"body":{"components/TaskListComponent.html":{}}}],["agregando",{"_index":1170,"title":{},"body":{"components/TaskListComponent.html":{}}}],["agregar",{"_index":1563,"title":{},"body":{"index.html":{}}}],["al",{"_index":864,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["align",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["already",{"_index":1389,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["alta",{"_index":872,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["alterna",{"_index":939,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["alternado",{"_index":962,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["alternar",{"_index":906,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["always",{"_index":1365,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["angular",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":812,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":229,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":811,"title":{},"body":{"components/TaskFormComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1544,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/material/badge",{"_index":1149,"title":{},"body":{"components/TaskListComponent.html":{}}}],["angular/material/button",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/card",{"_index":819,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/checkbox",{"_index":968,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["angular/material/chips",{"_index":969,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/core",{"_index":818,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/datepicker",{"_index":817,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/divider",{"_index":971,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["angular/material/form",{"_index":813,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/icon",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/input",{"_index":815,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/menu",{"_index":970,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["angular/material/progress",{"_index":1150,"title":{},"body":{"components/TaskListComponent.html":{}}}],["angular/material/select",{"_index":816,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/toolbar",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/tooltip",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["angular/platform",{"_index":1432,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":1044,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["apis",{"_index":1213,"title":{},"body":{"injectables/TaskService.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"index.html":{}}}],["aplicado",{"_index":1096,"title":{},"body":{"components/TaskListComponent.html":{}}}],["aplicar",{"_index":1125,"title":{},"body":{"components/TaskListComponent.html":{}}}],["app",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app/frontend",{"_index":1670,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":1470,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":286,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["applicationconfig",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationtitle",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["applicationversion",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["args",{"_index":647,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":649,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":648,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arial",{"_index":669,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arquitectura",{"_index":1566,"title":{},"body":{"index.html":{}}}],["array",{"_index":1105,"title":{},"body":{"components/TaskListComponent.html":{}}}],["assignment",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{}}}],["async",{"_index":396,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["asíncronas",{"_index":965,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["attribute.name",{"_index":1406,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":1408,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["author",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["autoclosingbrackets",{"_index":1364,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":1413,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":1366,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatically",{"_index":469,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":1347,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automáticamente",{"_index":547,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["await",{"_index":399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["aún",{"_index":1163,"title":{},"body":{"components/TaskListComponent.html":{}}}],["b",{"_index":1689,"title":{},"body":{"index.html":{}}}],["background",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["backup",{"_index":1491,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["badge",{"_index":350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["baja",{"_index":869,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["basadas",{"_index":1214,"title":{},"body":{"injectables/TaskService.html":{}}}],["basado",{"_index":942,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["bash",{"_index":1478,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["bashcomandos",{"_index":1628,"title":{},"body":{"index.html":{}}}],["basheste",{"_index":1598,"title":{},"body":{"index.html":{}}}],["basic",{"_index":667,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["before",{"_index":1494,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["behaviorsubject",{"_index":1253,"title":{},"body":{"injectables/TaskService.html":{}}}],["between",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["blinkmacsystemfont",{"_index":288,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["blockcomment",{"_index":1411,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["body",{"_index":323,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bold",{"_index":305,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["bootstrap",{"_index":1420,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrapcontext",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["bottom",{"_index":297,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["box",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["brackets",{"_index":1412,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["brand",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["branding",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":620,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["browse",{"_index":1699,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1433,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":1431,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["btn",{"_index":354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["build",{"_index":1637,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":1036,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["básica",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["cada",{"_index":1569,"title":{},"body":{"index.html":{}}}],["calcula",{"_index":1088,"title":{},"body":{"components/TaskListComponent.html":{}}}],["call",{"_index":497,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":1336,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["cambi",{"_index":1119,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cambio",{"_index":1118,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cambios",{"_index":1673,"title":{},"body":{"index.html":{}}}],["campo",{"_index":770,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["campos",{"_index":545,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["caracteres",{"_index":867,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["características",{"_index":903,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["card",{"_index":880,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["carga",{"_index":791,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["cargando",{"_index":1203,"title":{},"body":{"components/TaskListComponent.html":{}}}],["case",{"_index":619,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskListComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["catch",{"_index":404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["cd",{"_index":1590,"title":{},"body":{"index.html":{}}}],["center",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["change",{"_index":444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["changes",{"_index":1496,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["check",{"_index":678,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["check_circle",{"_index":1161,"title":{},"body":{"components/TaskListComponent.html":{}}}],["check_circle_outline",{"_index":1162,"title":{},"body":{"components/TaskListComponent.html":{}}}],["checkbox",{"_index":1022,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["checkout",{"_index":1688,"title":{},"body":{"index.html":{}}}],["class",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["class=\"tasks",{"_index":1205,"title":{},"body":{"components/TaskListComponent.html":{}}}],["clear",{"_index":453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["clear_all",{"_index":1201,"title":{},"body":{"components/TaskListComponent.html":{}}}],["clearalltasks",{"_index":1069,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["cleartimeout(this.savetimeout",{"_index":410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":692,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["clonar",{"_index":1587,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1589,"title":{},"body":{"index.html":{}}}],["close",{"_index":1415,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["cloud",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":1423,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":1425,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":1424,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":1426,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["color",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["colors",{"_index":1488,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["column",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":317,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["comando",{"_index":1593,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1626,"title":{},"body":{"index.html":{}}}],["comienza",{"_index":1169,"title":{},"body":{"components/TaskListComponent.html":{}}}],["comment",{"_index":1398,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":1361,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["commit",{"_index":1692,"title":{},"body":{"index.html":{}}}],["common",{"_index":609,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":1434,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["como",{"_index":780,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["compara",{"_index":951,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["compare",{"_index":613,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["completa",{"_index":794,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"index.html":{}}}],["completada",{"_index":568,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["completadas",{"_index":1058,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["completado",{"_index":907,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["complete",{"_index":662,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["completed",{"_index":569,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["completedtaskscount",{"_index":1219,"title":{},"body":{"injectables/TaskService.html":{}}}],["completion",{"_index":980,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["completitud",{"_index":1090,"title":{},"body":{"components/TaskListComponent.html":{}}}],["completo",{"_index":1594,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":255,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["compodoc/compodoc4",{"_index":1617,"title":{},"body":{"index.html":{}}}],["compodocconfig",{"_index":193,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["componentes",{"_index":1281,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/task",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["compose",{"_index":1582,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1642,"title":{},"body":{"index.html":{}}}],["computada",{"_index":1144,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["computed",{"_index":1136,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["con",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["conditional",{"_index":625,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conecta",{"_index":1603,"title":{},"body":{"index.html":{}}}],["config",{"_index":251,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":1578,"title":{},"body":{"index.html":{}}}],["configurar",{"_index":1275,"title":{},"body":{"injectables/TaskService.html":{}}}],["configuration",{"_index":256,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirm",{"_index":1182,"title":{},"body":{"components/TaskListComponent.html":{}}}],["confirm('are",{"_index":479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirm(`are",{"_index":986,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["confirmación",{"_index":956,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["confirmation",{"_index":981,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["confirmed",{"_index":1181,"title":{},"body":{"components/TaskListComponent.html":{}}}],["consiste",{"_index":1558,"title":{},"body":{"index.html":{}}}],["console.error('error",{"_index":406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["console.error('no",{"_index":490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log",{"_index":1179,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('creating",{"_index":495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('nueva",{"_index":1177,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('reset",{"_index":488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('tarea",{"_index":1180,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('template",{"_index":529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('todas",{"_index":1190,"title":{},"body":{"components/TaskListComponent.html":{}}}],["const",{"_index":413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":510,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["constructors",{"_index":274,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["construye",{"_index":1599,"title":{},"body":{"index.html":{}}}],["consulta",{"_index":1683,"title":{},"body":{"index.html":{}}}],["contador",{"_index":1246,"title":{},"body":{"injectables/TaskService.html":{}}}],["container",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["containerización",{"_index":1663,"title":{},"body":{"index.html":{}}}],["containerization",{"_index":1576,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1483,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["contains",{"_index":1462,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["contenedor",{"_index":1601,"title":{},"body":{"index.html":{}}}],["contenido",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["contentdisposition",{"_index":511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1465,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["conteo",{"_index":1259,"title":{},"body":{"injectables/TaskService.html":{}}}],["context",{"_index":628,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/variables.html":{}}}],["contiene",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["contribución",{"_index":1681,"title":{},"body":{"index.html":{}}}],["control",{"_index":755,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["control?.markastouched",{"_index":857,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["controlname",{"_index":758,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["correspondiente",{"_index":1107,"title":{},"body":{"components/TaskListComponent.html":{}}}],["coverage",{"_index":266,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["crea",{"_index":750,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["creación",{"_index":570,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["creada",{"_index":999,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["creando",{"_index":876,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["crear",{"_index":540,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["create",{"_index":424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["created",{"_index":420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createdat",{"_index":571,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["createnoderequesthandler(app",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsession",{"_index":411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createtask",{"_index":1222,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtask(taskrequest",{"_index":1229,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskrequest",{"_index":536,"title":{"interfaces/CreateTaskRequest.html":{}},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["creating",{"_index":849,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["creation",{"_index":500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crud",{"_index":1053,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["css",{"_index":1381,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["cualquier",{"_index":1682,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":748,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["currentfilter",{"_index":1067,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cursor",{"_index":334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["custom",{"_index":878,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["customfavicon",{"_index":199,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customization",{"_index":1484,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customization.html",{"_index":1500,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":1486,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":1463,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":1469,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["d",{"_index":1595,"title":{},"body":{"index.html":{}}}],["dark",{"_index":259,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["data",{"_index":598,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["date",{"_index":380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["date(date.now",{"_index":1278,"title":{},"body":{"injectables/TaskService.html":{}}}],["date(this.task().duedate",{"_index":996,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["date.overdue",{"_index":1035,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["date:'short",{"_index":250,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datepipe",{"_index":911,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["datos",{"_index":788,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["dd",{"_index":1002,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ddd",{"_index":670,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":862,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["debounce",{"_index":386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["declarations",{"_index":1419,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":602,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["dee2e6",{"_index":298,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["default",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":703,"title":{},"body":{"interfaces/Task.html":{}}}],["defined",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["definitions",{"_index":1375,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["del",{"_index":697,"title":{},"body":{"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["delete",{"_index":987,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["deleted",{"_index":989,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["deletetask",{"_index":1223,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":1231,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleting",{"_index":992,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["delimiter",{"_index":1407,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":684,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["demostración",{"_index":1238,"title":{},"body":{"injectables/TaskService.html":{}}}],["dentro",{"_index":1605,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":268,"title":{"dependencies.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":632,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["desarrollado",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["desarrollar",{"_index":1282,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["desarrollo",{"_index":1580,"title":{},"body":{"index.html":{}}}],["descargar",{"_index":1588,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":550,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["descriptivo",{"_index":948,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["desde",{"_index":757,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["deshacer",{"_index":1188,"title":{},"body":{"components/TaskListComponent.html":{}}}],["design",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["después",{"_index":1085,"title":{},"body":{"components/TaskListComponent.html":{}}}],["destroy",{"_index":1319,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["detallada",{"_index":563,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["detener",{"_index":1634,"title":{},"body":{"index.html":{}}}],["determinar",{"_index":953,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dev",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":985,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["diferentes",{"_index":1055,"title":{},"body":{"components/TaskListComponent.html":{}}}],["direction",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["directives",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["directory",{"_index":1475,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":262,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":200,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":201,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":202,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":203,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":204,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":205,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":206,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":207,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":208,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":209,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":210,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":211,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":212,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":213,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesearch",{"_index":214,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":215,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":216,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":217,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["display",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["disponible",{"_index":1652,"title":{},"body":{"index.html":{}}}],["disposition",{"_index":513,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["docker",{"_index":1577,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1643,"title":{},"body":{"index.html":{}}}],["doctype",{"_index":1400,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":663,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(a",{"_index":527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('a",{"_index":522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["documentación",{"_index":1613,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["documentation/.../hbs",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":195,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":680,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["donut_large",{"_index":1197,"title":{},"body":{"components/TaskListComponent.html":{}}}],["down",{"_index":1635,"title":{},"body":{"index.html":{}}}],["download",{"_index":253,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["downloadblob",{"_index":1440,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":1443,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloaded",{"_index":530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloading",{"_index":532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["due",{"_index":1034,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["duedate",{"_index":548,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["durante",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["e9ecef",{"_index":309,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":626,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ease",{"_index":312,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["edición",{"_index":908,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["editar",{"_index":937,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["editor",{"_index":347,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":231,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":1317,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":1339,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":1330,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":1324,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":1333,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":1335,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":1326,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":1331,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":1338,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ef9a9a",{"_index":1038,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ejecución",{"_index":1586,"title":{},"body":{"index.html":{}}}],["ejecutar",{"_index":1618,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":1237,"title":{},"body":{"injectables/TaskService.html":{}}}],["el",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["element",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["elemento",{"_index":1132,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["elementref",{"_index":226,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["elimin",{"_index":1234,"title":{},"body":{"injectables/TaskService.html":{}}}],["elimina",{"_index":934,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["eliminación",{"_index":909,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["eliminada",{"_index":1115,"title":{},"body":{"components/TaskListComponent.html":{}}}],["eliminadas",{"_index":1192,"title":{},"body":{"components/TaskListComponent.html":{}}}],["eliminar",{"_index":955,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["emisor",{"_index":745,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["emite",{"_index":789,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["en",{"_index":701,"title":{},"body":{"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["enabled",{"_index":1349,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["encontr",{"_index":1235,"title":{},"body":{"injectables/TaskService.html":{}}}],["encuentra",{"_index":1241,"title":{},"body":{"injectables/TaskService.html":{}}}],["end",{"_index":888,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["endpoint",{"_index":501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["entidad",{"_index":700,"title":{},"body":{"interfaces/Task.html":{}}}],["entorno",{"_index":1579,"title":{},"body":{"index.html":{}}}],["entrada",{"_index":931,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["entrar",{"_index":1630,"title":{},"body":{"index.html":{}}}],["envío",{"_index":786,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["error",{"_index":405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["error('failed",{"_index":423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":677,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["errores",{"_index":957,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["es",{"_index":771,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["escenarios",{"_index":961,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["español",{"_index":945,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["especificaciones",{"_index":1645,"title":{},"body":{"index.html":{}}}],["est",{"_index":567,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["esta",{"_index":702,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["establece",{"_index":1122,"title":{},"body":{"components/TaskListComponent.html":{}}}],["estado",{"_index":580,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["estadísticas",{"_index":1052,"title":{},"body":{"components/TaskListComponent.html":{}}}],["estar",{"_index":1651,"title":{},"body":{"index.html":{}}}],["este",{"_index":715,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["estilo",{"_index":910,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["estilos",{"_index":1662,"title":{},"body":{"index.html":{}}}],["estructura",{"_index":704,"title":{},"body":{"interfaces/Task.html":{},"index.html":{}}}],["estás",{"_index":1183,"title":{},"body":{"components/TaskListComponent.html":{}}}],["estática",{"_index":1648,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1490,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["event",{"_index":822,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["eventcoalescing",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":823,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["evento",{"_index":746,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["events",{"_index":693,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["example",{"_index":639,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["excelente",{"_index":1167,"title":{},"body":{"components/TaskListComponent.html":{}}}],["exec",{"_index":1596,"title":{},"body":{"index.html":{}}}],["existente",{"_index":576,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["existentes",{"_index":1564,"title":{},"body":{"index.html":{}}}],["existing",{"_index":454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["existingtask",{"_index":1301,"title":{},"body":{"injectables/TaskService.html":{}}}],["exitosamente",{"_index":751,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["export",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["export.service",{"_index":234,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":1439,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":1446,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":1448,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":1444,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exports",{"_index":1422,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["exporttemplates",{"_index":1441,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":1445,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exportzip",{"_index":489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":1549,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["expuesto",{"_index":1680,"title":{},"body":{"index.html":{}}}],["extract",{"_index":1474,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["f",{"_index":1633,"title":{},"body":{"index.html":{}}}],["f0f0f0",{"_index":1030,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["f0f8ff",{"_index":672,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":892,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["f5f5f5",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["f8f9fa",{"_index":296,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fafafa",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["family",{"_index":285,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["feature/nueva",{"_index":1690,"title":{},"body":{"index.html":{}}}],["features",{"_index":1687,"title":{},"body":{"index.html":{}}}],["fecha",{"_index":552,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["ff9800",{"_index":897,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["ffc107",{"_index":304,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ffcc80",{"_index":1040,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["fff5f5",{"_index":676,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ffffff",{"_index":879,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["field",{"_index":814,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field.dirty",{"_index":834,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field.invalid",{"_index":833,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field.touched",{"_index":835,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["fieldname",{"_index":776,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["file.content",{"_index":1452,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":508,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":1447,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":1450,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1327,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["filter",{"_index":1124,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filter_list",{"_index":1199,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filteredtasks",{"_index":1068,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["filteredtasks.length",{"_index":1306,"title":{},"body":{"injectables/TaskService.html":{}}}],["filtradas",{"_index":1104,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtrado",{"_index":1051,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtrar",{"_index":1200,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtro",{"_index":1093,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtros",{"_index":1056,"title":{},"body":{"components/TaskListComponent.html":{}}}],["finalización",{"_index":581,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["finally",{"_index":850,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["firebase",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fit",{"_index":319,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["flag",{"_index":873,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/ZipExportService.html":{}}}],["flex",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["flujo",{"_index":1269,"title":{},"body":{"injectables/TaskService.html":{}}}],["font",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":1489,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1351,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["footer",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["fork",{"_index":1685,"title":{},"body":{"index.html":{}}}],["form",{"_index":719,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["form.component",{"_index":1153,"title":{},"body":{"components/TaskListComponent.html":{}}}],["form.component.html",{"_index":731,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.scss",{"_index":729,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts",{"_index":711,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:112",{"_index":768,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:125",{"_index":784,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:160",{"_index":795,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:178",{"_index":777,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:191",{"_index":753,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:53",{"_index":802,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:59",{"_index":806,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:66",{"_index":744,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:72",{"_index":803,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:78",{"_index":743,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:90",{"_index":761,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form/task",{"_index":710,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":732,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formgroup",{"_index":764,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formsmodule",{"_index":1435,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["formulario",{"_index":712,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["formvalue",{"_index":838,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.description?.trim",{"_index":842,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.duedate",{"_index":844,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.priority",{"_index":843,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.title.trim",{"_index":841,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["frame",{"_index":353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":1658,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1573,"title":{},"body":{"index.html":{}}}],["full",{"_index":887,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["funcionalidad",{"_index":1691,"title":{},"body":{"index.html":{}}}],["funcionalidades",{"_index":1050,"title":{},"body":{"components/TaskListComponent.html":{}}}],["función",{"_index":1128,"title":{},"body":{"components/TaskListComponent.html":{}}}],["function",{"_index":1337,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["functionality",{"_index":487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["functions",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g",{"_index":1616,"title":{},"body":{"index.html":{}}}],["gap",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["generados",{"_index":546,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["generar",{"_index":1248,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["generate",{"_index":1457,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["generated",{"_index":1501,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generatereadme",{"_index":1442,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generating",{"_index":1466,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":1464,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":258,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gestiona",{"_index":1049,"title":{},"body":{"components/TaskListComponent.html":{}}}],["gestión",{"_index":1211,"title":{},"body":{"injectables/TaskService.html":{}}}],["getcompletionpercentage",{"_index":1070,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getcurrentfilter",{"_index":1071,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getemptystateicon",{"_index":1072,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getemptystatemessage",{"_index":1073,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getemptystatetitle",{"_index":1074,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfilteredtasks",{"_index":1075,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfilteredtasks().length",{"_index":1202,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfiltericon",{"_index":1076,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfiltertitle",{"_index":1077,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getformcontrol",{"_index":736,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getformcontrol(controlname",{"_index":752,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getlanguagefromfiletype",{"_index":1320,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":1325,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getmockdata",{"_index":588,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getpriorityicon",{"_index":920,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getprioritytext",{"_index":921,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getprioritytooltip",{"_index":922,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["git",{"_index":1584,"title":{},"body":{"index.html":{}}}],["git=true",{"_index":1611,"title":{},"body":{"index.html":{}}}],["gracias",{"_index":1675,"title":{},"body":{"index.html":{}}}],["gradient(135deg",{"_index":884,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["graph",{"_index":264,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["grid",{"_index":316,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["grupo",{"_index":765,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["h3",{"_index":328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":349,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ha",{"_index":773,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["han",{"_index":1191,"title":{},"body":{"components/TaskListComponent.html":{}}}],["handle",{"_index":691,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars",{"_index":450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":607,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":1397,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":586,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hay",{"_index":1099,"title":{},"body":{"components/TaskListComponent.html":{}}}],["hbs",{"_index":236,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":235,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["header",{"_index":294,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["headers",{"_index":509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["height",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["helper",{"_index":614,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpers",{"_index":610,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hh:mm",{"_index":1008,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["hidden",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hide",{"_index":257,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidedarkmodetoggle",{"_index":218,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":219,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["high",{"_index":556,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["hook",{"_index":688,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hooks",{"_index":273,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":1357,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":1620,"title":{},"body":{"index.html":{}}}],["href",{"_index":696,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":1329,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["http",{"_index":392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["http://localhost:4200",{"_index":1624,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1653,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":228,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":1436,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["https://compodoc.app/guides/template",{"_index":1499,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["icon",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["icon.high",{"_index":898,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["icon.low",{"_index":894,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["icon.medium",{"_index":896,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["icono",{"_index":941,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["id",{"_index":561,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["identificador",{"_index":559,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["identifier",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1249,"title":{},"body":{"injectables/TaskService.html":{}}}],["implement",{"_index":486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implements",{"_index":370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["import",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["important",{"_index":893,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["imports",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["includes",{"_index":220,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":221,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["incluye",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["incluyendo",{"_index":718,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["incompleta",{"_index":1012,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["index",{"_index":70,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":565,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["indicador",{"_index":804,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["indicator",{"_index":303,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["individual",{"_index":902,"title":{},"body":{"components/TaskItemComponent.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":638,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["inicial",{"_index":798,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inicializado",{"_index":766,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inicializar",{"_index":762,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["initialize",{"_index":1341,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializeeditor",{"_index":438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":1328,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializeform",{"_index":737,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["initializehandlebars",{"_index":589,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializesampledata",{"_index":1224,"title":{},"body":{"injectables/TaskService.html":{}}}],["initializing",{"_index":407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":808,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["inject(formbuilder",{"_index":801,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inject(taskservice",{"_index":805,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["injectable",{"_index":582,"title":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":583,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["input",{"_index":967,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["input.required",{"_index":973,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["inputs",{"_index":642,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["inputsignal",{"_index":972,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["instalación",{"_index":1585,"title":{},"body":{"index.html":{}}}],["instalados",{"_index":1583,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":1276,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["install",{"_index":1615,"title":{},"body":{"index.html":{}}}],["instance",{"_index":605,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["instructions",{"_index":1454,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["interactivas",{"_index":904,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["interface",{"_index":192,"title":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["interfaces",{"_index":194,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{},"overview.html":{}}}],["interfaz",{"_index":538,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["internal",{"_index":271,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inválido",{"_index":772,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inyectado",{"_index":1147,"title":{},"body":{"components/TaskListComponent.html":{}}}],["isfieldinvalid",{"_index":738,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["isfieldinvalid(fieldname",{"_index":767,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["isinitial",{"_index":659,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":657,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isloading",{"_index":733,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["isoverdue",{"_index":923,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["istabenabled",{"_index":651,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":685,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["italic",{"_index":346,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"index.html":{}}}],["item'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["item.completed",{"_index":1016,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component",{"_index":1152,"title":{},"body":{"components/TaskListComponent.html":{}}}],["item.component.html",{"_index":919,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.scss",{"_index":918,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts",{"_index":900,"title":{},"body":{"components/TaskItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:116",{"_index":954,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:145",{"_index":949,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:161",{"_index":940,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:179",{"_index":946,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:197",{"_index":943,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:48",{"_index":966,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:54",{"_index":930,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:61",{"_index":938,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:68",{"_index":933,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:75",{"_index":935,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:81",{"_index":963,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:91",{"_index":958,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.high",{"_index":1018,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.low",{"_index":1020,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.medium",{"_index":1019,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.name",{"_index":535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item/task",{"_index":899,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["item:hover",{"_index":1013,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item[disabled",{"_index":1046,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["items",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["javascript",{"_index":1384,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["js",{"_index":1383,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["jszip",{"_index":1449,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["keep",{"_index":1492,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["key",{"_index":637,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["keyboard_arrow_down",{"_index":868,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["keyboard_arrow_up",{"_index":871,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["keyword",{"_index":1395,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["label",{"_index":322,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lang.id",{"_index":1388,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1344,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["las",{"_index":1084,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["last",{"_index":247,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lastsaved",{"_index":249,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["latest",{"_index":1659,"title":{},"body":{"index.html":{}}}],["layout",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/ZipExportService.html":{}}}],["lectura",{"_index":1265,"title":{},"body":{"injectables/TaskService.html":{}}}],["leer",{"_index":1208,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["left",{"_index":344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["legend",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["lenguaje",{"_index":1660,"title":{},"body":{"index.html":{}}}],["letter",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["levanta",{"_index":1600,"title":{},"body":{"index.html":{}}}],["levantar",{"_index":1592,"title":{},"body":{"index.html":{}}}],["li",{"_index":333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["library",{"_index":1574,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":272,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["limpia",{"_index":799,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["limpian",{"_index":1086,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["limpiar",{"_index":877,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["line",{"_index":1025,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["linear",{"_index":883,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["linenumbers",{"_index":1354,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":518,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["list",{"_index":327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"index.html":{}}}],["list'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["list.component",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["list.component.html",{"_index":1064,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.scss",{"_index":1066,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":1048,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:106",{"_index":1103,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:115",{"_index":1087,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:128",{"_index":1106,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:144",{"_index":1108,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:160",{"_index":1097,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:176",{"_index":1102,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:192",{"_index":1100,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:209",{"_index":1110,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:220",{"_index":1117,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:235",{"_index":1113,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:244",{"_index":1083,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:269",{"_index":1127,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:49",{"_index":1146,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:55",{"_index":1135,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:61",{"_index":1145,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:68",{"_index":1142,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:87",{"_index":1091,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:97",{"_index":1121,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list/task",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["listener",{"_index":1371,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["live",{"_index":282,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loading",{"_index":279,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["loadsessionconfig",{"_index":434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["logs",{"_index":1632,"title":{},"body":{"index.html":{}}}],["los",{"_index":705,"title":{},"body":{"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["low",{"_index":554,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["ltima",{"_index":572,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["límite",{"_index":553,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["lópez",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["making",{"_index":1495,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["manager",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"index.html":{}}}],["maneja",{"_index":960,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["manejador",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manejar",{"_index":785,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["manejo",{"_index":790,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["mantiene",{"_index":1668,"title":{},"body":{"index.html":{}}}],["manualmente",{"_index":1631,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":635,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["marcar",{"_index":778,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"index.html":{}}}],["margin",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["markformgrouptouched",{"_index":739,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mat",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["matbadgemodule",{"_index":1061,"title":{},"body":{"components/TaskListComponent.html":{}}}],["matbuttonmodule",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matbuttontogglemodule",{"_index":1062,"title":{},"body":{"components/TaskListComponent.html":{}}}],["matcardmodule",{"_index":727,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matcheckboxmodule",{"_index":914,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["matching",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":915,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matdatepickermodule",{"_index":725,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["matdividermodule",{"_index":917,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["material",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["matformfieldmodule",{"_index":722,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["math.round((completed",{"_index":1160,"title":{},"body":{"components/TaskListComponent.html":{}}}],["maticonmodule",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matinputmodule",{"_index":723,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["matmenumodule",{"_index":916,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["matnativedatemodule",{"_index":726,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["matprogressspinnermodule",{"_index":1063,"title":{},"body":{"components/TaskListComponent.html":{}}}],["matselectmodule",{"_index":724,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mattoolbarmodule",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["mattooltipmodule",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["max",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["mdc",{"_index":1037,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["media",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["mediante",{"_index":1176,"title":{},"body":{"components/TaskListComponent.html":{}}}],["medium",{"_index":555,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["mejora",{"_index":1684,"title":{},"body":{"index.html":{}}}],["menos",{"_index":865,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mensaje",{"_index":1101,"title":{},"body":{"components/TaskListComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":243,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["metadata",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["metatag",{"_index":1402,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":1401,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["methods",{"_index":587,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["min",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["minimal",{"_index":222,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":1348,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minmax(200px",{"_index":320,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["miscellaneous",{"_index":1704,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":1001,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["mock",{"_index":674,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["mode",{"_index":260,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["model",{"_index":1378,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["modelo",{"_index":698,"title":{},"body":{"interfaces/Task.html":{}}}],["models/task.model",{"_index":820,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["modify",{"_index":1487,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":640,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["modules",{"_index":641,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["monaco",{"_index":1340,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":1343,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":1379,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":1387,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":1391,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":1410,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":1392,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monospace",{"_index":302,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["more",{"_index":1497,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["more_vert",{"_index":1009,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["mostrar",{"_index":932,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["mount",{"_index":1677,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":695,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["muestra",{"_index":901,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["navegación",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["navtabs",{"_index":653,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":655,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":660,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":661,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ndice",{"_index":1131,"title":{},"body":{"components/TaskListComponent.html":{}}}],["new",{"_index":422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newtask",{"_index":845,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["next",{"_index":1396,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["ng",{"_index":1607,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":912,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ngfor",{"_index":1060,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ngif",{"_index":721,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["ngmodule",{"_index":1430,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngondestroy",{"_index":408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["nico",{"_index":560,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["nicos",{"_index":1250,"title":{},"body":{"injectables/TaskService.html":{}}}],["ninguna",{"_index":1164,"title":{},"body":{"components/TaskListComponent.html":{}}}],["nivel",{"_index":557,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["node.js",{"_index":1664,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":759,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["none",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["notas",{"_index":1667,"title":{},"body":{"index.html":{}}}],["notice",{"_index":671,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["now",{"_index":995,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["nowrap",{"_index":1033,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["npm",{"_index":1614,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":542,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["nuevas",{"_index":714,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["nuevo",{"_index":1123,"title":{},"body":{"components/TaskListComponent.html":{}}}],["null",{"_index":377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["number",{"_index":382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["número",{"_index":1272,"title":{},"body":{"injectables/TaskService.html":{}}}],["o",{"_index":760,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.taskform.controls).foreach((key",{"_index":855,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["objetivo",{"_index":1560,"title":{},"body":{"index.html":{}}}],["objeto",{"_index":1133,"title":{},"body":{"components/TaskListComponent.html":{}}}],["objetos",{"_index":706,"title":{},"body":{"interfaces/Task.html":{}}}],["obligatorio",{"_index":861,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["observable",{"_index":1215,"title":{},"body":{"injectables/TaskService.html":{}}}],["observe",{"_index":505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["obtener",{"_index":754,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["obtiene",{"_index":1092,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onchangecallback",{"_index":1318,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onclick",{"_index":690,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":694,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ondeletetask",{"_index":924,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ondestroy",{"_index":227,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninit",{"_index":224,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["onsubmit",{"_index":740,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["ontaskcreated",{"_index":1078,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskcreated(task",{"_index":1109,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskdeleted",{"_index":1079,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskdeleted(taskid",{"_index":1112,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontasktoggled",{"_index":1080,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontasktoggled(task",{"_index":1116,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontogglecomplete",{"_index":925,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["opacity",{"_index":342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["opcional",{"_index":551,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["open",{"_index":1414,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["operaciones",{"_index":964,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["operator",{"_index":616,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimizada",{"_index":1130,"title":{},"body":{"components/TaskListComponent.html":{}}}],["optional",{"_index":198,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":315,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["options.fn(this",{"_index":621,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":622,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["origin",{"_index":1694,"title":{},"body":{"index.html":{}}}],["original",{"_index":1493,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["originales",{"_index":1646,"title":{},"body":{"index.html":{}}}],["orlength",{"_index":645,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["osmar",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":1428,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["output",{"_index":809,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["outputemitterref",{"_index":974,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["outputs",{"_index":643,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["overflow",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["overview",{"_index":263,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":1359,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["p",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["package",{"_index":496,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["padding",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["page",{"_index":493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":1481,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":1467,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["panel",{"_index":308,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":314,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["paquetes",{"_index":1672,"title":{},"body":{"index.html":{}}}],["para",{"_index":539,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":831,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["parameterhints",{"_index":1363,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":600,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["partial",{"_index":239,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":1482,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["path",{"_index":238,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/to/custom/templates",{"_index":1480,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pendientes",{"_index":1059,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["pending",{"_index":1094,"title":{},"body":{"components/TaskListComponent.html":{}}}],["pendingtaskscount",{"_index":1220,"title":{},"body":{"injectables/TaskService.html":{}}}],["permita",{"_index":1562,"title":{},"body":{"index.html":{}}}],["persistente",{"_index":1669,"title":{},"body":{"index.html":{}}}],["peticiones",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playground",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":1437,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":197,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":1429,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":584,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":196,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":1438,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pointer",{"_index":335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["pop",{"_index":1399,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["por",{"_index":1233,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["porcentaje",{"_index":1089,"title":{},"body":{"components/TaskListComponent.html":{}}}],["port",{"_index":1622,"title":{},"body":{"index.html":{}}}],["position",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["prerrequisitos",{"_index":1581,"title":{},"body":{"index.html":{}}}],["preview",{"_index":283,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary",{"_index":358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primera",{"_index":1172,"title":{},"body":{"components/TaskListComponent.html":{},"index.html":{}}}],["principal",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["prioridad",{"_index":558,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["priority",{"_index":549,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["privada",{"_index":1252,"title":{},"body":{"injectables/TaskService.html":{}}}],["privado",{"_index":1247,"title":{},"body":{"injectables/TaskService.html":{}}}],["private",{"_index":269,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["programación",{"_index":1661,"title":{},"body":{"index.html":{}}}],["progreso",{"_index":1198,"title":{},"body":{"components/TaskListComponent.html":{}}}],["promise",{"_index":412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["promise.resolve",{"_index":1316,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(false",{"_index":1308,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(newtask",{"_index":1297,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(null",{"_index":1300,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(true",{"_index":1311,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(updatedtask",{"_index":1304,"title":{},"body":{"injectables/TaskService.html":{}}}],["proper",{"_index":984,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["properties",{"_index":148,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"properties.html":{}}}],["proporciona",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["propósito",{"_index":1656,"title":{},"body":{"index.html":{}}}],["protected",{"_index":270,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":603,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["providerouter(routes",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1421,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proyecto",{"_index":1277,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["prueba",{"_index":1556,"title":{},"body":{"index.html":{}}}],["prueba_angular",{"_index":1638,"title":{},"body":{"index.html":{}}}],["prueba_angular2",{"_index":1591,"title":{},"body":{"index.html":{}}}],["prueba_angular_frontend",{"_index":1597,"title":{},"body":{"index.html":{}}}],["pruebatécnica_angular.pdf",{"_index":1644,"title":{},"body":{"index.html":{}}}],["public",{"_index":1218,"title":{},"body":{"injectables/TaskService.html":{}}}],["puede",{"_index":1187,"title":{},"body":{"components/TaskListComponent.html":{}}}],["puedes",{"_index":1671,"title":{},"body":{"index.html":{}}}],["puerto",{"_index":1678,"title":{},"body":{"index.html":{}}}],["pull",{"_index":1695,"title":{},"body":{"index.html":{}}}],["push",{"_index":1693,"title":{},"body":{"index.html":{}}}],["pública",{"_index":1263,"title":{},"body":{"injectables/TaskService.html":{}}}],["que",{"_index":792,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["quicksuggestions",{"_index":1360,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["quieres",{"_index":1185,"title":{},"body":{"components/TaskListComponent.html":{}}}],["radius",{"_index":336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["rama",{"_index":1686,"title":{},"body":{"index.html":{}}}],["raíz",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiva",{"_index":1212,"title":{},"body":{"injectables/TaskService.html":{}}}],["reactiveformsmodule",{"_index":720,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["reactivo",{"_index":716,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["readme",{"_index":1453,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readme.md",{"_index":1647,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["real",{"_index":982,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["recién",{"_index":1111,"title":{},"body":{"components/TaskListComponent.html":{}}}],["reconstruir",{"_index":1636,"title":{},"body":{"index.html":{}}}],["red",{"_index":675,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["reflejan",{"_index":1674,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":284,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":608,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["registered",{"_index":1390,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhandlebarslanguage",{"_index":1321,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":590,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["reglas",{"_index":763,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["reinicia",{"_index":800,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["reiniciar",{"_index":796,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["relacionadas",{"_index":1207,"title":{},"body":{"injectables/TaskService.html":{}}}],["relative",{"_index":352,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":630,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["remove",{"_index":870,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["render.service",{"_index":237,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":585,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":599,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":595,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":593,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":596,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":592,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendered",{"_index":665,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendermode",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendertemplate",{"_index":591,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":597,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["repeat(auto",{"_index":318,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["representa",{"_index":699,"title":{},"body":{"interfaces/Task.html":{}}}],["representar",{"_index":1568,"title":{},"body":{"index.html":{}}}],["reqhandler",{"_index":1535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requerida",{"_index":1567,"title":{},"body":{"index.html":{}}}],["requerido",{"_index":562,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["request",{"_index":1696,"title":{},"body":{"index.html":{}}}],["required",{"_index":929,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["reset",{"_index":252,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetform",{"_index":741,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["resetting",{"_index":478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resolve(serverdistfolder",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsetype",{"_index":503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsive",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["resuelve",{"_index":793,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["result",{"_index":617,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":629,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["return",{"_index":388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["returns",{"_index":594,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["rgba(0",{"_index":882,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["rgba(80",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["roboto",{"_index":291,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["root",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["roundedselection",{"_index":1355,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["routes",{"_index":265,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["routing=true",{"_index":1608,"title":{},"body":{"index.html":{}}}],["row",{"_index":1043,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["running",{"_index":1476,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["runtime",{"_index":1666,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1271,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["s",{"_index":1625,"title":{},"body":{"index.html":{}}}],["salida",{"_index":747,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["sample",{"_index":681,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":682,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sampletasks",{"_index":1274,"title":{},"body":{"injectables/TaskService.html":{}}}],["sans",{"_index":292,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save",{"_index":443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save_delay",{"_index":383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":248,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetemplate(content",{"_index":462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":246,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schedule",{"_index":457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scripts",{"_index":1471,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollbar",{"_index":1356,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":1350,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":1382,"title":{},"body":{"injectables/TemplateEditorService.html":{},"index.html":{}}}],["se",{"_index":749,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["search",{"_index":267,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary",{"_index":362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["section",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["segoe",{"_index":289,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seguimiento",{"_index":1129,"title":{},"body":{"components/TaskListComponent.html":{}}}],["seguro",{"_index":1184,"title":{},"body":{"components/TaskListComponent.html":{}}}],["según",{"_index":1054,"title":{},"body":{"components/TaskListComponent.html":{}}}],["select",{"_index":429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile",{"_index":376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":280,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":281,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["serif",{"_index":293,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["serve",{"_index":1619,"title":{},"body":{"index.html":{}}}],["server",{"_index":498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":1537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":1571,"title":{},"body":{"index.html":{}}}],["services",{"_index":1640,"title":{},"body":{"index.html":{}}}],["services/task",{"_index":1612,"title":{},"body":{"index.html":{}}}],["services/task.service",{"_index":821,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["servicio",{"_index":807,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["servicios",{"_index":1570,"title":{},"body":{"index.html":{}}}],["servir",{"_index":1649,"title":{},"body":{"index.html":{}}}],["session",{"_index":240,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":241,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":244,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["seteditorcontent",{"_index":1322,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":1332,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setfilter",{"_index":1081,"title":{},"body":{"components/TaskListComponent.html":{}}}],["setfilter(filter",{"_index":1120,"title":{},"body":{"components/TaskListComponent.html":{}}}],["setonchangecallback",{"_index":1323,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":1334,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["señal",{"_index":1143,"title":{},"body":{"components/TaskListComponent.html":{}}}],["shadow",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["showconfigpanel",{"_index":378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["shrink",{"_index":1023,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["si",{"_index":566,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["side",{"_index":499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sidebar",{"_index":324,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sido",{"_index":774,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["signal",{"_index":1148,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["signal('all",{"_index":1134,"title":{},"body":{"components/TaskListComponent.html":{}}}],["signals",{"_index":1210,"title":{},"body":{"injectables/TaskService.html":{}}}],["signature",{"_index":689,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sigue",{"_index":1165,"title":{},"body":{"components/TaskListComponent.html":{}}}],["simple",{"_index":633,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["sin",{"_index":544,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["size",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["skip",{"_index":1610,"title":{},"body":{"index.html":{}}}],["sla",{"_index":1650,"title":{},"body":{"index.html":{}}}],["sm",{"_index":369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["solicita",{"_index":936,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["solid",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["solo",{"_index":1264,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["soporta",{"_index":905,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specify",{"_index":1477,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spinner",{"_index":1151,"title":{},"body":{"components/TaskListComponent.html":{}}}],["src",{"_index":1639,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:216",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:222",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/task",{"_index":709,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["src/app/models/task.model.ts",{"_index":537,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":683,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/services/task.service.ts",{"_index":1206,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:122",{"_index":1230,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:150",{"_index":1244,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:183",{"_index":1232,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:203",{"_index":1240,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:217",{"_index":1228,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:25",{"_index":1251,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:31",{"_index":1254,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:37",{"_index":1245,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:44",{"_index":1262,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:51",{"_index":1268,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:58",{"_index":1258,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:67",{"_index":1260,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:76",{"_index":1227,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:87",{"_index":1236,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/main.server.ts",{"_index":1531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["start",{"_index":1021,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["state",{"_index":1045,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["statements",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["status",{"_index":299,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sticky",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["stretch",{"_index":1042,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["string",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["strings",{"_index":1362,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["structure",{"_index":668,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["style",{"_index":276,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["style=scss",{"_index":1609,"title":{},"body":{"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":1468,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":1065,"title":{},"body":{"components/TaskListComponent.html":{}}}],["styleurls",{"_index":728,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["styling",{"_index":1575,"title":{},"body":{"index.html":{}}}],["su",{"_index":797,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["submit",{"_index":889,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["subtitle",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":242,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["success:hover",{"_index":366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successfully",{"_index":531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["suggestontriggercharacters",{"_index":1367,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["superior",{"_index":1173,"title":{},"body":{"components/TaskListComponent.html":{}}}],["support",{"_index":1697,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["surroundingpairs",{"_index":1416,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suscripciones",{"_index":1255,"title":{},"body":{"injectables/TaskService.html":{}}}],["svg",{"_index":1698,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":618,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskListComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["syntax",{"_index":679,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":287,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t.id",{"_index":656,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{}}}],["t\\r\\n",{"_index":1404,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":275,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tabcompletion",{"_index":1369,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":654,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1403,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tarea",{"_index":543,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["tareas",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["task",{"_index":17,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{},"index.html":{}}}],["task().completed",{"_index":1010,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().createdat",{"_index":1000,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().description",{"_index":998,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().duedate",{"_index":1004,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().title",{"_index":997,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().updatedat",{"_index":1007,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.completed",{"_index":1141,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["task.completed).length",{"_index":1257,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":1193,"title":{},"body":{"components/TaskListComponent.html":{}}}],["task.service.ts",{"_index":1641,"title":{},"body":{"index.html":{}}}],["task.title",{"_index":1178,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskcreated",{"_index":742,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["taskdeleted",{"_index":926,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskedit",{"_index":927,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskform",{"_index":734,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["taskformcomponent",{"_index":181,"title":{"components/TaskFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":1114,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskindex",{"_index":1298,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskitemcomponent",{"_index":183,"title":{"components/TaskItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["tasklistcomponent",{"_index":43,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["taskrequest",{"_index":840,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["taskrequest.description",{"_index":1290,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskrequest.duedate",{"_index":1292,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskrequest.priority",{"_index":1291,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskrequest.title",{"_index":1289,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks",{"_index":1138,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["tasks.filter((t",{"_index":1305,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks.filter((task",{"_index":1140,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasks.findindex((t",{"_index":1299,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks.length",{"_index":1307,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks[taskindex",{"_index":1302,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskservice",{"_index":735,"title":{"injectables/TaskService.html":{}},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskservice.completedtaskscount",{"_index":1196,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskservice.pendingtaskscount",{"_index":1195,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskservice.totaltaskscount",{"_index":1194,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasktoggled",{"_index":928,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["te",{"_index":1602,"title":{},"body":{"index.html":{}}}],["tecnología",{"_index":1655,"title":{},"body":{"index.html":{}}}],["tecnologías",{"_index":1572,"title":{},"body":{"index.html":{}}}],["template",{"_index":137,"title":{"interfaces/Template.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":277,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":278,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":601,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":230,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":1418,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":254,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":1461,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":730,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["tener",{"_index":863,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["text",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["texto",{"_index":944,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["theme",{"_index":1345,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["then((content",{"_index":1459,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this._nextid",{"_index":1287,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._nextid.tostring",{"_index":1288,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks",{"_index":1294,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.asobservable",{"_index":1267,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next",{"_index":1315,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next(filteredtasks",{"_index":1310,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next(sampletasks",{"_index":1286,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next(updatedtasks",{"_index":1296,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks().filter((task",{"_index":1256,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks().find((t",{"_index":1312,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks().length",{"_index":1270,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.asreadonly",{"_index":1261,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set",{"_index":1314,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set(filteredtasks",{"_index":1309,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set(sampletasks",{"_index":1285,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set(updatedtasks",{"_index":1295,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.config",{"_index":436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.createsession",{"_index":400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currentfilter",{"_index":1137,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.currentfilter.set(filter",{"_index":1155,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.downloadblob(content",{"_index":1460,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.editor",{"_index":1342,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":1417,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":1372,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":1380,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.filteredtasks",{"_index":1156,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.formbuilder.group",{"_index":826,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.generatereadme",{"_index":1455,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":1377,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.handlebarsinstance",{"_index":606,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":664,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":615,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":627,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":658,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":652,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":646,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":631,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":624,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializeeditor",{"_index":403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializeform",{"_index":825,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.initializehandlebars",{"_index":604,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.initializesampledata",{"_index":1273,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.isloading",{"_index":837,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["this.lastsaved",{"_index":460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessionconfig",{"_index":402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.markformgrouptouched",{"_index":851,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.onchangecallback",{"_index":1373,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":1374,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.previewframe.nativeelement.src",{"_index":475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.registerhandlebarslanguage",{"_index":1376,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":612,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.resetform",{"_index":848,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.save_delay",{"_index":461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectedfile",{"_index":432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showconfigpanel",{"_index":472,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.task().completed",{"_index":994,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task().duedate",{"_index":993,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task().id",{"_index":977,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task().title",{"_index":988,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskcreated.emit(newtask",{"_index":847,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskdeleted.emit(this.task().id",{"_index":991,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskform",{"_index":824,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.get(controlname",{"_index":859,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.get(fieldname",{"_index":832,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.get(key",{"_index":856,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.markaspristine",{"_index":853,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.markasuntouched",{"_index":854,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.reset",{"_index":852,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.valid",{"_index":836,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.value",{"_index":839,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskservice.clearalltasks",{"_index":1189,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.completedtaskscount",{"_index":1159,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.createtask(taskrequest",{"_index":846,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskservice.deletetask(this.task().id",{"_index":990,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskservice.tasks",{"_index":1139,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.toggletaskcompletion",{"_index":976,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskservice.totaltaskscount",{"_index":1158,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasktoggled.emit(updatedtask",{"_index":978,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.templates",{"_index":427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.updatetask(id",{"_index":1313,"title":{},"body":{"injectables/TaskService.html":{}}}],["through",{"_index":1028,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["throw",{"_index":421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tiles",{"_index":1627,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tips",{"_index":1485,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["titlecasepipe",{"_index":913,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["tocado",{"_index":775,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["tocados",{"_index":781,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["toda",{"_index":708,"title":{},"body":{"interfaces/Task.html":{}}}],["todas",{"_index":1057,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["todo",{"_index":485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["todos",{"_index":779,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["toggle",{"_index":261,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["toggleconfigpanel",{"_index":471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggletaskcompletion",{"_index":1225,"title":{},"body":{"injectables/TaskService.html":{}}}],["toggletaskcompletion(id",{"_index":1239,"title":{},"body":{"injectables/TaskService.html":{}}}],["toggling",{"_index":979,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["token",{"_index":1394,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":1393,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["toolbar",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":947,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["top",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":1157,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["totaltaskscount",{"_index":1221,"title":{},"body":{"injectables/TaskService.html":{}}}],["trabajando",{"_index":1166,"title":{},"body":{"components/TaskListComponent.html":{}}}],["trabajar",{"_index":1604,"title":{},"body":{"index.html":{}}}],["trackbyname(index",{"_index":533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["trackbytaskid",{"_index":1082,"title":{},"body":{"components/TaskListComponent.html":{}}}],["trackbytaskid(index",{"_index":1126,"title":{},"body":{"components/TaskListComponent.html":{}}}],["transform",{"_index":331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["transition",{"_index":310,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["translatey",{"_index":1015,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["translation",{"_index":634,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":636,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":644,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["trigger",{"_index":519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["true",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["ts",{"_index":1385,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":1479,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["tslib",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1171,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tus",{"_index":1168,"title":{},"body":{"components/TaskListComponent.html":{}}}],["type",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1386,"title":{},"body":{"injectables/TemplateEditorService.html":{},"index.html":{}}}],["técnica",{"_index":1557,"title":{},"body":{"index.html":{}}}],["título",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["ui",{"_index":290,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["un",{"_index":713,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["una",{"_index":541,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["undefined",{"_index":564,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["underline",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["undo",{"_index":1011,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["undone",{"_index":484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unless",{"_index":623,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["up",{"_index":441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["update",{"_index":1006,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["updateconfig",{"_index":464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updatedat",{"_index":574,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["updatedtask",{"_index":975,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["updatedtasks",{"_index":1293,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatedtasks[taskindex",{"_index":1303,"title":{},"body":{"injectables/TaskService.html":{}}}],["updaterequest",{"_index":1243,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask",{"_index":1226,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(id",{"_index":1242,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskrequest",{"_index":577,"title":{"interfaces/UpdateTaskRequest.html":{}},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["updating",{"_index":470,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["uppercase",{"_index":332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["url.createobjecturl(zipblob",{"_index":521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["usado",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":1473,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["usando",{"_index":787,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["use",{"_index":983,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["used",{"_index":611,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["utiliza",{"_index":1209,"title":{},"body":{"injectables/TaskService.html":{}}}],["utilizadas",{"_index":1654,"title":{},"body":{"index.html":{}}}],["utilizados",{"_index":707,"title":{},"body":{"interfaces/Task.html":{}}}],["utilizando",{"_index":1559,"title":{},"body":{"index.html":{}}}],["vacío",{"_index":1098,"title":{},"body":{"components/TaskListComponent.html":{}}}],["validación",{"_index":717,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators",{"_index":810,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.maxlength(100",{"_index":829,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.maxlength(500",{"_index":830,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.minlength(3",{"_index":828,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.required",{"_index":827,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["value",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":650,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["values",{"_index":482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["var",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["variable",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1705,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vencida",{"_index":950,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["vencimiento",{"_index":874,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["ver",{"_index":1204,"title":{},"body":{"components/TaskListComponent.html":{},"index.html":{}}}],["verificar",{"_index":769,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["version",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"properties.html":{}}}],["versión",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["vertical",{"_index":1358,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["vez",{"_index":1606,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":225,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('editorcontainer",{"_index":371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["visible",{"_index":687,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":1498,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visualización",{"_index":783,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["visualizar",{"_index":1565,"title":{},"body":{"index.html":{}}}],["void",{"_index":452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["volume",{"_index":1676,"title":{},"body":{"index.html":{}}}],["vs",{"_index":1346,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w",{"_index":1409,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w+)(\\s*=\\s",{"_index":1405,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":1005,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["web",{"_index":1561,"title":{},"body":{"index.html":{}}}],["weight",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["welcome",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":686,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["white",{"_index":341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["width",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["window.settimeout(async",{"_index":458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1502,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1504,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["word",{"_index":1027,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["wordbasedsuggestions",{"_index":1370,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":1353,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wrap",{"_index":666,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["wrapper",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{}}}],["writablesignal",{"_index":1154,"title":{},"body":{"components/TaskListComponent.html":{}}}],["x",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":1174,"title":{},"body":{"components/TaskListComponent.html":{}}}],["yyyy",{"_index":1003,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["z",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["zip",{"_index":233,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":1456,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":1451,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":1458,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":507,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":232,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1427,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Principal de la Aplicación\nComponente raíz de la aplicación Task Manager. Proporciona el layout principal\ny contiene el componente de lista de tareas. Incluye toolbar con branding\ny navegación básica.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbarModule\n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                                TaskListComponent\n                \n            \n\n\n            \n                styles\n                \n      .app-container {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        background-color: #fafafa;\n      }\n\n      /* Toolbar */\n      .main-toolbar {\n        box-shadow: 0 2px 8px rgba(80, 56, 218, 0.1);\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n      }\n\n      .toolbar-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      .brand-section {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .brand-icon {\n        font-size: 1.5rem;\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      .brand-title {\n        font-size: 1.2rem;\n        font-weight: 500;\n        letter-spacing: 0.5px;\n      }\n\n      .toolbar-actions {\n        display: flex;\n        gap: 8px;\n      }\n\n      /* Contenido principal */\n      .main-content {\n        flex: 1;\n        overflow-x: hidden;\n      }\n\n      .content-wrapper {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      /* Footer */\n      .app-footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #e0e0e0;\n        padding: 20px 16px;\n        text-align: center;\n        color: #666;\n      }\n\n      .footer-content {\n        max-width: 1200px;\n        margin: 0 auto;\n      }\n\n      .footer-content p {\n        margin: 4px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        font-size: 0.9rem;\n      }\n\n      .footer-content mat-icon {\n        font-size: 1rem;\n        width: 1rem;\n        height: 1rem;\n      }\n\n      .version-info a {\n        color: #1976d2;\n        text-decoration: none;\n      }\n\n      .version-info a:hover {\n        text-decoration: underline;\n      }\n\n      /* Responsive */\n      @media (max-width: 768px) {\n        .toolbar-content {\n          padding: 0 8px;\n        }\n\n        .brand-title {\n          font-size: 1rem;\n        }\n\n        .welcome-section {\n          padding: 30px 16px;\n          margin: 16px -16px;\n        }\n\n        .welcome-title {\n          font-size: 1.8rem;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .welcome-subtitle {\n          font-size: 1rem;\n        }\n\n        .content-wrapper {\n          padding: 0 8px;\n        }\n\n        .footer-content p {\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .welcome-title {\n          font-size: 1.5rem;\n        }\n\n        .toolbar-actions {\n          gap: 4px;\n        }\n      }\n    \n            \n\n            \n                template\n                \n  \n  \n    \n      \n        assignment\n        {{ applicationTitle }}\n      \n    \n  \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n    \n      \n        code\n        Desarrollado con Angular 19 + Material Design\n      \n      \n        Versión {{ applicationVersion }} |\n        Angular |\n        Material\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                applicationTitle\n                            \n                            \n                                    Readonly\n                                applicationVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        applicationTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Task Manager'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:216\n                        \n                    \n\n            \n                \n                    Título de la aplicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        applicationVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0.0'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:222\n                        \n                    \n\n            \n                \n                    Versión de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TaskListComponent } from './components/task-list/task-list.component';\n\n/**\n * Componente Principal de la Aplicación\n *\n * Componente raíz de la aplicación Task Manager. Proporciona el layout principal\n * y contiene el componente de lista de tareas. Incluye toolbar con branding\n * y navegación básica.\n *\n * @component AppComponent\n * @author osmar lópez\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    TaskListComponent,\n  ],\n  template: `\n    \n      \n      \n        \n          \n            assignment\n            {{ applicationTitle }}\n          \n        \n      \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n        \n          \n            code\n            Desarrollado con Angular 19 + Material Design\n          \n          \n            Versión {{ applicationVersion }} |\n            Angular |\n            Material\n          \n        \n      \n    \n  `,\n  styles: [\n    `\n      .app-container {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        background-color: #fafafa;\n      }\n\n      /* Toolbar */\n      .main-toolbar {\n        box-shadow: 0 2px 8px rgba(80, 56, 218, 0.1);\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n      }\n\n      .toolbar-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      .brand-section {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .brand-icon {\n        font-size: 1.5rem;\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      .brand-title {\n        font-size: 1.2rem;\n        font-weight: 500;\n        letter-spacing: 0.5px;\n      }\n\n      .toolbar-actions {\n        display: flex;\n        gap: 8px;\n      }\n\n      /* Contenido principal */\n      .main-content {\n        flex: 1;\n        overflow-x: hidden;\n      }\n\n      .content-wrapper {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      /* Footer */\n      .app-footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #e0e0e0;\n        padding: 20px 16px;\n        text-align: center;\n        color: #666;\n      }\n\n      .footer-content {\n        max-width: 1200px;\n        margin: 0 auto;\n      }\n\n      .footer-content p {\n        margin: 4px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        font-size: 0.9rem;\n      }\n\n      .footer-content mat-icon {\n        font-size: 1rem;\n        width: 1rem;\n        height: 1rem;\n      }\n\n      .version-info a {\n        color: #1976d2;\n        text-decoration: none;\n      }\n\n      .version-info a:hover {\n        text-decoration: underline;\n      }\n\n      /* Responsive */\n      @media (max-width: 768px) {\n        .toolbar-content {\n          padding: 0 8px;\n        }\n\n        .brand-title {\n          font-size: 1rem;\n        }\n\n        .welcome-section {\n          padding: 30px 16px;\n          margin: 16px -16px;\n        }\n\n        .welcome-title {\n          font-size: 1.8rem;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .welcome-subtitle {\n          font-size: 1rem;\n        }\n\n        .content-wrapper {\n          padding: 0 8px;\n        }\n\n        .footer-content p {\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .welcome-title {\n          font-size: 1.5rem;\n        }\n\n        .toolbar-actions {\n          gap: 4px;\n        }\n      }\n    `,\n  ],\n})\nexport class AppComponent {\n  /**\n   * Título de la aplicación\n   * @type {string}\n   */\n  readonly applicationTitle = 'Task Manager';\n\n  /**\n   * Versión de la aplicación\n   * @type {string}\n   */\n  readonly applicationVersion = '1.0.0';\n}\n\n    \n\n\n    \n            \n      .app-container {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        background-color: #fafafa;\n      }\n\n      /* Toolbar */\n      .main-toolbar {\n        box-shadow: 0 2px 8px rgba(80, 56, 218, 0.1);\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n      }\n\n      .toolbar-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      .brand-section {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .brand-icon {\n        font-size: 1.5rem;\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      .brand-title {\n        font-size: 1.2rem;\n        font-weight: 500;\n        letter-spacing: 0.5px;\n      }\n\n      .toolbar-actions {\n        display: flex;\n        gap: 8px;\n      }\n\n      /* Contenido principal */\n      .main-content {\n        flex: 1;\n        overflow-x: hidden;\n      }\n\n      .content-wrapper {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      /* Footer */\n      .app-footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #e0e0e0;\n        padding: 20px 16px;\n        text-align: center;\n        color: #666;\n      }\n\n      .footer-content {\n        max-width: 1200px;\n        margin: 0 auto;\n      }\n\n      .footer-content p {\n        margin: 4px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        font-size: 0.9rem;\n      }\n\n      .footer-content mat-icon {\n        font-size: 1rem;\n        width: 1rem;\n        height: 1rem;\n      }\n\n      .version-info a {\n        color: #1976d2;\n        text-decoration: none;\n      }\n\n      .version-info a:hover {\n        text-decoration: underline;\n      }\n\n      /* Responsive */\n      @media (max-width: 768px) {\n        .toolbar-content {\n          padding: 0 8px;\n        }\n\n        .brand-title {\n          font-size: 1rem;\n        }\n\n        .welcome-section {\n          padding: 30px 16px;\n          margin: 16px -16px;\n        }\n\n        .welcome-title {\n          font-size: 1.8rem;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .welcome-subtitle {\n          font-size: 1rem;\n        }\n\n        .content-wrapper {\n          padding: 0 8px;\n        }\n\n        .footer-content p {\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .welcome-title {\n          font-size: 1.5rem;\n        }\n\n        .toolbar-actions {\n          gap: 4px;\n        }\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      assignment        {{ applicationTitle }}                                                            code        Desarrollado con Angular 19 + Material Design                    Versión {{ applicationVersion }} |        Angular |        Material            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTaskRequest.html":{"url":"interfaces/CreateTaskRequest.html","title":"interface - CreateTaskRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTaskRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripción opcional para la nueva tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Fecha límite opcional para la nueva tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"low\" | \"medium\" | \"high\"\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'medium'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     \"low\" | \"medium\" | \"high\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Nivel de prioridad para la nueva tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la nueva tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  /**\n   * Identificador único de la tarea\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Título de la tarea (requerido)\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción detallada opcional de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Indica si la tarea está completada\n   * @type {boolean}\n   * @default false\n   */\n  completed: boolean;\n\n  /**\n   * Nivel de prioridad de la tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha de creación de la tarea\n   * @type {Date}\n   */\n  createdAt: Date;\n\n  /**\n   * Fecha de última actualización de la tarea\n   * @type {Date}\n   */\n  updatedAt: Date;\n\n  /**\n   * Fecha límite opcional de la tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n *\n * @interface CreateTaskRequest\n */\nexport interface CreateTaskRequest {\n  /**\n   * Título de la nueva tarea\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción opcional para la nueva tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Nivel de prioridad para la nueva tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite opcional para la nueva tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para actualizar una tarea existente\n *\n * @interface UpdateTaskRequest\n */\nexport interface UpdateTaskRequest {\n  /**\n   * Título actualizado de la tarea\n   * @type {string | undefined}\n   */\n  title?: string;\n\n  /**\n   * Descripción actualizada de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Estado de finalización actualizado\n   * @type {boolean | undefined}\n   */\n  completed?: boolean;\n\n  /**\n   * Nivel de prioridad actualizado\n   * @type {'low' | 'medium' | 'high' | undefined}\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite actualizada\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz del Modelo de Tarea\nRepresenta una entidad de tarea en la aplicación Task Manager.\nEsta interfaz define la estructura para los objetos de tarea utilizados en toda la aplicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indica si la tarea está completada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de creación de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripción detallada opcional de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Fecha límite opcional de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador único de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"low\" | \"medium\" | \"high\"\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'medium'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     \"low\" | \"medium\" | \"high\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nivel de prioridad de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la tarea (requerido)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de última actualización de la tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  /**\n   * Identificador único de la tarea\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Título de la tarea (requerido)\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción detallada opcional de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Indica si la tarea está completada\n   * @type {boolean}\n   * @default false\n   */\n  completed: boolean;\n\n  /**\n   * Nivel de prioridad de la tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha de creación de la tarea\n   * @type {Date}\n   */\n  createdAt: Date;\n\n  /**\n   * Fecha de última actualización de la tarea\n   * @type {Date}\n   */\n  updatedAt: Date;\n\n  /**\n   * Fecha límite opcional de la tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n *\n * @interface CreateTaskRequest\n */\nexport interface CreateTaskRequest {\n  /**\n   * Título de la nueva tarea\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción opcional para la nueva tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Nivel de prioridad para la nueva tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite opcional para la nueva tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para actualizar una tarea existente\n *\n * @interface UpdateTaskRequest\n */\nexport interface UpdateTaskRequest {\n  /**\n   * Título actualizado de la tarea\n   * @type {string | undefined}\n   */\n  title?: string;\n\n  /**\n   * Descripción actualizada de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Estado de finalización actualizado\n   * @type {boolean | undefined}\n   */\n  completed?: boolean;\n\n  /**\n   * Nivel de prioridad actualizado\n   * @type {'low' | 'medium' | 'high' | undefined}\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite actualizada\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskFormComponent.html":{"url":"components/TaskFormComponent.html","title":"component - TaskFormComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TaskFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-form/task-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Formulario de Tarea\nUn componente standalone para crear nuevas tareas. Este componente proporciona un formulario reactivo\ncon validación para la creación de tareas incluyendo título, descripción, prioridad y fecha límite.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgIf\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatSelectModule\n                            MatDatepickerModule\n                            MatNativeDateModule\n                            MatCardModule\n                            MatIconModule\n                \n            \n\n            \n                styleUrls\n                ./task-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isLoading\n                            \n                            \n                                taskForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormControl\n                            \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                    Private\n                                markFormGroupTouched\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskCreated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/task-form/task-form.component.ts:78\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        taskCreated\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-form/task-form.component.ts:66\n                            \n                        \n                \n                    \n                        Emisor de evento de salida para cuando una tarea se crea exitosamente\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFormControl\n                        \n                    \n                \n            \n            \n                \ngetFormControl(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Obtener control del formulario para acceso desde el template\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del control del formulario\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                El control del formulario o null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Inicializar el formulario reactivo con reglas de validación\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                El grupo de formulario inicializado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Verificar si un campo del formulario es inválido y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del campo del formulario a verificar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markFormGroupTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Marcar todos los campos del formulario como tocados para activar la visualización de validación\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Manejar el envío del formulario\nCrea una nueva tarea usando los datos del formulario y emite el evento taskCreated.\nIncluye validación del formulario y manejo del estado de carga.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se completa la creación de la tarea\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Reiniciar el formulario a su estado inicial\nLimpia todos los campos del formulario y reinicia el estado de validación.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:53\n                        \n                    \n\n            \n                \n                    Formulario reactivo para creación de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:72\n                        \n                    \n\n            \n                \n                    Indicador de estado de carga\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:78\n                        \n                    \n\n            \n                \n                    Grupo de formulario reactivo para creación de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:59\n                        \n                    \n\n            \n                \n                    Servicio de tareas para crear tareas\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, output } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CreateTaskRequest } from '../../models/task.model';\nimport { TaskService } from '../../services/task.service';\n\n/**\n * Componente Formulario de Tarea\n *\n * Un componente standalone para crear nuevas tareas. Este componente proporciona un formulario reactivo\n * con validación para la creación de tareas incluyendo título, descripción, prioridad y fecha límite.\n *\n * @component TaskFormComponent\n * @standalone\n *\n */\n@Component({\n  selector: 'app-task-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgIf,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatIconModule,\n  ],\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n})\nexport class TaskFormComponent {\n  /**\n   * Formulario reactivo para creación de tareas\n   * @private\n   */\n  private readonly formBuilder = inject(FormBuilder);\n\n  /**\n   * Servicio de tareas para crear tareas\n   * @private\n   */\n  private readonly taskService = inject(TaskService);\n\n  /**\n   * Emisor de evento de salida para cuando una tarea se crea exitosamente\n   * @event taskCreated\n   * @type {EventEmitter}\n   */\n  readonly taskCreated = output();\n\n  /**\n   * Indicador de estado de carga\n   * @type {boolean}\n   */\n  isLoading = false;\n\n  /**\n   * Grupo de formulario reactivo para creación de tareas\n   * @type {FormGroup}\n   */\n  taskForm: FormGroup;\n\n  constructor() {\n    this.taskForm = this.initializeForm();\n  }\n\n  /**\n   * Inicializar el formulario reactivo con reglas de validación\n   *\n   * @private\n   * @returns {FormGroup} El grupo de formulario inicializado\n   */\n  private initializeForm(): FormGroup {\n    return this.formBuilder.group({\n      title: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n      description: ['', [Validators.maxLength(500)]],\n      priority: ['medium', Validators.required],\n      dueDate: [null],\n    });\n  }\n\n  /**\n   * Verificar si un campo del formulario es inválido y ha sido tocado\n   *\n   * @param {string} fieldName - El nombre del campo del formulario a verificar\n   * @returns {boolean} True si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.taskForm.get(fieldName);\n    return !!(field && field.invalid && (field.dirty || field.touched));\n  }\n\n  /**\n   * Manejar el envío del formulario\n   *\n   * Crea una nueva tarea usando los datos del formulario y emite el evento taskCreated.\n   * Incluye validación del formulario y manejo del estado de carga.\n   *\n   * @returns {Promise} Promise que se resuelve cuando se completa la creación de la tarea\n   */\n  async onSubmit(): Promise {\n    if (this.taskForm.valid && !this.isLoading) {\n      try {\n        this.isLoading = true;\n\n        const formValue = this.taskForm.value;\n        const taskRequest: CreateTaskRequest = {\n          title: formValue.title.trim(),\n          description: formValue.description?.trim() || undefined,\n          priority: formValue.priority,\n          dueDate: formValue.dueDate || undefined,\n        };\n\n        const newTask = await this.taskService.createTask(taskRequest);\n\n        this.taskCreated.emit(newTask);\n\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating task:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n\n  /**\n   * Reiniciar el formulario a su estado inicial\n   *\n   * Limpia todos los campos del formulario y reinicia el estado de validación.\n   *\n   * @returns {void}\n   */\n  resetForm(): void {\n    this.taskForm.reset({\n      title: '',\n      description: '',\n      priority: 'medium',\n      dueDate: null,\n    });\n\n    this.taskForm.markAsPristine();\n    this.taskForm.markAsUntouched();\n  }\n\n  /**\n   * Marcar todos los campos del formulario como tocados para activar la visualización de validación\n   *\n   * @private\n   * @returns {void}\n   */\n  private markFormGroupTouched(): void {\n    Object.keys(this.taskForm.controls).forEach((key) => {\n      const control = this.taskForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  /**\n   * Obtener control del formulario para acceso desde el template\n   *\n   * @param {string} controlName - Nombre del control del formulario\n   * @returns {AbstractControl | null} El control del formulario o null\n   */\n  getFormControl(controlName: string) {\n    return this.taskForm.get(controlName);\n  }\n}\n    \n\n    \n        \n  \n    \n      add_task\n      Crear Nueva Tarea\n    \n  \n\n  \n    \n      \n      \n        Título de la Tarea\n        \n        title\n        \n          El título de la tarea es obligatorio\n        \n        \n          El título debe tener al menos 3 caracteres\n        \n      \n\n      \n      \n        Descripción\n        \n        description\n      \n\n      \n      \n        Prioridad\n        \n          \n            keyboard_arrow_down\n            Prioridad Baja\n          \n          \n            remove\n            Prioridad Media\n          \n          \n            keyboard_arrow_up\n            Prioridad Alta\n          \n        \n        flag\n      \n\n      \n      \n        Fecha de Vencimiento (Opcional)\n        \n        event\n        \n      \n\n      \n      \n        \n          add\n          {{ isLoading ? \"Creando...\" : \"Crear Tarea\" }}\n        \n\n        \n          clear\n          Limpiar Formulario\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-form.component.scss\n                \n                .title-custom {\n  color: #ffffff;\n}\n\n.task-form-card {\n  max-width: 600px;\n  margin: 20px auto;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.task-form {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 16px 0;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.form-actions {\n  display: flex;\n  gap: 16px;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n\n.submit-btn {\n  min-width: 140px;\n}\n\n.reset-btn {\n  min-width: 120px;\n}\n\n.error {\n  border-color: #f44336 !important;\n}\n\n.priority-icon {\n  margin-right: 8px;\n}\n\n.priority-icon.low {\n  color: #4caf50;\n}\n\n.priority-icon.medium {\n  color: #ff9800;\n}\n\n.priority-icon.high {\n  color: #f44336;\n}\n\nmat-card-header {\n  margin-bottom: 16px;\n}\n\nmat-card-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n@media (max-width: 768px) {\n  .task-form-card {\n    margin: 10px;\n    max-width: none;\n  }\n\n  .form-actions {\n    flex-direction: column;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            add_task      Crear Nueva Tarea                                Título de la Tarea                title                  El título de la tarea es obligatorio                          El título debe tener al menos 3 caracteres                                  Descripción                description                          Prioridad                              keyboard_arrow_down            Prioridad Baja                                remove            Prioridad Media                                keyboard_arrow_up            Prioridad Alta                          flag                          Fecha de Vencimiento (Opcional)                event                                            add          {{ isLoading ? \"Creando...\" : \"Crear Tarea\" }}                          clear          Limpiar Formulario                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskItemComponent.html":{"url":"components/TaskItemComponent.html","title":"component - TaskItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TaskItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-item/task-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Item de Tarea\nUn componente standalone que muestra una tarea individual con características interactivas.\nSoporta alternar completado de tarea, edición y eliminación con estilo Material Design.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                            NgClass\n                            TitleCasePipe\n                            NgIf\n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatCheckboxModule\n                            MatChipsModule\n                            MatTooltipModule\n                            MatMenuModule\n                            MatDividerModule\n                \n            \n\n            \n                styleUrls\n                ./task-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPriorityIcon\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                getPriorityTooltip\n                            \n                            \n                                isOverdue\n                            \n                            \n                                    Async\n                                onDeleteTask\n                            \n                            \n                                    Async\n                                onToggleComplete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskDeleted\n                            \n                            \n                                taskEdit\n                            \n                            \n                                taskToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:54\n                            \n                        \n                \n                    \n                        Entrada: Datos de la tarea a mostrar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        taskDeleted\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:68\n                            \n                        \n                \n                    \n                        Salida: Se emite cuando se elimina la tarea\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        taskEdit\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:75\n                            \n                        \n                \n                    \n                        Salida: Se emite cuando se solicita editar la tarea\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        taskToggled\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:61\n                            \n                        \n                \n                    \n                        Salida: Se emite cuando se alterna el completado de la tarea\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityIcon\n                        \n                    \n                \n            \n            \n                \ngetPriorityIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Obtener icono de prioridad basado en la prioridad de la tarea\n``\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre del icono Material para el nivel de prioridad\n``\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityText\n                        \n                    \n                \n            \n            \n                \ngetPriorityText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Obtener texto de prioridad en español\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Texto de prioridad en español\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityTooltip\n                        \n                    \n                \n            \n            \n                \ngetPriorityTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Obtener texto del tooltip de prioridad\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Tooltip descriptivo para el nivel de prioridad\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverdue\n                        \n                    \n                \n            \n            \n                \nisOverdue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Verificar si la tarea está vencida\nCompara la fecha límite de la tarea con la fecha actual para determinar si está vencida.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si la tarea está vencida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onDeleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Eliminar la tarea actual\nElimina la tarea y emite el evento taskDeleted con el ID de la tarea.\nIncluye confirmación y manejo de errores.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onToggleComplete\n                        \n                    \n                \n            \n            \n                \n                        \n                    onToggleComplete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Alternar el estado de completado de la tarea\nActualiza el estado de completado de la tarea y emite el evento taskToggled.\nManeja el estado de carga y escenarios de error.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se completa el alternado\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-item/task-item.component.ts:81\n                        \n                    \n\n            \n                \n                    Estado de carga para operaciones asíncronas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-item/task-item.component.ts:48\n                        \n                    \n\n            \n                \n                    Servicio de tareas para operaciones de tareas\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, output, inject } from '@angular/core';\nimport { DatePipe, NgClass, TitleCasePipe, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Task } from '../../models/task.model';\nimport { TaskService } from '../../services/task.service';\n\n/**\n * Componente Item de Tarea\n *\n * Un componente standalone que muestra una tarea individual con características interactivas.\n * Soporta alternar completado de tarea, edición y eliminación con estilo Material Design.\n *\n * @component TaskItemComponent\n * @standalone\n */\n@Component({\n  selector: 'app-task-item',\n  standalone: true,\n  imports: [\n    DatePipe,\n    NgClass,\n    TitleCasePipe,\n    NgIf,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.scss'],\n})\nexport class TaskItemComponent {\n  /**\n   * Servicio de tareas para operaciones de tareas\n   * @private\n   */\n  private readonly taskService = inject(TaskService);\n\n  /**\n   * Entrada: Datos de la tarea a mostrar\n   * @type {InputSignal}\n   */\n  readonly task = input.required();\n\n  /**\n   * Salida: Se emite cuando se alterna el completado de la tarea\n   * @event taskToggled\n   * @type {OutputEmitterRef}\n   */\n  readonly taskToggled = output();\n\n  /**\n   * Salida: Se emite cuando se elimina la tarea\n   * @event taskDeleted\n   * @type {OutputEmitterRef}\n   */\n  readonly taskDeleted = output();\n\n  /**\n   * Salida: Se emite cuando se solicita editar la tarea\n   * @event taskEdit\n   * @type {OutputEmitterRef}\n   */\n  readonly taskEdit = output();\n\n  /**\n   * Estado de carga para operaciones asíncronas\n   * @type {boolean}\n   */\n  isLoading = false;\n\n  /**\n   * Alternar el estado de completado de la tarea\n   *\n   * Actualiza el estado de completado de la tarea y emite el evento taskToggled.\n   * Maneja el estado de carga y escenarios de error.\n   *\n   * @returns {Promise} Promise que se resuelve cuando se completa el alternado\n   */\n  async onToggleComplete(): Promise {\n    if (this.isLoading) return;\n\n    try {\n      this.isLoading = true;\n      const updatedTask = await this.taskService.toggleTaskCompletion(\n        this.task().id\n      );\n\n      if (updatedTask) {\n        this.taskToggled.emit(updatedTask);\n      }\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Eliminar la tarea actual\n   *\n   * Elimina la tarea y emite el evento taskDeleted con el ID de la tarea.\n   * Incluye confirmación y manejo de errores.\n   */\n  async onDeleteTask(): Promise {\n    if (this.isLoading) return;\n\n    // Simple confirmation (in a real app, use a proper dialog)\n    if (!confirm(`Are you sure you want to delete \"${this.task().title}\"?`)) {\n      return;\n    }\n\n    try {\n      this.isLoading = true;\n      const deleted = await this.taskService.deleteTask(this.task().id);\n\n      if (deleted) {\n        this.taskDeleted.emit(this.task().id);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Verificar si la tarea está vencida\n   *\n   * Compara la fecha límite de la tarea con la fecha actual para determinar si está vencida.\n   *\n   * @returns {boolean} True si la tarea está vencida\n   */\n  isOverdue(): boolean {\n    if (!this.task().dueDate || this.task().completed) {\n      return false;\n    }\n\n    const now = new Date();\n    const dueDate = new Date(this.task().dueDate!);\n    return dueDate \n    \n\n    \n        \n  \n    \n    \n      \n    \n\n    \n    \n      \n        \n          {{ task().title }}\n        \n\n        \n        \n          \n            {{ getPriorityIcon() }}\n            {{ getPriorityText() }}\n          \n        \n      \n\n      \n      \n        {{ task().description }}\n      \n\n      \n      \n        \n          schedule\n          \n            Creada: {{ task().createdAt | date : \"MMM dd, yyyy\" }}\n          \n        \n\n        \n          event\n          \n            Fecha: {{ task().dueDate | date : \"MMM dd, yyyy\" }}\n          \n          \n            warning\n          \n        \n\n        \n          update\n          \n            Actualizado:\n            {{ task().updatedAt | date : \"MMM dd, yyyy HH:mm\" }}\n          \n        \n      \n    \n\n    \n    \n      \n        more_vert\n      \n\n      \n      \n        \n          {{ task().completed ? \"undo\" : \"check\" }}\n          {{\n            task().completed ? \"Marcar Incompleta\" : \"Marcar Completa\"\n          }}\n        \n\n        \n\n        \n          delete\n          Eliminar Tarea\n        \n      \n\n      \n      \n        {{ task().completed ? \"undo\" : \"check\" }}\n      \n\n      \n        delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-item.component.scss\n                \n                .task-item {\n  margin-bottom: 16px;\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.task-item:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transform: translateY(-2px);\n}\n\n.task-item.completed {\n  opacity: 0.8;\n  background-color: #f5f5f5;\n}\n\n.task-item.high-priority {\n  border-left-color: #f44336;\n}\n\n.task-item.medium-priority {\n  border-left-color: #ff9800;\n}\n\n.task-item.low-priority {\n  border-left-color: #4caf50;\n}\n\n.task-content {\n  display: flex;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 16px;\n}\n\n.task-checkbox {\n  flex-shrink: 0;\n  margin-top: 4px;\n}\n\n.task-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.task-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 8px;\n  gap: 16px;\n}\n\n.task-title {\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 500;\n  line-height: 1.4;\n  word-break: break-word;\n  color: #ffffff;\n}\n\n.completed-text {\n  text-decoration: line-through;\n  color: #000000;\n}\n\n.task-description {\n  margin: 0 0 12px 0;\n  color: #f0f0f0;\n  line-height: 1.5;\n  word-break: break-word;\n}\n\n.task-metadata {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  font-size: 0.85rem;\n  color: #e0e0e0;\n}\n\n.metadata-item {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.metadata-icon {\n  font-size: 16px;\n  width: 16px;\n  height: 16px;\n  color: #ffffff;\n}\n\n.metadata-text {\n  white-space: nowrap;\n}\n\n.due-date.overdue {\n  color: #f44336;\n  font-weight: 500;\n}\n\n.warning-icon {\n  color: #f44336;\n  font-size: 16px;\n  width: 16px;\n  height: 16px;\n}\n\n.task-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  flex-shrink: 0;\n}\n\n.task-actions button {\n  color: #ffffff;\n}\n\n.task-actions .mat-mdc-icon-button {\n  color: #ffffff;\n}\n\n.delete-action {\n  color: #f44336 !important;\n}\n\n.delete-action mat-icon {\n  color: #f44336 !important;\n}\n\n.priority-high {\n  background-color: #ef9a9a !important;\n  color: #212121 !important;\n}\n\n.priority-medium {\n  background-color: #ffcc80 !important;\n  color: #212121 !important;\n}\n\n.priority-low {\n  background-color: #a5d6a7 !important;\n  color: #212121 !important;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .task-content {\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .task-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .task-metadata {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .task-actions {\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n}\n\n/* Animation for completion state */\n.task-item.completed .task-title,\n.task-item.completed .task-description {\n  transition: all 0.3s ease;\n}\n\n/* Loading state */\n.task-item[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{ task().title }}                                              {{ getPriorityIcon() }}            {{ getPriorityText() }}                                            {{ task().description }}                                    schedule                      Creada: {{ task().createdAt | date : \"MMM dd, yyyy\" }}                                    event                      Fecha: {{ task().dueDate | date : \"MMM dd, yyyy\" }}                                warning                                    update                      Actualizado:            {{ task().updatedAt | date : \"MMM dd, yyyy HH:mm\" }}                                                  more_vert                                    {{ task().completed ? \"undo\" : \"check\" }}          {{            task().completed ? \"Marcar Incompleta\" : \"Marcar Completa\"          }}                                  delete          Eliminar Tarea                                  {{ task().completed ? \"undo\" : \"check\" }}                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-list/task-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Lista de Tareas\nComponente standalone que muestra y gestiona una lista de tareas con funcionalidades\nde filtrado, estadísticas y operaciones CRUD. Incluye formulario para crear nuevas tareas\ny maneja la visualización según diferentes filtros (todas, completadas, pendientes).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                            NgIf\n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatBadgeModule\n                            MatChipsModule\n                            MatButtonToggleModule\n                            MatProgressSpinnerModule\n                                TaskItemComponent\n                                TaskFormComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFilter\n                            \n                            \n                                    Readonly\n                                filteredTasks\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Readonly\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAllTasks\n                            \n                            \n                                getCompletionPercentage\n                            \n                            \n                                getCurrentFilter\n                            \n                            \n                                getEmptyStateIcon\n                            \n                            \n                                getEmptyStateMessage\n                            \n                            \n                                getEmptyStateTitle\n                            \n                            \n                                getFilteredTasks\n                            \n                            \n                                getFilterIcon\n                            \n                            \n                                getFilterTitle\n                            \n                            \n                                onTaskCreated\n                            \n                            \n                                onTaskDeleted\n                            \n                            \n                                onTaskToggled\n                            \n                            \n                                setFilter\n                            \n                            \n                                trackByTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:244\n                        \n                    \n\n\n            \n                \n                        Limpia todas las tareas después de confirmación\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se limpian las tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCompletionPercentage\n                        \n                    \n                \n            \n            \n                \ngetCompletionPercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Calcula el porcentaje de completitud de las tareas\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                Porcentaje de tareas completadas (0-100)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentFilter\n                        \n                    \n                \n            \n            \n                \ngetCurrentFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Obtiene el filtro actual\n\n\n                        \n                            Returns :     \"all\" | \"pending\" | \"completed\"\n\n                        \n                            \n                                El filtro actualmente aplicado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmptyStateIcon\n                        \n                    \n                \n            \n            \n                \ngetEmptyStateIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Obtiene el icono para el estado vacío\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre del icono para mostrar cuando no hay tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmptyStateMessage\n                        \n                    \n                \n            \n            \n                \ngetEmptyStateMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje para el estado vacío\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje descriptivo cuando no hay tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmptyStateTitle\n                        \n                    \n                \n            \n            \n                \ngetEmptyStateTitle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Obtiene el título para el estado vacío\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Título descriptivo cuando no hay tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredTasks\n                        \n                    \n                \n            \n            \n                \ngetFilteredTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Obtiene las tareas filtradas según el filtro actual\n\n\n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                Array de tareas filtradas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilterIcon\n                        \n                    \n                \n            \n            \n                \ngetFilterIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Obtiene el icono correspondiente al filtro actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre del icono de Material Design\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilterTitle\n                        \n                    \n                \n            \n            \n                \ngetFilterTitle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Obtiene el título correspondiente al filtro actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Título descriptivo del filtro\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskCreated\n                        \n                    \n                \n            \n            \n                \nonTaskCreated(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:209\n                        \n                    \n\n\n            \n                \n                        Maneja la creación de una nueva tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea recién creada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskDeleted\n                        \n                    \n                \n            \n            \n                \nonTaskDeleted(taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID de la tarea eliminada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskToggled\n                        \n                    \n                \n            \n            \n                \nonTaskToggled(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:220\n                        \n                    \n\n\n            \n                \n                        Maneja el cambio de estado de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea que cambió de estado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(filter: \"all\" | \"pending\" | \"completed\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Establece un nuevo filtro para las tareas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        \"all\" | \"pending\" | \"completed\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl filtro a aplicar ('all', 'pending', 'completed')\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByTaskId\n                        \n                    \n                \n            \n            \n                \ntrackByTaskId(index: number, task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:269\n                        \n                    \n\n\n            \n                \n                        Función de seguimiento para ngFor optimizada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nÍndice del elemento\n\n\n                                            \n                                        \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObjeto de tarea\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                ID único de la tarea\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('all')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:55\n                        \n                    \n\n            \n                \n                    Filtro actual aplicado a las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filter = this.currentFilter();\n    const tasks = this.taskService.tasks();\n\n    switch (filter) {\n      case 'completed':\n        return tasks.filter((task) => task.completed);\n      case 'pending':\n        return tasks.filter((task) => !task.completed);\n      default:\n        return tasks;\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:68\n                        \n                    \n\n            \n                \n                    Señal computada de tareas filtradas según el filtro actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:61\n                        \n                    \n\n            \n                \n                    Estado de carga\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:49\n                        \n                    \n\n            \n                \n                    Servicio de tareas inyectado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, signal, computed } from '@angular/core';\nimport { NgFor, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TaskItemComponent } from '../task-item/task-item.component';\nimport { TaskFormComponent } from '../task-form/task-form.component';\nimport { Task } from '../../models/task.model';\nimport { TaskService } from '../../services/task.service';\n\n/**\n * Componente Lista de Tareas\n *\n * Componente standalone que muestra y gestiona una lista de tareas con funcionalidades\n * de filtrado, estadísticas y operaciones CRUD. Incluye formulario para crear nuevas tareas\n * y maneja la visualización según diferentes filtros (todas, completadas, pendientes).\n *\n * @component TaskListComponent\n * @standalone\n */\n@Component({\n  selector: 'app-task-list',\n  standalone: true,\n  imports: [\n    NgFor,\n    NgIf,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    MatProgressSpinnerModule,\n    TaskItemComponent,\n    TaskFormComponent,\n  ],\n  templateUrl: './task-list.component.html',\n  styleUrl: './task-list.component.scss',\n})\nexport class TaskListComponent {\n  /**\n   * Servicio de tareas inyectado\n   * @readonly\n   */\n  readonly taskService = inject(TaskService);\n\n  /**\n   * Filtro actual aplicado a las tareas\n   * @type {WritableSignal}\n   */\n  readonly currentFilter = signal('all');\n\n  /**\n   * Estado de carga\n   * @type {boolean}\n   */\n  isLoading = false;\n\n  /**\n   * Señal computada de tareas filtradas según el filtro actual\n   * @readonly\n   * @returns {Signal} Array de tareas filtradas\n   */\n  readonly filteredTasks = computed(() => {\n    const filter = this.currentFilter();\n    const tasks = this.taskService.tasks();\n\n    switch (filter) {\n      case 'completed':\n        return tasks.filter((task) => task.completed);\n      case 'pending':\n        return tasks.filter((task) => !task.completed);\n      default:\n        return tasks;\n    }\n  });\n\n  /**\n   * Obtiene el filtro actual\n   *\n   * @returns {'all' | 'pending' | 'completed'} El filtro actualmente aplicado\n   */\n  getCurrentFilter(): 'all' | 'pending' | 'completed' {\n    return this.currentFilter();\n  }\n\n  /**\n   * Establece un nuevo filtro para las tareas\n   *\n   * @param {string} filter - El filtro a aplicar ('all', 'pending', 'completed')\n   * @returns {void}\n   */\n  setFilter(filter: 'all' | 'pending' | 'completed'): void {\n    this.currentFilter.set(filter);\n  }\n\n  /**\n   * Obtiene las tareas filtradas según el filtro actual\n   *\n   * @returns {Task[]} Array de tareas filtradas\n   */\n  getFilteredTasks(): Task[] {\n    return this.filteredTasks();\n  }\n\n  /**\n   * Calcula el porcentaje de completitud de las tareas\n   *\n   * @returns {number} Porcentaje de tareas completadas (0-100)\n   */\n  getCompletionPercentage(): number {\n    const total = this.taskService.totalTasksCount();\n    if (total === 0) return 0;\n\n    const completed = this.taskService.completedTasksCount();\n    return Math.round((completed / total) * 100);\n  }\n\n  /**\n   * Obtiene el icono correspondiente al filtro actual\n   *\n   * @returns {string} Nombre del icono de Material Design\n   */\n  getFilterIcon(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'check_circle';\n      case 'pending':\n        return 'schedule';\n      default:\n        return 'list';\n    }\n  }\n\n  /**\n   * Obtiene el título correspondiente al filtro actual\n   *\n   * @returns {string} Título descriptivo del filtro\n   */\n  getFilterTitle(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'Tareas Completadas';\n      case 'pending':\n        return 'Tareas Pendientes';\n      default:\n        return 'Todas las Tareas';\n    }\n  }\n\n  /**\n   * Obtiene el icono para el estado vacío\n   *\n   * @returns {string} Nombre del icono para mostrar cuando no hay tareas\n   */\n  getEmptyStateIcon(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'check_circle_outline';\n      case 'pending':\n        return 'schedule';\n      default:\n        return 'assignment';\n    }\n  }\n\n  /**\n   * Obtiene el título para el estado vacío\n   *\n   * @returns {string} Título descriptivo cuando no hay tareas\n   */\n  getEmptyStateTitle(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'No hay tareas completadas';\n      case 'pending':\n        return 'No hay tareas pendientes';\n      default:\n        return 'No hay tareas';\n    }\n  }\n\n  /**\n   * Obtiene el mensaje para el estado vacío\n   *\n   * @returns {string} Mensaje descriptivo cuando no hay tareas\n   */\n  getEmptyStateMessage(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'Aún no has completado ninguna tarea. ¡Sigue trabajando!';\n      case 'pending':\n        return '¡Excelente! Has completado todas tus tareas.';\n      default:\n        return 'Comienza agregando tu primera tarea usando el formulario superior.';\n    }\n  }\n\n  /**\n   * Maneja la creación de una nueva tarea\n   *\n   * @param {Task} task - La tarea recién creada\n   * @returns {void}\n   */\n  onTaskCreated(task: Task): void {\n    // La tarea ya se agregó al servicio mediante el formulario\n    console.log('Nueva tarea creada:', task.title);\n  }\n\n  /**\n   * Maneja el cambio de estado de una tarea\n   *\n   * @param {Task} task - La tarea que cambió de estado\n   * @returns {void}\n   */\n  onTaskToggled(task: Task): void {\n    console.log(\n      'Tarea actualizada:',\n      task.title,\n      'Completada:',\n      task.completed\n    );\n  }\n\n  /**\n   * Maneja la eliminación de una tarea\n   *\n   * @param {string} taskId - ID de la tarea eliminada\n   * @returns {void}\n   */\n  onTaskDeleted(taskId: string): void {\n    console.log('Tarea eliminada con ID:', taskId);\n  }\n\n  /**\n   * Limpia todas las tareas después de confirmación\n   *\n   * @returns {Promise} Promise que se resuelve cuando se limpian las tareas\n   */\n  async clearAllTasks(): Promise {\n    const confirmed = confirm(\n      '¿Estás seguro de que quieres eliminar todas las tareas? Esta acción no se puede deshacer.'\n    );\n\n    if (confirmed) {\n      try {\n        this.isLoading = true;\n        await this.taskService.clearAllTasks();\n        console.log('Todas las tareas han sido eliminadas');\n      } catch (error) {\n        console.error('Error al limpiar tareas:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n\n  /**\n   * Función de seguimiento para ngFor optimizada\n   *\n   * @param {number} index - Índice del elemento\n   * @param {Task} task - Objeto de tarea\n   * @returns {string} ID único de la tarea\n   */\n  trackByTaskId(index: number, task: Task): string {\n    return task.id;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            assignment\n            \n              {{\n                taskService.totalTasksCount()\n              }}\n              Total\n            \n          \n\n          \n            schedule\n            \n              {{\n                taskService.pendingTasksCount()\n              }}\n              Pendientes\n            \n          \n\n          \n            check_circle\n            \n              {{\n                taskService.completedTasksCount()\n              }}\n              Completadas\n            \n          \n\n          \n            donut_large\n            \n              {{ getCompletionPercentage() }}%\n              Progreso\n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n  \n\n  \n  \n    \n      \n        \n          \n            filter_list\n            Filtrar Tareas\n          \n        \n\n        \n          \n            list\n            Todas\n            {{\n              taskService.totalTasksCount()\n            }}\n          \n\n          \n            schedule\n            Pendientes\n            {{\n              taskService.pendingTasksCount()\n            }}\n          \n\n          \n            check_circle\n            Completadas\n            {{\n              taskService.completedTasksCount()\n            }}\n          \n        \n\n        \n        \n          \n            clear_all\n            Limpiar Todo\n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        {{ getFilterIcon() }}\n        {{ getFilterTitle() }}\n        {{ getFilteredTasks().length }}\n      \n    \n\n    \n    \n      \n      \n      Cargando tareas...\n    \n\n    \n    \n      \n      \n        \n          \n            \n              {{ getEmptyStateIcon() }}\n              {{ getEmptyStateTitle() }}\n              {{ getEmptyStateMessage() }}\n\n              \n                list\n                Ver Todas las Tareas\n              \n            \n          \n        \n      \n\n      \n       0\" class=\"tasks-container\">\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            assignment                          {{                taskService.totalTasksCount()              }}              Total                                            schedule                          {{                taskService.pendingTasksCount()              }}              Pendientes                                            check_circle                          {{                taskService.completedTasksCount()              }}              Completadas                                            donut_large                          {{ getCompletionPercentage() }}%              Progreso                                                                                                filter_list            Filtrar Tareas                                                list            Todas            {{              taskService.totalTasksCount()            }}                                schedule            Pendientes            {{              taskService.pendingTasksCount()            }}                                check_circle            Completadas            {{              taskService.completedTasksCount()            }}                                                        clear_all            Limpiar Todo                                                    {{ getFilterIcon() }}        {{ getFilterTitle() }}        {{ getFilteredTasks().length }}                                    Cargando tareas...                                                                    {{ getEmptyStateIcon() }}              {{ getEmptyStateTitle() }}              {{ getEmptyStateMessage() }}                              list                Ver Todas las Tareas                                                               0\" class=\"tasks-container\">                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de Tareas - Operaciones CRUD\nEste servicio maneja todas las operaciones relacionadas con tareas incluyendo Crear, Leer, Actualizar y Eliminar.\nUtiliza Angular Signals para gestión reactiva del estado y proporciona APIs basadas en Observable y Signal.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _nextId\n                            \n                            \n                                    Private\n                                    Readonly\n                                _tasks\n                            \n                            \n                                    Private\n                                    Readonly\n                                _tasks$\n                            \n                            \n                                    Public\n                                    Readonly\n                                completedTasksCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                pendingTasksCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                tasks\n                            \n                            \n                                    Public\n                                    Readonly\n                                tasks$\n                            \n                            \n                                    Public\n                                    Readonly\n                                totalTasksCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAllTasks\n                            \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                    Private\n                                initializeSampleData\n                            \n                            \n                                    Async\n                                toggleTaskCompletion\n                            \n                            \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:76\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Limpiar todas las tareas\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se limpian todas las tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(taskRequest: CreateTaskRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Crear una nueva tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                taskRequest\n                                            \n                                                            CreateTaskRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos de la tarea a crear\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise que se resuelve con la tarea creada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:183\n                        \n                    \n\n\n            \n                \n                        Eliminar una tarea por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID de la tarea a eliminar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve con true si se eliminó, false si no se encontró\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeSampleData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeSampleData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Inicializar el servicio con datos de ejemplo para demostración\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleTaskCompletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleTaskCompletion(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Alternar el estado de completado de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID de la tarea a alternar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise que se resuelve con la tarea actualizada o null si no se encuentra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(id: string, updateRequest: UpdateTaskRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:150\n                        \n                    \n\n\n            \n                \n                        Actualizar una tarea existente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID de la tarea a actualizar\n\n\n                                            \n                                        \n                                        \n                                                updateRequest\n                                            \n                                                            UpdateTaskRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos a actualizar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise que se resuelve con la tarea actualizada o null si no se encuentra\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:37\n                        \n                    \n\n            \n                \n                    Contador privado para generar IDs únicos de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:25\n                        \n                    \n\n            \n                \n                    Signal privada que contiene todas las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:31\n                        \n                    \n\n            \n                \n                    BehaviorSubject privado para suscripciones basadas en Observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        completedTasksCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this._tasks().filter((task) => task.completed).length\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:58\n                        \n                    \n\n            \n                \n                    Signal computada para el conteo de tareas completadas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pendingTasksCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this._tasks().filter((task) => !task.completed).length\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:67\n                        \n                    \n\n            \n                \n                    Signal computada para el conteo de tareas pendientes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._tasks.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:44\n                        \n                    \n\n            \n                \n                    Signal pública de solo lectura para acceder a las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._tasks$.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:51\n                        \n                    \n\n            \n                \n                    Flujo Observable de todas las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        totalTasksCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this._tasks().length)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:76\n                        \n                    \n\n            \n                \n                    Signal computada para el conteo total de tareas\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, computed } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  Task,\n  CreateTaskRequest,\n  UpdateTaskRequest,\n} from '../models/task.model';\n\n/**\n * Servicio de Tareas - Operaciones CRUD\n *\n * Este servicio maneja todas las operaciones relacionadas con tareas incluyendo Crear, Leer, Actualizar y Eliminar.\n * Utiliza Angular Signals para gestión reactiva del estado y proporciona APIs basadas en Observable y Signal.\n *\n * @class TaskService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  /**\n   * Signal privada que contiene todas las tareas\n   * @private\n   */\n  private readonly _tasks = signal([]);\n\n  /**\n   * BehaviorSubject privado para suscripciones basadas en Observable\n   * @private\n   */\n  private readonly _tasks$ = new BehaviorSubject([]);\n\n  /**\n   * Contador privado para generar IDs únicos de tareas\n   * @private\n   */\n  private _nextId = 1;\n\n  /**\n   * Signal pública de solo lectura para acceder a las tareas\n   * @readonly\n   * @returns {Signal} Todas las tareas\n   */\n  public readonly tasks = this._tasks.asReadonly();\n\n  /**\n   * Flujo Observable de todas las tareas\n   * @readonly\n   * @returns {Observable} Observable de todas las tareas\n   */\n  public readonly tasks$: Observable = this._tasks$.asObservable();\n\n  /**\n   * Signal computada para el conteo de tareas completadas\n   * @readonly\n   * @returns {Signal} Número de tareas completadas\n   */\n  public readonly completedTasksCount = computed(\n    () => this._tasks().filter((task) => task.completed).length\n  );\n\n  /**\n   * Signal computada para el conteo de tareas pendientes\n   * @readonly\n   * @returns {Signal} Número de tareas pendientes\n   */\n  public readonly pendingTasksCount = computed(\n    () => this._tasks().filter((task) => !task.completed).length\n  );\n\n  /**\n   * Signal computada para el conteo total de tareas\n   * @readonly\n   * @returns {Signal} Número total de tareas\n   */\n  public readonly totalTasksCount = computed(() => this._tasks().length);\n\n  constructor() {\n    this.initializeSampleData();\n  }\n\n  /**\n   * Inicializar el servicio con datos de ejemplo para demostración\n   * @private\n   * @returns {void}\n   */\n  private initializeSampleData(): void {\n    const sampleTasks: Task[] = [\n      {\n        id: '1',\n        title: 'Configurar Angular Material',\n        description: 'Instalar y configurar Angular Material en el proyecto',\n        completed: true,\n        priority: 'high',\n        createdAt: new Date(Date.now() - 86400000),\n        updatedAt: new Date(Date.now() - 86400000),\n      },\n      {\n        id: '2',\n        title: 'Crear componentes de tareas',\n        description:\n          'Desarrollar los componentes de lista de tareas, elemento de tarea y formulario de tarea',\n        completed: false,\n        priority: 'high',\n        createdAt: new Date(Date.now() - 3600000),\n        updatedAt: new Date(Date.now() - 3600000),\n        dueDate: new Date(Date.now() + 259200000),\n      },\n    ];\n\n    this._tasks.set(sampleTasks);\n    this._tasks$.next(sampleTasks);\n    this._nextId = 3;\n  }\n\n  /**\n   * Crear una nueva tarea\n   *\n   * @param {CreateTaskRequest} taskRequest - Los datos de la tarea a crear\n   * @returns {Promise} Promise que se resuelve con la tarea creada\n   */\n  async createTask(taskRequest: CreateTaskRequest): Promise {\n    const now = new Date();\n    const newTask: Task = {\n      id: this._nextId.toString(),\n      title: taskRequest.title,\n      description: taskRequest.description || '',\n      completed: false,\n      priority: taskRequest.priority || 'medium',\n      createdAt: now,\n      updatedAt: now,\n      dueDate: taskRequest.dueDate,\n    };\n\n    this._nextId++;\n    const updatedTasks = [...this._tasks(), newTask];\n    this._tasks.set(updatedTasks);\n    this._tasks$.next(updatedTasks);\n\n    return Promise.resolve(newTask);\n  }\n\n  /**\n   * Actualizar una tarea existente\n   *\n   * @param {string} id - El ID de la tarea a actualizar\n   * @param {UpdateTaskRequest} updateRequest - Los datos a actualizar\n   * @returns {Promise} Promise que se resuelve con la tarea actualizada o null si no se encuentra\n   */\n  async updateTask(\n    id: string,\n    updateRequest: UpdateTaskRequest\n  ): Promise {\n    const tasks = this._tasks();\n    const taskIndex = tasks.findIndex((t) => t.id === id);\n\n    if (taskIndex === -1) {\n      return Promise.resolve(null);\n    }\n\n    const existingTask = tasks[taskIndex];\n    const updatedTask: Task = {\n      ...existingTask,\n      ...updateRequest,\n      updatedAt: new Date(),\n    };\n\n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex] = updatedTask;\n\n    this._tasks.set(updatedTasks);\n    this._tasks$.next(updatedTasks);\n\n    return Promise.resolve(updatedTask);\n  }\n\n  /**\n   * Eliminar una tarea por ID\n   *\n   * @param {string} id - El ID de la tarea a eliminar\n   * @returns {Promise} Promise que se resuelve con true si se eliminó, false si no se encontró\n   */\n  async deleteTask(id: string): Promise {\n    const tasks = this._tasks();\n    const filteredTasks = tasks.filter((t) => t.id !== id);\n\n    if (filteredTasks.length === tasks.length) {\n      return Promise.resolve(false);\n    }\n\n    this._tasks.set(filteredTasks);\n    this._tasks$.next(filteredTasks);\n\n    return Promise.resolve(true);\n  }\n\n  /**\n   * Alternar el estado de completado de una tarea\n   *\n   * @param {string} id - El ID de la tarea a alternar\n   * @returns {Promise} Promise que se resuelve con la tarea actualizada o null si no se encuentra\n   */\n  async toggleTaskCompletion(id: string): Promise {\n    const task = this._tasks().find((t) => t.id === id);\n    if (!task) {\n      return Promise.resolve(null);\n    }\n\n    return this.updateTask(id, { completed: !task.completed });\n  }\n\n  /**\n   * Limpiar todas las tareas\n   *\n   * @returns {Promise} Promise que se resuelve cuando se limpian todas las tareas\n   */\n  async clearAllTasks(): Promise {\n    this._tasks.set([]);\n    this._tasks$.next([]);\n    this._nextId = 1;\n    return Promise.resolve();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateTaskRequest.html":{"url":"interfaces/UpdateTaskRequest.html","title":"interface - UpdateTaskRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateTaskRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para actualizar una tarea existente\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Estado de finalización actualizado\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripción actualizada de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Fecha límite actualizada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"low\" | \"medium\" | \"high\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"low\" | \"medium\" | \"high\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Nivel de prioridad actualizado\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Título actualizado de la tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  /**\n   * Identificador único de la tarea\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Título de la tarea (requerido)\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción detallada opcional de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Indica si la tarea está completada\n   * @type {boolean}\n   * @default false\n   */\n  completed: boolean;\n\n  /**\n   * Nivel de prioridad de la tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha de creación de la tarea\n   * @type {Date}\n   */\n  createdAt: Date;\n\n  /**\n   * Fecha de última actualización de la tarea\n   * @type {Date}\n   */\n  updatedAt: Date;\n\n  /**\n   * Fecha límite opcional de la tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n *\n * @interface CreateTaskRequest\n */\nexport interface CreateTaskRequest {\n  /**\n   * Título de la nueva tarea\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción opcional para la nueva tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Nivel de prioridad para la nueva tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite opcional para la nueva tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para actualizar una tarea existente\n *\n * @interface UpdateTaskRequest\n */\nexport interface UpdateTaskRequest {\n  /**\n   * Título actualizado de la tarea\n   * @type {string | undefined}\n   */\n  title?: string;\n\n  /**\n   * Descripción actualizada de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Estado de finalización actualizado\n   * @type {boolean | undefined}\n   */\n  completed?: boolean;\n\n  /**\n   * Nivel de prioridad actualizado\n   * @type {'low' | 'medium' | 'high' | undefined}\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite actualizada\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/task-form/task-form.component.ts\n            \n            component\n            TaskFormComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                        src/app/components/task-item/task-item.component.ts\n            \n            component\n            TaskItemComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/components/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/models/task.model.ts\n            \n            interface\n            CreateTaskRequest\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/models/task.model.ts\n            \n            interface\n            Task\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/models/task.model.ts\n            \n            interface\n            UpdateTaskRequest\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.19\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.19\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/ssr : ^19.2.16\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nTask Manager - Prueba Técnica Angular 19\nDescripción del Proyecto\nEsta es una prueba técnica que consiste en crear una aplicación de lista de tareas (Task Manager) utilizando Angular 19 y Angular Material.\n🎯 Objetivo de la Prueba\nDesarrollar una aplicación web que permita:\n\n✅ Agregar nuevas tareas\n✅ Marcar tareas como completadas\n❌ Eliminar tareas existentes\n📋 Visualizar la lista completa de tareas\n\n🏗️ Arquitectura Requerida\nComponentes\n\ntask-list: Componente para mostrar la lista de tareas\ntask-item: Componente para representar cada tarea individual\ntask-form: Componente para agregar nuevas tareas\n\nServicios\n\ntask-service: Servicio para manejar operaciones CRUD (Crear, Leer, Actualizar, Eliminar)\n\nTecnologías\n\nFrontend: Angular 19\nUI Library: Angular Material\nStyling: SCSS\nDocumentation: Compodoc\nContainerization: Docker\n\n\n🚀 Configuración del Entorno de Desarrollo\nPrerrequisitos\n\nDocker y Docker Compose instalados\nGit (opcional)\n\n📦 Instalación y Ejecución\n1. Clonar o descargar el proyecto\nExample :git clone \ncd prueba_angular2. Levantar entorno de desarrollo con Docker\nExample :# Comando para levantar el entorno completo de desarrollo\ndocker-compose up -d && docker exec -it prueba_angular_frontend bashEste comando:\n\nConstruye y levanta el contenedor Docker\nTe conecta automáticamente al contenedor para trabajar\n\n3. Dentro del contenedor - Primera vez\nExample :# Crear el proyecto Angular (solo la primera vez)\nng new task-manager --routing=true --style=scss --skip-git=true\ncd task-manager\n\n# Instalar Angular Material\nng add @angular/material\n\n# Generar componentes\nng generate component components/task-list\nng generate component components/task-item  \nng generate component components/task-form\n\n# Generar servicio\nng generate service services/task\n\n# Instalar Compodoc para documentación\nnpm install -g @compodoc/compodoc4. Ejecutar la aplicación en desarrollo\nExample :ng serve --host 0.0.0.0 --port 42005. Acceder a la aplicación\n\nAplicación: http://localhost:4200\nDocumentación: Generar con compodoc -p tsconfig.json -s\n\n\n🐳 Comandos Docker Útiles\nComando principal de desarrollo\nExample :# Levantar entorno de desarrollo\ndocker-compose up -d && docker exec -it prueba_angular_frontend bashComandos adicionales\nExample :# Solo levantar contenedor\ndocker-compose up -d\n\n# Entrar al contenedor manualmente\ndocker exec -it prueba_angular_frontend bash\n\n# Ver logs del contenedor\ndocker-compose logs -f prueba_angular_frontend\n\n# Detener servicios\ndocker-compose down\n\n# Reconstruir contenedor\ndocker-compose up -d --build\n📁 Estructura del Proyecto\nExample :prueba_angular/\n├── app/\n│   └── frontend/\n│       └── task-manager/          # Proyecto Angular\n│           ├── src/\n│           │   ├── app/\n│           │   │   ├── components/\n│           │   │   │   ├── task-list/\n│           │   │   │   ├── task-item/\n│           │   │   │   └── task-form/\n│           │   │   └── services/\n│           │   │       └── task.service.ts\n│           │   └── ...\n│           └── ...\n├── docker-compose.yml\n├── Dockerfile\n├── PruebaTécnica_Angular.pdf     # Especificaciones originales\n└── README.md\n📚 Documentación con Compodoc\nGenerar documentación\nExample :# Generar documentación estática\ncompodoc -p tsconfig.json\n\n# Servir documentación en desarrollo\ncompodoc -p tsconfig.json -sLa documentación estará disponible en: http://localhost:8080\n\n🔧 Tecnologías Utilizadas\n\n\n\nTecnología\nVersión\nPropósito\n\n\n\n\nAngular\n19.x\nFramework principal\n\n\nAngular Material\nLatest\nComponentes UI\n\n\nTypeScript\nLatest\nLenguaje de programación\n\n\nSCSS\n-\nEstilos\n\n\nDocker\n-\nContainerización\n\n\nNode.js\n22\nRuntime\n\n\nCompodoc\nLatest\nDocumentación\n\n\n\n\n📝 Notas de Desarrollo\n\nEl contenedor mantiene el proyecto persistente en ./app/frontend/\nPuedes instalar paquetes adicionales desde dentro del contenedor\nLos cambios se reflejan automáticamente gracias al volume mount\nEl puerto 4200 está expuesto para acceso desde el host\n\n\n🤝 Contribución\nEste es un proyecto de prueba técnica. Para cualquier consulta o mejora:\n\nFork del proyecto\nCrear rama para features (git checkout -b feature/nueva-funcionalidad)\nCommit de cambios (git commit -am 'Agregar nueva funcionalidad')\nPush a la rama (git push origin feature/nueva-funcionalidad)\nCrear Pull Request\n\n\nDesarrollado como prueba técnica - Angular 19 + Angular Material + Docker\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Manejador de peticiones usado por Angular CLI (para dev-server y durante build) o Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay())]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (context: BootstrapContext) =>\n    bootstrapApplication(AppComponent, config, context)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
