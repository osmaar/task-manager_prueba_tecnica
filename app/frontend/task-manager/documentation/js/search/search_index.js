var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.547,1,1.298]],["body/components/AppComponent.html",[0,0.79,1,2.005,2,1.414,3,0.68,4,0.296,5,1.332,6,0.841,7,0.841,8,0.249,9,1.665,10,0.663,11,2.715,12,4.707,13,1.675,14,1.764,15,3.932,16,3.055,17,1.352,18,3.292,19,2.107,20,2.122,21,2.483,22,1.312,23,2.483,24,2.107,25,1.601,26,1.825,27,5.477,28,2.27,29,3.055,30,3.055,31,3.055,32,1.224,33,1.716,34,2.123,35,0.927,36,1.825,37,0.877,38,1.601,39,3.653,40,2.183,41,2.183,42,2.969,43,1.875,44,1.691,45,0.048,46,2.519,47,2.591,48,2.183,49,2.463,50,2.594,51,2.289,52,2.289,53,1.865,54,2.123,55,3.653,56,2.381,57,2.519,58,2.519,59,1.621,60,2.969,61,3.74,62,3.653,63,3.653,64,3.653,65,2.969,66,2.183,67,3.653,68,2.103,69,3.653,70,0.493,71,3.653,72,2.329,73,2.103,74,1.914,75,1.914,76,2.395,77,2.289,78,2.463,79,2.573,80,1.914,81,2.463,82,4.944,83,2.184,84,2.591,85,2.226,86,3.74,87,5.173,88,3.693,89,2.511,90,1.914,91,2.103,92,2.594,93,2.913,94,3.091,95,1.886,96,3.653,97,1.914,98,1.914,99,2.183,100,2.183,101,2.183,102,2.103,103,3.653,104,1.183,105,2.183,106,3.653,107,2.183,108,3.693,109,5.424,110,2.969,111,1.499,112,1.914,113,1.691,114,2.969,115,2.519,116,2.591,117,3.653,118,3.693,119,2.03,120,3.653,121,2.519,122,3.18,123,3.693,124,3.653,125,2.381,126,1.499,127,3.653,128,3.653,129,2.969,130,3.133,131,2.519,132,5.173,133,3.653,134,3.653,135,3.653,136,3.653,137,0.816,138,2.969,139,4.543,140,2.183,141,3.653,142,3.336,143,3.653,144,2.715,145,2.519,146,4.332,147,4.543,148,0.442,149,1.656,150,0.493,151,0.684,152,0.516,153,0.877,154,1.114,155,2.048,156,1.414,157,3.055,158,3.055,159,2.048,160,1.015,161,0.4,162,2.048,163,1.224,164,1.224,165,1.665,166,2.048,167,1.412,168,2.048,169,2.048,170,2.048,171,2.048,172,0.296,173,0.457,174,0.948,175,1.254,176,1.825,177,1.224,178,2.42,179,1.224,180,0.776,181,1.224,182,0.948,183,1.224,184,0.948,185,1.224,186,1.224,187,0.588,188,0.663,189,1.224,190,1.224,191,0.025,192,0.025]],["title/interfaces/CompoDocConfig.html",[193,0.547,194,1.469]],["body/interfaces/CompoDocConfig.html",[0,0.542,3,0.401,4,0.401,5,0.658,6,0.741,7,0.741,8,0.612,22,0.584,33,0.658,35,0.458,37,0.971,44,0.835,45,0.048,47,1.772,48,1.078,49,2.358,50,2.477,51,1.565,52,1.565,53,2.152,54,2.168,56,1.454,59,1.445,66,1.078,68,0.835,70,0.22,72,1.682,73,1.565,74,1.772,75,1.772,76,2.086,77,2.003,78,2.086,79,1.565,81,1.284,83,1.85,84,1.772,85,2.065,89,1.757,90,0.946,91,0.835,92,2.462,93,2.553,94,1.078,97,2.147,98,0.946,99,1.078,100,1.078,101,1.078,102,0.835,104,1.229,105,2.268,107,2.021,111,2.168,112,2.362,113,2.086,116,2.147,119,0.741,122,2.586,125,0.946,126,1.388,137,1.253,140,1.078,148,0.489,149,0.658,150,0.673,151,0.904,152,0.641,160,0.915,161,0.352,172,0.261,173,0.403,180,0.458,187,0.518,188,1.629,191,0.022,192,0.022,193,0.66,194,1.772,195,0.741,196,0.584,197,0.741,198,1.078,199,1.645,200,2.618,201,2.618,202,2.618,203,2.618,204,2.618,205,2.618,206,2.618,207,2.618,208,2.618,209,2.618,210,2.618,211,2.618,212,2.618,213,2.618,214,2.618,215,2.618,216,2.618,217,2.618,218,2.618,219,2.618,220,2.618,221,2.618,222,2.618,223,2.826,224,1.666,225,1.914,226,1.078,227,2.332,228,1.914,229,1.914,230,1.078,231,1.012,232,1.078,233,1.012,234,1.772,235,1.078,236,1.012,237,0.835,238,1.078,239,1.454,240,1.078,241,2.147,242,1.914,243,1.914,244,1.244,245,1.244,246,1.244,247,2.826,248,1.914,249,1.914,250,1.914,251,1.244,252,2.501,253,1.565,254,2.021,255,2.598,256,1.454,257,1.244,258,1.914,259,1.244,260,1.078,261,1.914,262,1.078,263,3.668,264,0.835,265,2.332,266,0.741,267,0.946,268,1.244,269,0.741,270,1.445,271,1.244,272,1.244,273,1.078,274,1.244,275,1.244,276,1.658,277,2.332,278,1.244,279,1.914,280,2.021,281,1.244,282,1.244,283,1.078,284,2.449,285,1.914,286,1.658,287,1.244,288,1.078,289,1.244,290,1.244,291,1.244,292,1.244,293,1.078,294,1.078,295,2.147,296,2.618,297,2.618,298,1.757,299,2.984,300,1.244,301,3.108,302,2.826,303,1.244,304,1.914,305,1.244,306,1.244,307,2.332,308,3.291,309,1.244,310,1.914,311,2.021,312,1.078,313,2.021,314,1.244,315,1.244,316,1.658,317,1.914,318,1.244,319,1.244,320,1.244,321,1.244,322,1.244,323,1.078,324,1.078,325,1.244,326,1.244,327,1.772,328,2.693,329,1.244,330,2.332,331,1.244,332,2.021,333,2.332,334,1.244,335,1.914,336,1.658,337,2.332,338,1.914,339,1.244,340,1.244,341,2.021,342,2.268,343,1.658,344,1.914,345,0.946,346,2.984,347,1.244,348,2.268,349,1.914,350,1.914,351,1.244,352,1.244,353,1.244,354,1.244,355,2.78,356,1.244,357,1.078,358,1.914,359,1.244,360,1.244,361,1.244,362,1.244,363,1.244,364,1.244,365,1.244,366,1.244,367,1.244,368,1.244,369,1.244,370,1.244,371,1.244,372,1.244,373,1.914,374,1.244,375,1.244,376,1.244,377,1.244,378,1.757,379,1.244,380,0.848,381,1.012,382,1.244,383,1.284,384,1.244,385,1.244,386,1.244,387,1.244,388,1.244,389,1.37,390,3.36,391,1.244,392,0.835,393,1.244,394,1.244,395,1.244,396,1.244,397,1.909,398,1.078,399,1.776,400,2.294,401,1.244,402,1.244,403,1.244,404,1.244,405,1.682,406,2,407,1.897,408,1.244,409,1.244,410,2.332,411,1.914,412,1.244,413,1.776,414,1.445,415,3.616,416,1.244,417,2.618,418,2.984,419,1.244,420,1.244,421,1.244,422,2.332,423,1.327,424,2.332,425,2.021,426,1.244,427,1.244,428,1.244,429,1.244,430,1.244,431,1.244,432,1.244,433,2.618,434,1.244,435,1.244,436,1.244,437,1.914,438,1.244,439,1.078,440,1.244,441,1.658,442,1.078,443,1.244,444,2.021,445,0.946,446,1.244,447,1.244,448,1.244,449,1.244,450,1.244,451,1.012,452,1.244,453,1.09,454,1.078,455,1.244,456,1.244,457,2.332,458,0.946,459,1.244,460,1.244,461,1.244,462,1.244,463,1.244,464,1.244,465,1.244,466,1.244,467,1.244,468,0.835,469,1.244,470,1.244,471,1.244,472,1.244,473,1.914,474,1.244,475,1.244,476,1.914,477,1.244,478,1.244,479,1.244,480,1.244,481,1.078,482,1.078,483,1.078,484,1.078,485,1.244,486,1.078,487,1.244,488,1.078,489,1.244,490,1.244,491,1.244,492,1.244,493,1.078,494,0.946,495,1.078,496,1.244,497,1.989,498,1.244,499,0.946,500,1.244,501,1.244,502,1.244,503,1.244,504,1.244,505,1.658,506,1.244,507,1.914,508,1.244,509,2.268,510,1.244,511,1.244,512,1.914,513,1.244,514,1.244,515,1.244,516,1.914,517,1.244,518,1.244,519,1.244,520,1.244,521,1.454,522,1.244,523,1.078,524,1.078,525,1.078,526,1.078,527,1.078,528,1.078,529,1.244,530,1.244,531,1.244,532,1.244,533,1.244,534,1.244,535,1.078,536,1.244]],["title/interfaces/CreateTaskRequest.html",[193,0.547,537,1.151]],["body/interfaces/CreateTaskRequest.html",[3,0.47,4,0.47,8,0.395,10,1.735,13,1.858,14,2.091,17,0.933,45,0.048,70,0.395,95,1.919,148,0.61,150,0.702,151,0.969,152,0.837,153,0.933,156,2.294,172,0.677,191,0.034,192,0.034,193,1.002,195,1.334,199,1.511,224,1.423,380,0.726,381,2.045,537,1.922,538,1.942,539,3.229,540,2.001,541,1.952,542,1.922,543,2.563,544,2.37,545,2.908,546,2.52,547,2.908,548,2.908,549,2.436,550,2.436,551,2.961,552,3.144,553,2.758,554,2.597,555,3.245,556,2.581,557,2.846,558,2.961,559,2.597,560,2.241,561,1.942,562,1.052,563,2.241,564,2.241,565,3.28,566,2.241,567,1.504,568,1.942,569,1.942,570,1.952,571,1.703,572,1.942,573,2.241,574,1.942,575,1.942,576,1.703,577,1.703,578,1.731,579,2.798,580,2.21,581,1.334,582,2.241]],["title/injectables/HbsRenderService.html",[236,1.022,583,0.908]],["body/injectables/HbsRenderService.html",[0,0.988,2,2.027,3,0.71,4,0.732,5,1.406,8,0.571,10,1.678,33,1.597,34,1.166,35,0.721,45,0.048,53,1.583,54,1.166,59,1.411,70,0.469,83,1.797,85,1.797,92,1.785,95,1.406,104,1.249,108,2.308,111,1.797,112,2.021,113,2.027,115,3.387,119,1.166,137,1.207,148,0.71,150,0.571,151,0.929,152,0.48,153,1.108,154,1.847,160,0.634,161,0.554,172,0.411,173,0.634,175,1.583,180,1.286,188,0.92,191,0.031,192,0.031,196,1.678,199,0.816,224,0.816,236,1.406,255,1.488,256,1.488,264,1.785,270,1.535,273,1.697,276,2.304,283,1.697,284,3.194,286,2.304,293,2.304,294,2.304,298,1.315,316,3.027,323,2.617,324,2.304,327,2.574,341,1.697,345,2.654,380,0.634,383,1.315,389,1.566,392,2.027,398,2.304,399,1.583,405,1.166,406,2.016,414,1.535,423,0.92,425,2.304,451,1.406,453,1.349,468,1.315,483,2.304,493,1.697,494,1.488,495,1.697,521,1.488,562,1.418,583,1.249,584,1.488,585,3.573,586,1.958,587,4.379,588,2.016,589,4.697,590,4.697,591,4.697,592,3.856,593,3.856,594,2.84,595,1.928,596,2.84,597,2.84,598,3.856,599,4.911,600,2.84,601,1.315,602,2.84,603,1.958,604,1.697,605,2.84,606,2.84,607,2.84,608,2.84,609,4.285,610,2.84,611,2.84,612,2.84,613,2.84,614,2.84,615,5.181,616,2.84,617,3.856,618,5.181,619,1.958,620,3.239,621,3.818,622,5.065,623,5.065,624,2.84,625,2.84,626,4.379,627,2.84,628,2.84,629,3.135,630,2.84,631,2.84,632,2.84,633,3.856,634,2.308,635,2.84,636,2.84,637,2.84,638,3.856,639,2.308,640,4.911,641,2.304,642,2.304,643,3.135,644,2.659,645,2.84,646,2.84,647,2.84,648,2.84,649,2.84,650,2.84,651,3.856,652,2.84,653,2.84,654,4.911,655,4.697,656,2.84,657,2.308,658,2.84,659,2.84,660,3.856,661,2.84,662,2.84,663,2.84,664,2.84,665,2.84,666,3.856,667,2.308,668,2.84,669,2.308,670,3.856,671,2.84,672,2.84,673,2.84,674,2.308,675,2.84,676,3.856,677,2.84,678,2.84,679,2.308,680,2.308,681,2.84,682,4.379,683,2.84,684,2.84,685,2.84,686,2.84,687,2.84,688,2.308,689,2.84,690,3.856,691,2.84,692,2.84,693,2.84,694,2.308,695,2.84,696,2.84,697,4.379]],["title/interfaces/Session.html",[193,0.547,241,1.469]],["body/interfaces/Session.html",[0,0.575,3,0.426,4,0.426,5,0.712,6,0.802,7,0.802,8,0.623,22,0.633,33,0.712,35,0.496,37,1.02,44,0.904,45,0.048,47,1.861,48,1.167,49,2.397,50,2.506,51,1.643,52,1.643,53,2.182,54,2.197,56,1.545,59,1.471,66,1.167,68,0.904,70,0.238,72,1.742,73,1.643,74,1.861,75,1.861,76,2.144,77,2.066,78,2.144,79,1.643,81,1.364,83,1.902,84,1.861,85,2.102,89,1.83,90,1.023,91,0.904,92,2.493,93,2.607,94,1.167,97,2.224,98,1.023,99,1.167,100,1.167,101,1.167,102,0.904,104,1.281,105,2.363,107,2.121,111,2.197,112,2.428,113,2.144,116,2.224,119,0.802,122,2.667,125,1.023,126,1.457,137,1.262,140,1.167,148,0.513,149,0.712,150,0.543,151,0.905,152,0.668,160,0.948,161,0.381,172,0.282,173,0.436,180,0.496,187,0.561,188,1.658,191,0.024,192,0.024,193,0.693,194,1.545,195,0.802,196,0.633,197,0.802,198,1.167,200,1.347,201,1.347,202,1.347,203,1.347,204,1.347,205,1.347,206,1.347,207,1.347,208,1.347,209,1.347,210,1.347,211,1.347,212,1.347,213,1.347,214,1.347,215,1.347,216,1.347,217,1.347,218,1.347,219,1.347,220,1.347,221,1.347,222,1.347,223,2.033,224,1.598,225,2.033,226,1.167,227,2.448,228,2.033,229,2.033,230,1.167,231,1.075,232,1.167,233,1.075,234,1.861,235,1.167,236,1.075,237,0.904,238,1.167,239,1.545,240,1.167,241,2.339,242,2.927,243,2.927,244,2.727,245,1.347,246,1.347,247,2.927,248,2.033,249,2.033,250,2.033,251,1.347,252,2.558,253,1.643,254,2.121,255,2.648,256,1.545,257,1.347,258,2.033,259,1.347,260,1.167,261,2.033,262,1.167,263,3.714,264,0.904,265,2.448,266,0.802,267,1.023,268,1.347,269,0.802,270,1.471,271,1.347,272,1.347,273,1.167,274,1.347,275,1.347,276,1.761,277,2.448,278,1.347,279,2.033,280,2.121,281,1.347,282,1.347,283,1.167,284,2.536,285,2.033,286,1.761,287,1.347,288,1.167,289,1.347,290,1.347,291,1.347,292,1.347,293,1.167,294,1.167,295,2.224,296,2.727,297,2.727,298,1.83,299,3.077,300,1.347,301,3.195,302,2.927,303,1.347,304,2.033,305,1.347,306,1.347,307,2.448,308,3.366,309,1.347,310,2.033,311,2.121,312,1.167,313,2.121,314,1.347,315,1.347,316,1.761,317,2.033,318,1.347,319,1.347,320,1.347,321,1.347,322,1.347,323,1.167,324,1.167,325,1.347,326,1.347,327,1.861,328,2.768,329,1.347,330,2.448,331,1.347,332,2.121,333,2.448,334,1.347,335,2.033,336,1.761,337,2.448,338,2.033,339,1.347,340,1.347,341,2.121,342,2.339,343,1.761,344,2.033,345,1.023,346,3.077,347,1.347,348,2.363,349,2.033,350,2.033,351,1.347,352,1.347,353,1.347,354,1.347,355,2.85,356,1.347,357,1.167,358,2.033,359,1.347,360,1.347,361,1.347,362,1.347,363,1.347,364,1.347,365,1.347,366,1.347,367,1.347,368,1.347,369,1.347,370,1.347,371,1.347,372,1.347,373,2.033,374,1.347,375,1.347,376,1.347,377,1.347,378,1.83,379,1.347,380,0.883,381,1.075,382,1.347,383,1.364,384,1.347,385,1.347,386,1.347,387,1.347,388,1.347,389,1.402,390,3.43,391,1.347,392,0.904,393,1.347,394,1.347,395,1.347,396,1.347,397,1.957,398,1.167,399,1.832,400,2.339,401,1.347,402,1.347,403,1.347,404,1.347,405,1.742,406,2.042,407,1.965,408,1.347,409,1.347,410,2.448,411,2.033,412,1.347,413,1.832,414,1.471,415,3.666,416,1.347,417,2.727,418,3.077,419,1.347,420,1.347,421,1.347,422,2.448,423,1.375,424,2.448,425,2.121,426,1.347,427,1.347,428,1.347,429,1.347,430,1.347,431,1.347,432,1.347,433,2.727,434,1.347,435,1.347,436,1.347,437,2.033,438,1.347,439,1.167,440,1.347,441,1.761,442,1.167,443,1.347,444,2.121,445,1.023,446,1.347,447,1.347,448,1.347,449,1.347,450,1.347,451,1.075,452,1.347,453,1.136,454,1.167,455,1.347,456,1.347,457,2.448,458,1.023,459,1.347,460,1.347,461,1.347,462,1.347,463,1.347,464,1.347,465,1.347,466,1.347,467,1.347,468,0.904,469,1.347,470,1.347,471,1.347,472,1.347,473,2.033,474,1.347,475,1.347,476,2.033,477,1.347,478,1.347,479,1.347,480,1.347,481,1.167,482,1.167,483,1.167,484,1.167,485,1.347,486,1.167,487,1.347,488,1.167,489,1.347,490,1.347,491,1.347,492,1.347,493,1.167,494,1.023,495,1.167,496,1.347,497,2.072,498,1.347,499,1.023,500,1.347,501,1.347,502,1.347,503,1.347,504,1.347,505,1.761,506,1.347,507,2.033,508,1.347,509,2.363,510,1.347,511,1.347,512,2.033,513,1.347,514,1.347,515,1.347,516,2.033,517,1.347,518,1.347,519,1.347,520,1.347,521,1.545,522,1.347,523,1.167,524,1.167,525,1.167,526,1.167,527,1.167,528,1.167,529,1.347,530,1.347,531,1.347,532,1.347,533,1.347,534,1.347,535,1.167,536,1.347]],["title/interfaces/Task.html",[17,0.805,193,0.547]],["body/interfaces/Task.html",[3,0.447,4,0.447,8,0.376,10,1.715,13,1.884,14,2.11,15,3.319,17,1.313,18,2.514,45,0.048,70,0.376,95,1.893,148,0.59,150,0.704,151,0.969,152,0.854,153,1.173,156,2.25,172,0.661,191,0.033,192,0.033,193,0.986,195,1.269,199,1.396,224,1.491,380,0.912,381,2.068,537,1.676,538,1.848,539,3.352,540,1.893,541,1.432,542,1.876,543,2.339,544,2.382,545,2.133,546,1.848,547,2.133,548,2.133,549,2.403,550,2.403,551,2.905,552,3.102,553,2.816,554,2.548,555,3.211,556,2.561,557,2.816,558,2.905,559,2.548,560,2.816,561,2.44,562,1.574,563,2.816,564,2.816,565,3.249,566,2.816,567,1.89,568,2.44,569,2.44,570,2.339,571,2.14,572,2.905,573,2.816,574,2.44,575,2.905,576,1.621,577,1.621,578,1.676,579,2.731,580,2.14,581,1.269,582,2.133,698,1.621,699,3.093,700,3.093,701,3.093,702,2.44,703,2.514,704,3.093,705,3.093,706,2.133,707,3.093,708,3.093,709,3.093]],["title/components/TaskFormComponent.html",[0,0.547,182,1.298]],["body/components/TaskFormComponent.html",[0,0.722,1,0.795,2,1.237,3,0.248,4,0.248,5,0.626,6,0.705,7,0.705,8,0.209,10,1.585,11,2.535,13,1.862,14,1.894,17,1.556,19,1.842,20,2.872,22,1.61,25,2.606,26,1.596,28,2.223,32,1.026,33,1.614,34,1.741,35,0.436,36,2.394,37,1.218,38,1.4,40,1.959,41,1.959,43,0.795,45,0.048,46,1.842,49,1.517,50,1.963,51,1.237,52,1.237,53,0.705,54,1.644,57,1.185,58,1.185,59,1.151,61,2.261,65,1.396,68,0.795,70,0.209,72,0.705,73,0.795,76,0.795,77,0.795,78,0.795,79,2.049,80,1.4,81,1.517,83,1.644,84,0.9,85,0.705,86,2.55,89,1.517,91,0.795,95,1.714,102,1.237,111,0.705,115,1.842,119,0.705,121,1.842,126,0.705,130,2.261,131,1.185,137,0.826,148,0.386,149,1.714,150,0.626,151,0.827,152,0.677,153,1.151,154,1.923,156,2.119,160,1.125,161,0.335,163,1.026,164,1.026,172,0.248,173,0.384,174,0.795,175,1.097,176,1.596,177,1.026,178,2.21,179,1.026,180,1.017,181,1.026,182,1.854,183,1.026,184,0.795,185,1.026,186,1.026,187,0.493,188,0.556,189,1.026,190,1.026,191,0.022,192,0.022,199,0.942,224,1.151,253,0.795,270,1.492,295,0.9,298,0.795,327,0.9,355,1.596,378,2.301,380,0.947,389,0.942,392,1.517,397,1.346,399,0.705,400,1.237,405,0.705,406,1.346,407,0.795,413,1.644,414,1.272,444,1.596,453,1.447,454,1.596,537,1.097,540,1.967,541,2.176,542,1.879,543,1.854,544,2.249,546,2.21,549,1.854,550,2.176,551,2.21,552,1.596,553,1.938,554,1.4,556,1.237,559,2.519,562,0.865,565,2.21,567,1.963,571,2.099,576,0.9,577,2.099,578,1.097,581,1.879,588,1.097,595,2.133,601,1.517,644,1.842,674,1.396,698,2.89,702,1.596,706,2.925,710,3.172,711,3.661,712,1.396,713,3.899,714,2.925,715,2.172,716,2.172,717,4.578,718,4.806,719,2.172,720,4.427,721,3.278,722,2.261,723,3.278,724,3.278,725,3.278,726,3.278,727,3.278,728,2.261,729,2.172,730,3.278,731,1.842,732,2.671,733,3.278,734,3.698,735,5.038,736,2.763,737,2.665,738,1.712,739,3.698,740,2.671,741,2.671,742,3.698,743,2.671,744,3.698,745,3.698,746,3.698,747,3.698,748,3.698,749,3.698,750,2.671,751,1.718,752,4.241,753,3.448,754,3.448,755,2.735,756,2.872,757,2.671,758,3.475,759,1.718,760,3.698,761,3.006,762,1.718,763,3.006,764,1.718,765,2.671,766,4.578,767,3.698,768,2.671,769,1.718,770,2.172,771,4.427,772,2.671,773,2.671,774,2.671,775,2.55,776,2.55,777,2.671,778,1.718,779,3.006,780,2.55,781,2.55,782,1.718,783,2.671,784,4.427,785,3.698,786,2.671,787,2.671,788,1.718,789,3.006,790,4.241,791,4.241,792,3.698,793,3.698,794,3.006,795,3.698,796,2.671,797,1.718,798,2.172,799,3.698,800,2.671,801,2.671,802,2.671,803,2.172,804,1.718,805,2.671,806,2.671,807,2.172,808,2.172,809,2.55,810,1.596,811,1.596,812,2.172,813,2.671,814,1.718,815,2.671,816,2.671,817,2.172,818,2.671,819,1.718,820,2.671,821,2.671,822,1.718,823,1.718,824,3.698,825,1.718,826,2.671,827,1.842,828,1.718,829,1.596,830,1.185,831,3.006,832,1.718,833,1.185,834,0.9,835,1.718,836,3.278,837,1.718,838,1.718,839,1.718,840,1.718,841,1.185,842,1.026,843,1.185,844,3.256,845,3.278,846,1.718,847,1.718,848,2.261,849,3.278,850,3.278,851,1.396,852,1.718,853,1.396,854,1.718,855,1.718,856,1.718,857,2.671,858,1.718,859,1.718,860,2.671,861,1.718,862,1.718,863,1.718,864,1.718,865,1.718,866,1.718,867,1.718,868,1.718,869,2.261,870,1.718,871,1.718,872,2.172,873,2.671,874,2.671,875,2.671,876,2.671,877,1.842,878,1.718,879,1.718,880,1.718,881,1.396,882,1.396,883,1.718,884,1.718,885,1.718,886,1.185,887,1.718,888,1.718,889,1.718,890,1.718,891,1.718,892,1.718,893,1.718,894,1.718,895,1.718,896,2.172,897,2.671,898,2.671,899,2.671,900,2.671,901,2.172,902,2.671,903,1.842,904,2.671,905,2.671,906,2.671,907,2.671,908,2.671,909,2.671,910,2.172,911,2.671,912,2.172,913,2.671,914,2.671,915,2.671,916,2.671,917,1.842,918,2.671,919,2.671,920,1.185,921,1.396,922,3.698,923,1.718,924,1.396,925,1.396,926,1.396,927,1.396,928,1.396,929,1.718,930,1.396,931,1.718,932,1.718,933,1.718,934,2.172,935,1.396,936,1.718,937,1.396,938,1.718,939,1.396,940,1.718]],["title/components/TaskItemComponent.html",[0,0.547,184,1.298]],["body/components/TaskItemComponent.html",[0,0.744,1,0.842,2,1.293,3,0.404,4,0.263,5,0.663,6,0.747,7,0.747,8,0.221,10,1.101,11,2.278,13,1.842,14,2.051,17,1.639,20,2.823,22,1.581,25,1.998,26,1.669,28,2.559,32,2.594,33,1.648,34,1.855,35,0.462,36,2.458,37,1.298,38,1.463,40,2.031,41,2.031,42,2.763,43,0.842,45,0.048,46,1.255,47,1.998,49,1.904,50,2.465,51,1.904,52,1.765,53,1.688,54,2.222,57,1.255,58,1.255,59,1.427,60,1.479,61,2.629,68,0.842,70,0.221,72,1.565,73,1.293,74,1.463,75,0.953,76,1.904,77,1.904,78,0.842,79,1.765,80,0.953,81,0.842,83,1.688,85,0.747,86,3.425,89,2.092,90,1.463,91,1.765,92,2.009,93,1.998,95,1.018,97,1.463,98,1.463,102,1.765,104,0.589,110,1.479,111,1.565,113,0.842,114,1.479,116,1.781,119,1.565,121,1.926,125,0.953,126,0.747,129,1.479,130,1.255,131,1.255,137,0.624,144,2.031,145,2.344,148,0.404,149,1.648,150,0.582,151,0.644,152,0.472,153,0.802,154,1.861,160,1.126,161,0.355,163,1.087,164,1.087,165,1.479,172,0.263,173,0.406,174,0.842,175,1.146,176,1.669,177,1.087,178,2.278,179,1.087,180,0.709,181,1.087,182,0.842,183,1.087,184,1.904,185,1.087,186,1.087,187,0.522,188,0.589,189,1.087,190,1.087,191,0.022,192,0.022,224,1.095,270,1.095,280,1.087,295,1.463,298,1.293,311,1.669,312,1.669,313,1.669,332,1.087,336,1.087,342,0.953,343,1.669,345,1.998,357,1.087,380,0.919,381,1.648,389,1.181,397,1.782,399,1.146,400,1.293,405,1.146,406,1.782,407,1.293,413,1.855,414,1.095,423,0.904,453,0.976,458,1.463,481,1.087,482,1.087,484,1.669,535,2.594,540,1.701,542,1.146,544,2.328,549,1.293,550,2.009,553,2.275,554,1.463,555,1.087,556,0.842,557,0.953,558,1.669,559,2.369,562,0.904,567,2.009,568,2.594,570,0.842,579,1.669,581,1.915,588,1.146,595,2.004,621,3.099,634,1.479,643,2.27,644,1.926,667,2.27,679,3.099,694,1.479,698,1.463,702,2.031,710,3.082,714,1.926,722,2.344,728,2.344,729,2.27,731,1.926,736,2.344,738,1.765,753,3.529,754,3.529,755,2.787,756,3.138,758,2.629,763,2.27,770,2.763,775,1.255,780,1.926,781,2.994,789,2.27,798,3.099,808,2.27,809,2.629,810,2.278,811,1.669,812,3.099,827,1.926,829,1.669,830,1.255,831,3.099,834,0.953,841,1.255,842,1.087,843,1.255,844,3.343,869,2.994,877,1.926,886,1.926,896,3.099,921,3.099,924,1.479,925,1.479,926,1.479,927,1.479,928,1.479,930,1.479,934,3.343,935,3.791,937,1.479,939,1.479,941,3.557,942,1.479,943,2.27,944,2.792,945,2.792,946,2.792,947,2.792,948,3.099,949,3.217,950,2.27,951,2.792,952,3.399,953,3.399,954,3.399,955,2.763,956,3.399,957,3.399,958,3.399,959,2.792,960,4.113,961,4.113,962,3.399,963,3.812,964,3.812,965,3.812,966,3.812,967,4.341,968,4.341,969,4.341,970,1.819,971,1.819,972,2.792,973,2.27,974,1.819,975,5.039,976,3.812,977,1.819,978,2.792,979,1.819,980,2.792,981,1.819,982,2.27,983,1.819,984,1.819,985,3.399,986,2.792,987,1.819,988,2.792,989,1.479,990,1.819,991,4.341,992,2.792,993,3.529,994,2.792,995,1.819,996,2.629,997,2.27,998,2.792,999,1.819,1000,2.792,1001,1.819,1002,1.926,1003,2.792,1004,2.792,1005,1.819,1006,2.629,1007,2.792,1008,1.819,1009,1.819,1010,1.819,1011,1.479,1012,1.819,1013,1.819,1014,1.819,1015,1.819,1016,3.399,1017,1.819,1018,1.819,1019,1.819,1020,1.819,1021,2.792,1022,1.819,1023,1.819,1024,1.819,1025,1.479,1026,1.819,1027,1.819,1028,1.819,1029,4.52,1030,1.819,1031,2.792,1032,1.819,1033,1.819,1034,1.819,1035,1.819,1036,1.819,1037,1.479,1038,1.819,1039,2.792,1040,2.792,1041,1.926,1042,2.792,1043,4.341,1044,4.341,1045,4.341,1046,2.792,1047,3.399,1048,2.792,1049,2.792,1050,2.792,1051,2.792,1052,4.341,1053,3.812,1054,2.792,1055,1.819,1056,1.819,1057,1.819,1058,3.399,1059,1.819,1060,1.819,1061,1.819,1062,1.819,1063,2.763,1064,1.819,1065,2.792,1066,1.819,1067,3.399,1068,1.819,1069,3.812,1070,1.819,1071,1.819,1072,1.819,1073,1.819,1074,1.819,1075,1.819,1076,1.819,1077,1.819,1078,2.792,1079,1.819,1080,1.819,1081,3.399,1082,1.819,1083,1.819,1084,1.819,1085,1.819,1086,1.819,1087,2.792,1088,1.819,1089,1.819]],["title/components/TaskListComponent.html",[0,0.547,43,1.298]],["body/components/TaskListComponent.html",[0,0.699,1,0.75,2,1.182,3,0.234,4,0.234,6,0.665,7,0.665,8,0.197,10,1.454,11,2.474,13,1.856,14,2.003,17,1.631,20,2.916,22,1.341,24,2.471,25,2.995,26,1.526,28,1.655,32,0.969,33,1.58,34,1.699,35,0.412,36,2.329,37,0.907,38,1.338,40,1.888,41,1.888,43,1.804,44,1.182,45,0.048,59,1.189,70,0.384,80,1.878,88,1.318,137,0.57,138,2.568,144,1.526,145,1.761,148,0.369,149,1.835,150,0.562,151,0.908,152,0.828,153,1.12,154,1.96,156,2.078,160,1.11,161,0.316,163,0.969,164,1.526,167,3.723,172,0.234,173,0.362,174,0.75,175,1.048,176,1.526,177,0.969,178,2.141,179,0.969,180,1.173,181,0.969,182,1.659,183,0.969,184,1.659,185,0.969,186,0.969,187,0.466,188,0.525,189,0.969,190,0.969,191,0.021,192,0.021,199,1.244,224,0.466,226,0.969,262,0.969,270,1.289,328,2.589,380,0.705,383,2.005,389,1.563,397,1.297,399,0.665,400,0.75,405,0.665,406,1.048,407,0.75,413,1.6,414,1.326,453,1.55,458,2.17,486,1.526,540,1.835,541,1.182,542,2.012,543,1.182,544,2.255,561,1.526,562,1.262,569,0.969,570,2.378,571,1.338,574,1.526,580,2.043,581,2.012,588,1.048,595,2.297,601,2.005,619,2.988,620,3.471,698,2.478,703,1.318,710,3.226,711,1.118,713,3.096,714,1.761,715,2.076,722,2.178,728,2.178,731,1.761,736,2.178,737,2.076,738,1.659,755,2.682,756,2.474,758,2.471,761,2.076,775,2.471,781,2.178,794,1.318,803,2.076,807,1.318,809,1.761,810,2.589,811,1.526,817,2.076,827,1.761,829,1.888,830,1.118,834,0.85,841,1.118,842,0.969,843,1.118,848,3.096,851,1.318,853,3.365,869,1.761,886,1.118,901,3.649,917,2.178,941,1.118,943,2.076,949,1.761,950,2.076,955,2.568,973,2.076,982,3.649,989,3.365,993,3.984,996,1.118,997,2.076,1002,3.471,1006,1.761,1011,1.318,1041,2.471,1063,1.318,1090,1.318,1091,2.553,1092,2.553,1093,2.553,1094,2.553,1095,2.076,1096,4.14,1097,2.553,1098,2.553,1099,3.919,1100,3.843,1101,3.649,1102,3.898,1103,3.159,1104,3.159,1105,3.159,1106,2.553,1107,2.553,1108,2.553,1109,3.159,1110,2.568,1111,3.159,1112,2.913,1113,4.14,1114,3.583,1115,4.14,1116,4.14,1117,4.14,1118,3.583,1119,4.14,1120,4.14,1121,3.583,1122,2.553,1123,2.553,1124,2.553,1125,2.553,1126,2.553,1127,3.583,1128,2.553,1129,2.553,1130,1.621,1131,4.212,1132,2.553,1133,2.076,1134,1.621,1135,2.553,1136,3.583,1137,2.553,1138,1.621,1139,5.034,1140,5.291,1141,5.089,1142,2.553,1143,3.583,1144,1.621,1145,4.14,1146,4.618,1147,1.621,1148,3.583,1149,1.621,1150,1.621,1151,4.332,1152,3.159,1153,1.621,1154,3.583,1155,1.621,1156,1.621,1157,2.553,1158,2.553,1159,1.621,1160,2.553,1161,2.553,1162,1.621,1163,3.159,1164,3.159,1165,2.553,1166,1.621,1167,2.553,1168,2.553,1169,1.621,1170,2.553,1171,2.553,1172,2.553,1173,1.621,1174,2.553,1175,1.621,1176,2.553,1177,2.553,1178,2.553,1179,2.553,1180,1.621,1181,2.553,1182,2.553,1183,4.14,1184,2.553,1185,2.553,1186,1.621,1187,2.553,1188,2.553,1189,2.553,1190,2.553,1191,2.076,1192,2.553,1193,2.553,1194,1.621,1195,2.568,1196,4.489,1197,2.913,1198,2.553,1199,3.583,1200,3.168,1201,1.621,1202,2.553,1203,2.076,1204,1.621,1205,2.553,1206,1.621,1207,2.553,1208,1.621,1209,2.553,1210,2.076,1211,1.621,1212,1.621,1213,1.621,1214,1.621,1215,1.621,1216,1.621,1217,1.621,1218,1.621,1219,3.168,1220,1.621,1221,1.621,1222,1.621,1223,3.898,1224,1.621,1225,1.621,1226,1.621,1227,1.621,1228,1.621,1229,1.621,1230,1.621,1231,1.621,1232,1.621,1233,1.621,1234,1.621,1235,1.621,1236,1.621,1237,1.621,1238,1.621,1239,1.621,1240,2.553,1241,1.621,1242,3.159,1243,1.621,1244,1.621,1245,1.621,1246,1.621,1247,1.621,1248,1.621,1249,2.553,1250,1.621,1251,1.621,1252,1.621,1253,1.621,1254,1.621,1255,2.553,1256,1.621,1257,1.621,1258,1.621,1259,1.621,1260,1.621,1261,1.621,1262,1.621,1263,1.621,1264,1.621,1265,1.621,1266,1.621,1267,3.583,1268,3.583,1269,3.583,1270,2.553,1271,2.553,1272,2.553,1273,2.553,1274,2.553,1275,2.553,1276,2.553,1277,2.553,1278,2.553]],["title/injectables/TaskService.html",[583,0.908,738,1.298]],["body/injectables/TaskService.html",[3,0.31,4,0.31,8,0.261,10,1.587,13,1.855,14,1.94,17,1.326,19,2.178,20,2.846,22,1.587,23,2.567,24,1.477,25,2.963,28,2.736,35,0.544,37,1.077,45,0.048,70,0.261,95,1.368,104,1.43,142,2.855,144,1.887,148,0.457,149,2.048,150,0.562,151,0.882,152,0.828,153,1.408,154,1.955,160,0.838,161,0.418,172,0.31,173,0.705,180,1.051,191,0.025,192,0.025,199,1.189,270,1.55,378,1.916,380,0.925,381,1.151,383,0.992,389,1.408,392,1.736,397,2.201,413,2.299,414,1.5,423,1.62,453,1.077,537,1.812,540,1.968,541,2.211,542,2.012,543,1.462,544,2.293,549,1.462,550,1.736,556,0.992,557,1.655,562,1.791,567,2.269,570,1.916,572,2.241,575,2.474,576,2.569,577,1.655,578,1.812,580,2.169,581,1.699,583,1.023,584,1.123,588,1.296,595,2.229,601,1.916,604,1.28,657,3.049,698,1.655,702,2.638,706,3.044,713,1.477,716,2.567,719,2.567,738,1.736,755,1.887,756,3.292,776,2.855,779,2.567,780,3.185,810,3.12,811,3.041,829,2.76,842,1.28,848,3.044,872,3.588,877,2.178,881,2.567,882,2.567,903,1.477,917,2.178,948,3.365,949,2.178,996,3.185,1002,2.178,1006,2.855,1037,3.049,1041,2.178,1095,2.567,1099,4.244,1100,3.049,1101,3.049,1110,1.741,1112,3.365,1131,4.325,1133,2.567,1191,1.741,1195,3.882,1197,4.067,1200,1.741,1203,3.754,1210,4.459,1219,3.049,1279,1.741,1280,3.158,1281,3.158,1282,3.158,1283,3.158,1284,3.158,1285,3.158,1286,3.158,1287,4.139,1288,5.16,1289,3.751,1290,4.618,1291,5.361,1292,3.751,1293,3.751,1294,3.751,1295,3.158,1296,3.158,1297,4.139,1298,3.158,1299,3.751,1300,3.158,1301,2.142,1302,3.158,1303,2.142,1304,3.158,1305,2.142,1306,2.567,1307,3.158,1308,3.158,1309,2.142,1310,3.158,1311,3.158,1312,3.158,1313,2.142,1314,4.139,1315,2.142,1316,2.142,1317,2.142,1318,3.158,1319,4.139,1320,3.158,1321,3.158,1322,3.158,1323,2.142,1324,3.158,1325,4.414,1326,2.142,1327,3.158,1328,4.139,1329,4.139,1330,2.142,1331,4.618,1332,2.142,1333,3.158,1334,2.142,1335,3.158,1336,3.158,1337,3.158,1338,3.158,1339,3.158,1340,2.142,1341,3.158,1342,3.158,1343,1.741,1344,3.751,1345,2.142,1346,2.142,1347,3.158,1348,2.142,1349,2.142,1350,4.414,1351,3.158,1352,1.477,1353,3.158,1354,2.142,1355,3.158,1356,2.142,1357,2.142,1358,2.142,1359,3.751,1360,2.142,1361,2.142,1362,2.142,1363,2.142,1364,2.142,1365,3.158,1366,3.751,1367,3.158,1368,3.158,1369,2.142,1370,3.158,1371,2.142,1372,3.158,1373,3.158,1374,2.142,1375,2.142,1376,2.142,1377,2.142,1378,2.142,1379,2.142,1380,2.142,1381,2.142,1382,2.142,1383,2.142,1384,2.142,1385,2.142,1386,2.142,1387,2.142,1388,2.142]],["title/interfaces/Template.html",[137,0.626,193,0.547]],["body/interfaces/Template.html",[0,0.575,3,0.426,4,0.426,5,0.711,6,0.8,7,0.8,8,0.623,22,0.631,33,0.711,35,0.495,37,1.019,44,0.902,45,0.048,47,1.859,48,1.165,49,2.397,50,2.506,51,1.642,52,1.642,53,2.182,54,2.196,56,1.543,59,1.47,66,1.165,68,0.902,70,0.237,72,1.741,73,1.642,74,1.859,75,1.859,76,2.143,77,2.064,78,2.143,79,1.642,81,1.363,83,1.9,84,1.859,85,2.101,89,1.829,90,1.022,91,0.902,92,2.492,93,2.606,94,1.165,97,2.223,98,1.022,99,1.165,100,1.165,101,1.165,102,0.902,104,1.28,105,2.361,107,2.119,111,2.196,112,2.426,113,2.143,116,2.223,119,0.8,122,2.665,125,1.022,126,1.456,137,1.268,140,1.165,148,0.513,149,0.711,150,0.593,151,0.904,152,0.668,160,0.947,161,0.38,172,0.282,173,0.435,180,1.003,187,0.56,188,1.658,191,0.024,192,0.024,193,0.692,194,1.543,195,0.8,196,0.631,197,0.8,198,1.165,200,1.345,201,1.345,202,1.345,203,1.345,204,1.345,205,1.345,206,1.345,207,1.345,208,1.345,209,1.345,210,1.345,211,1.345,212,1.345,213,1.345,214,1.345,215,1.345,216,1.345,217,1.345,218,1.345,219,1.345,220,1.345,221,1.345,222,1.345,223,2.03,224,1.587,225,2.03,226,1.165,227,2.446,228,2.03,229,2.03,230,1.165,231,1.073,232,1.165,233,1.073,234,1.859,235,1.165,236,1.073,237,0.902,238,1.165,239,2.223,240,2.119,241,2.223,242,2.03,243,2.03,244,1.345,245,1.345,246,1.345,247,2.925,248,2.03,249,2.03,250,2.03,251,1.345,252,2.557,253,1.642,254,2.119,255,2.647,256,1.543,257,1.345,258,2.03,259,1.345,260,1.165,261,2.03,262,1.165,263,3.713,264,0.902,265,2.446,266,0.8,267,1.022,268,1.345,269,0.8,270,1.47,271,1.345,272,1.345,273,1.165,274,1.345,275,1.345,276,1.759,277,2.446,278,1.345,279,2.03,280,2.119,281,1.345,282,1.345,283,1.165,284,2.534,285,2.03,286,1.759,287,1.345,288,1.165,289,1.345,290,1.345,291,1.345,292,1.345,293,1.165,294,1.165,295,2.223,296,2.725,297,2.725,298,1.829,299,3.076,300,1.345,301,3.193,302,2.925,303,1.345,304,2.03,305,1.345,306,1.345,307,2.446,308,3.364,309,1.345,310,2.03,311,2.119,312,1.165,313,2.119,314,1.345,315,1.345,316,1.759,317,2.03,318,1.345,319,1.345,320,1.345,321,1.345,322,1.345,323,1.165,324,1.165,325,1.345,326,1.345,327,1.859,328,2.767,329,1.345,330,2.446,331,1.345,332,2.119,333,2.446,334,1.345,335,2.03,336,1.759,337,2.446,338,2.03,339,1.345,340,1.345,341,2.119,342,2.337,343,1.759,344,2.03,345,1.022,346,3.076,347,1.345,348,2.361,349,2.03,350,2.03,351,1.345,352,1.345,353,1.345,354,1.345,355,2.848,356,1.345,357,1.165,358,2.03,359,1.345,360,1.345,361,1.345,362,1.345,363,1.345,364,1.345,365,1.345,366,1.345,367,1.345,368,1.345,369,1.345,370,1.345,371,1.345,372,1.345,373,2.03,374,1.345,375,1.345,376,1.345,377,1.345,378,1.829,379,1.345,380,0.882,381,1.073,382,1.345,383,1.363,384,1.345,385,1.345,386,1.345,387,1.345,388,1.345,389,1.401,390,3.429,391,1.345,392,0.902,393,1.345,394,1.345,395,1.345,396,1.345,397,1.956,398,1.165,399,1.831,400,2.338,401,1.345,402,1.345,403,1.345,404,1.345,405,1.741,406,2.041,407,1.963,408,1.345,409,1.345,410,2.446,411,2.03,412,1.345,413,1.831,414,1.47,415,3.665,416,1.345,417,2.725,418,3.076,419,1.345,420,1.345,421,1.345,422,2.446,423,1.374,424,2.446,425,2.119,426,1.345,427,1.345,428,1.345,429,1.345,430,1.345,431,1.345,432,1.345,433,2.725,434,1.345,435,1.345,436,1.345,437,2.03,438,1.345,439,1.165,440,1.345,441,1.759,442,1.165,443,1.345,444,2.119,445,1.022,446,1.345,447,1.345,448,1.345,449,1.345,450,1.345,451,1.073,452,1.345,453,1.135,454,1.165,455,1.345,456,1.345,457,2.446,458,1.022,459,1.345,460,1.345,461,1.345,462,1.345,463,1.345,464,1.345,465,1.345,466,1.345,467,1.345,468,0.902,469,1.345,470,1.345,471,1.345,472,1.345,473,2.03,474,1.345,475,1.345,476,2.03,477,1.345,478,1.345,479,1.345,480,1.345,481,1.165,482,1.165,483,1.165,484,1.165,485,1.345,486,1.165,487,1.345,488,1.165,489,1.345,490,1.345,491,1.345,492,1.345,493,1.165,494,1.022,495,1.165,496,1.345,497,2.071,498,1.345,499,1.022,500,1.345,501,1.345,502,1.345,503,1.345,504,1.345,505,1.759,506,1.345,507,2.03,508,1.345,509,2.361,510,1.345,511,1.345,512,2.03,513,1.345,514,1.345,515,1.345,516,2.03,517,1.345,518,1.345,519,1.345,520,1.345,521,1.543,522,1.345,523,1.165,524,1.165,525,1.165,526,1.165,527,1.165,528,1.165,529,1.345,530,1.345,531,1.345,532,1.345,533,1.345,534,1.345,535,1.165,536,1.345]],["title/injectables/TemplateEditorService.html",[231,1.022,583,0.908]],["body/injectables/TemplateEditorService.html",[3,0.446,4,0.446,8,0.376,35,1.036,37,1.52,44,1.43,45,0.048,70,0.376,72,1.268,148,0.59,150,0.631,151,0.951,152,0.689,153,1.451,154,1.959,160,0.69,161,0.603,172,0.446,173,0.69,175,1.674,180,1.234,191,0.033,192,0.033,196,1.76,197,2.231,199,1.395,231,1.487,237,1.43,260,1.846,270,1.599,342,1.619,348,3.019,378,2.338,380,1.02,389,1.49,414,1.312,439,2.438,441,1.846,442,1.846,445,1.619,451,1.842,453,1.543,562,1,583,1.321,584,1.619,588,1.674,595,2.13,601,2.249,603,2.13,604,1.846,609,3.316,619,2.13,620,3.484,688,3.316,920,2.13,1352,2.13,1389,2.13,1390,4.568,1391,4.859,1392,4.079,1393,4.859,1394,4.079,1395,4.079,1396,3.088,1397,4.079,1398,3.088,1399,5.052,1400,4.079,1401,4.568,1402,3.088,1403,3.088,1404,4.079,1405,3.088,1406,4.079,1407,3.088,1408,4.079,1409,3.088,1410,3.088,1411,3.088,1412,3.15,1413,3.088,1414,4.859,1415,3.088,1416,5.052,1417,3.088,1418,3.088,1419,3.088,1420,3.088,1421,4.079,1422,3.088,1423,3.088,1424,3.088,1425,3.088,1426,3.088,1427,3.088,1428,3.088,1429,3.088,1430,3.088,1431,3.088,1432,3.088,1433,4.079,1434,3.088,1435,3.088,1436,3.088,1437,3.316,1438,3.088,1439,3.088,1440,3.088,1441,3.088,1442,3.088,1443,3.088,1444,3.088,1445,4.079,1446,3.088,1447,3.088,1448,3.088,1449,3.088,1450,3.088,1451,3.088,1452,3.088,1453,3.316,1454,3.088,1455,2.511,1456,2.511,1457,3.088,1458,3.088,1459,3.088,1460,3.088,1461,3.088,1462,3.088,1463,3.088,1464,3.088,1465,3.088,1466,4.079,1467,4.079,1468,4.079,1469,3.088,1470,4.568,1471,4.568,1472,3.088,1473,3.088,1474,3.088,1475,3.088,1476,3.088,1477,4.079,1478,4.568,1479,4.568,1480,4.859,1481,3.088,1482,3.088,1483,3.088,1484,3.088,1485,3.088,1486,5.488,1487,5.372,1488,3.088,1489,3.088]],["title/modules/TemplatePlaygroundModule.html",[641,1.675,1490,1.675]],["body/modules/TemplatePlaygroundModule.html",[3,0.583,4,0.583,8,0.491,38,2.115,45,0.048,137,1.078,160,1.272,161,0.788,172,0.583,173,0.901,174,1.868,187,1.658,191,0.039,192,0.039,196,1.307,197,1.656,230,2.411,231,2.025,232,2.411,233,2.025,234,2.115,235,2.411,236,2.025,237,1.868,238,2.411,253,1.868,269,1.656,641,2.411,642,2.411,833,2.783,834,2.115,1490,3.459,1491,4.199,1492,3.087,1493,3.562,1494,3.28,1495,3.28,1496,3.28,1497,3.28,1498,3.28,1499,3.924,1500,3.28,1501,4.035,1502,4.827,1503,4.827,1504,3.28,1505,2.411,1506,4.827,1507,4.827,1508,4.827,1509,4.035]],["title/interfaces/UpdateTaskRequest.html",[193,0.547,578,1.151]],["body/interfaces/UpdateTaskRequest.html",[3,0.47,4,0.47,8,0.396,10,1.735,13,1.866,14,2.08,17,0.934,45,0.048,70,0.396,95,1.919,148,0.61,150,0.704,151,0.969,152,0.791,156,2.294,172,0.677,191,0.034,192,0.034,193,1.002,195,1.335,199,1.59,224,1.512,380,0.726,381,2.046,537,1.732,538,1.943,539,3.23,540,1.919,541,1.505,542,1.922,543,2.377,544,2.36,545,2.242,546,1.943,547,2.242,548,2.242,549,2.436,550,2.436,551,2.962,552,2.962,553,2.758,554,2.598,555,3.245,556,2.563,557,2.846,558,2.962,559,2.598,560,2.242,561,1.943,562,1.053,563,2.242,564,2.242,565,3.28,566,2.242,567,1.505,568,1.943,569,1.943,570,2.377,571,1.704,572,1.943,573,2.242,574,1.943,575,1.943,576,2.211,577,2.211,578,1.922,579,3.145,580,2.598,581,1.732,582,2.91]],["title/injectables/ZipExportService.html",[233,1.022,583,0.908]],["body/injectables/ZipExportService.html",[3,0.514,4,0.514,5,1.781,8,0.623,21,2.891,35,0.903,45,0.048,56,1.864,70,0.433,104,1.447,118,2.891,126,1.46,137,1.144,150,0.594,151,0.892,154,1.781,160,0.794,161,0.694,172,0.514,173,0.794,175,1.46,180,1.134,188,1.152,191,0.036,192,0.036,196,1.66,199,1.283,233,1.629,234,2.767,237,1.646,239,1.864,240,2.125,254,2.125,255,2.962,256,2.866,270,1.547,288,2.125,389,1.022,414,1.516,423,1.152,445,1.864,451,1.629,453,1.283,468,2.261,488,2.67,494,1.864,505,3.22,509,3.062,521,2.341,523,2.125,524,2.125,525,2.125,526,2.125,527,2.125,528,2.125,583,1.447,584,1.864,588,1.834,595,2.005,601,2.068,603,2.453,604,2.125,639,2.891,669,3.632,680,2.891,903,2.453,910,2.891,912,3.971,920,3.369,1025,3.632,1352,3.081,1437,2.891,1453,3.971,1455,3.632,1456,3.971,1510,3.534,1511,2.453,1512,4.468,1513,4.468,1514,5.124,1515,4.468,1516,3.557,1517,4.468,1518,3.557,1519,5.53,1520,3.557,1521,3.081,1522,3.557,1523,3.557,1524,3.557,1525,4.885,1526,3.557,1527,3.557,1528,3.557,1529,3.557,1530,3.557,1531,3.557,1532,3.557,1533,3.557,1534,3.557,1535,3.557,1536,3.557,1537,3.557,1538,3.557,1539,3.557,1540,3.557,1541,4.468,1542,3.557,1543,4.468,1544,3.557,1545,3.557,1546,3.557,1547,5.124,1548,3.557,1549,3.557,1550,3.557,1551,3.557,1552,3.557,1553,3.557,1554,3.557,1555,4.885,1556,3.557,1557,3.557,1558,3.557,1559,3.557,1560,3.557,1561,3.557,1562,3.557,1563,4.468,1564,3.557,1565,3.557,1566,3.557,1567,3.557,1568,3.557,1569,3.557,1570,3.557,1571,3.557,1572,3.557,1573,3.557,1574,3.557,1575,3.557,1576,3.557]],["title/coverage.html",[267,2.003]],["body/coverage.html",[0,1.05,1,1.76,8,0.463,9,3.091,17,1.092,34,1.561,43,1.76,45,0.047,59,1.676,80,2.907,137,0.849,150,0.463,167,2.622,182,1.76,184,1.76,187,1.092,191,0.037,192,0.037,193,1.069,194,1.993,196,1.839,197,2.248,198,3.135,231,1.387,233,1.387,236,1.387,241,1.993,252,1.993,266,1.561,267,1.993,423,1.232,451,1.387,468,1.76,537,1.561,538,3.008,578,1.561,583,1.699,585,3.212,586,3.212,710,3.008,711,2.622,712,3.091,738,1.76,941,2.622,942,3.091,1090,3.091,1279,3.091,1389,3.212,1412,2.622,1492,2.272,1510,3.212,1511,3.212,1521,2.622,1577,3.803,1578,3.803,1579,3.803,1580,5.767,1581,5.75,1582,3.803,1583,3.803,1584,3.803,1585,5.034,1586,3.803,1587,3.786,1588,3.091,1589,3.091,1590,3.091,1591,3.091,1592,3.091,1593,3.091,1594,3.803,1595,3.803,1596,3.803,1597,3.803,1598,3.803,1599,3.803,1600,3.803,1601,3.803,1602,3.803,1603,3.091,1604,4.375,1605,3.091,1606,3.091,1607,3.091,1608,3.803,1609,3.091,1610,3.803,1611,3.803]],["title/dependencies.html",[269,1.384,497,1.228]],["body/dependencies.html",[45,0.047,161,0.854,191,0.041,192,0.041,269,1.796,499,2.293,833,3.017,834,2.293,1343,3.556,1504,4.343,1505,3.025,1612,4.375,1613,5.062,1614,5.739,1615,4.375,1616,4.375,1617,4.375,1618,4.375,1619,4.375,1620,4.375,1621,3.556,1622,4.375,1623,4.375,1624,4.375,1625,4.375,1626,4.375,1627,4.375]],["title/index.html",[70,0.341,264,1.298]],["body/index.html",[2,2.012,45,0.046,59,1.248,104,1.408,174,2.012,187,1.636,191,0.041,192,0.041,195,1.784,231,1.943,233,1.943,236,1.943,253,2.012,264,2.012,269,1.784,584,2.278,641,3.014,1490,3.469,1491,3.533,1492,2.597,1493,2.997,1494,3.533,1495,3.533,1496,3.533,1497,3.533,1498,3.533,1499,4.099,1500,3.533,1628,4.346,1629,4.346,1630,4.346]],["title/modules.html",[642,2.284]],["body/modules.html",[45,0.042,191,0.042,192,0.042,642,2.728,1490,2.728,1505,2.728,1631,4.565,1632,4.565,1633,4.565]],["title/properties.html",[148,0.487,497,1.228]],["body/properties.html",[45,0.044,123,3.718,148,0.661,191,0.042,192,0.042,1634,4.574]],["title/routes.html",[266,1.569]],["body/routes.html",[45,0.042,191,0.042,192,0.042,266,1.883]],["title/miscellaneous/variables.html",[1635,1.904,1636,2.74]],["body/miscellaneous/variables.html",[13,1.271,22,1.271,34,1.949,37,1.127,45,0.048,70,0.478,142,2.707,150,0.679,152,0.968,153,1.646,191,0.038,192,0.038,196,1.653,197,1.611,239,2.057,252,2.675,266,2.095,423,1.271,451,1.731,499,2.057,540,1.431,585,2.707,586,3.274,629,3.859,776,2.707,1306,3.191,1389,3.274,1412,3.274,1492,2.837,1493,3.274,1505,2.346,1510,2.707,1511,3.274,1521,3.274,1587,3.191,1588,4.149,1589,3.191,1590,3.859,1591,3.191,1592,3.859,1593,3.191,1603,3.191,1604,3.191,1605,3.859,1606,3.859,1607,3.859,1609,3.859,1621,3.191,1635,3.191,1636,3.191,1637,5.43,1638,3.925,1639,3.925,1640,4.748,1641,3.925,1642,3.925,1643,3.925,1644,3.925,1645,3.925,1646,3.925,1647,3.925,1648,3.925,1649,3.925,1650,3.925,1651,3.925,1652,3.925,1653,3.925,1654,3.925,1655,3.925,1656,3.925,1657,3.925,1658,3.925,1659,3.925,1660,4.748,1661,3.925,1662,3.925,1663,3.925,1664,3.925,1665,3.925,1666,3.925,1667,3.925,1668,3.925,1669,3.925,1670,3.925,1671,3.925,1672,3.925]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"coverage.html":{},"index.html":{}}}],["0.0.0",{"_index":1634,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{}}}],["0.125rem",{"_index":352,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15",{"_index":1056,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.15.0",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.25rem",{"_index":358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.375rem",{"_index":356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":312,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["0.5px",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":308,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.6",{"_index":1089,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.7",{"_index":344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":346,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.8",{"_index":1059,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.85rem",{"_index":1074,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.875rem",{"_index":301,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.9rem",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1071,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["004085",{"_index":362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["1.1rem",{"_index":1066,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.2rem",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["1.4",{"_index":1068,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.5",{"_index":1073,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.5rem",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1.8rem",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["1000",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["100vh",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":674,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{}}}],["1200px",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["120px",{"_index":933,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["12px",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["14",{"_index":1424,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["14/14",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["140px",{"_index":932,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["15/16",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["18/19",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["19.2.0",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["19.2.16",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["19.2.19",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["1976d2",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["1c7430",{"_index":369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":322,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2",{"_index":1352,"title":{},"body":{"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["2.3.0",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":314,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["20px",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{}}}],["212121",{"_index":1081,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["218",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["24/24",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["259200000",{"_index":1356,"title":{},"body":{"injectables/TaskService.html":{}}}],["28a745",{"_index":307,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2px",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["2rem",{"_index":296,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":903,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"injectables/ZipExportService.html":{}}}],["3/3",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["300ms",{"_index":386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["30px",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["3600000",{"_index":1355,"title":{},"body":{"injectables/TaskService.html":{}}}],["4",{"_index":1629,"title":{},"body":{"index.html":{}}}],["4.18.2",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["480px",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["495057",{"_index":331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":937,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["4e555b",{"_index":366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1628,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":349,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["500",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["545b62",{"_index":365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["56",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":1630,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["600px",{"_index":923,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["666",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["667eea",{"_index":927,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["6c757d",{"_index":302,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7.8.0",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["764ba2",{"_index":928,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["768px",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["8",{"_index":246,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["86400000",{"_index":1351,"title":{},"body":{"injectables/TaskService.html":{}}}],["8px",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["9/9",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["_nextid",{"_index":1289,"title":{},"body":{"injectables/TaskService.html":{}}}],["_tasks",{"_index":1290,"title":{},"body":{"injectables/TaskService.html":{}}}],["a.click",{"_index":527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.href",{"_index":524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.style.display",{"_index":1575,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a5d6a7",{"_index":1083,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["a:hover",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":894,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["acceder",{"_index":1338,"title":{},"body":{"injectables/TaskService.html":{}}}],["acceptsuggestiononenter",{"_index":1440,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["acceso",{"_index":772,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["acción",{"_index":1260,"title":{},"body":{"components/TaskListComponent.html":{}}}],["action",{"_index":484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["activar",{"_index":802,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["active",{"_index":492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actual",{"_index":993,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["actualiza",{"_index":763,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["actualización",{"_index":574,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualizada",{"_index":580,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualizado",{"_index":579,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualizar",{"_index":576,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["actualmente",{"_index":1142,"title":{},"body":{"components/TaskListComponent.html":{}}}],["add",{"_index":912,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/ZipExportService.html":{}}}],["add_task",{"_index":897,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["additional",{"_index":1544,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["again",{"_index":495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["agreg",{"_index":1237,"title":{},"body":{"components/TaskListComponent.html":{}}}],["agregando",{"_index":1232,"title":{},"body":{"components/TaskListComponent.html":{}}}],["al",{"_index":901,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["alert(`tarea",{"_index":1240,"title":{},"body":{"components/TaskListComponent.html":{}}}],["align",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["already",{"_index":1461,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["alta",{"_index":909,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["alterna",{"_index":980,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["alternado",{"_index":1004,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["alternar",{"_index":948,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["always",{"_index":1437,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["angular",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":834,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":230,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":833,"title":{},"body":{"components/TaskFormComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["angular/material/badge",{"_index":1211,"title":{},"body":{"components/TaskListComponent.html":{}}}],["angular/material/button",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/card",{"_index":841,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/checkbox",{"_index":1010,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["angular/material/chips",{"_index":1011,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/core",{"_index":840,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/datepicker",{"_index":839,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/divider",{"_index":1013,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["angular/material/form",{"_index":835,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/icon",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/input",{"_index":837,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/menu",{"_index":1012,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["angular/material/progress",{"_index":1212,"title":{},"body":{"components/TaskListComponent.html":{}}}],["angular/material/select",{"_index":838,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["angular/material/toolbar",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/tooltip",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["angular/platform",{"_index":1504,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":1086,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["apis",{"_index":1286,"title":{},"body":{"injectables/TaskService.html":{}}}],["aplica",{"_index":820,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{}}}],["aplicado",{"_index":1143,"title":{},"body":{"components/TaskListComponent.html":{}}}],["aplicar",{"_index":1184,"title":{},"body":{"components/TaskListComponent.html":{}}}],["app",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":1542,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":287,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["applicationconfig",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationtitle",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["applicationversion",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["args",{"_index":648,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":650,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":649,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arial",{"_index":670,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":1152,"title":{},"body":{"components/TaskListComponent.html":{}}}],["assignment",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{}}}],["async",{"_index":397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["asíncronas",{"_index":1007,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["attribute.name",{"_index":1478,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":1480,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["author",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["autoclosingbrackets",{"_index":1436,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":1485,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":1438,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatically",{"_index":470,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":1419,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automáticamente",{"_index":548,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["await",{"_index":400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["aún",{"_index":1225,"title":{},"body":{"components/TaskListComponent.html":{}}}],["background",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["backup",{"_index":1563,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["badge",{"_index":351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["baja",{"_index":906,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["basadas",{"_index":1287,"title":{},"body":{"injectables/TaskService.html":{}}}],["basado",{"_index":983,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["bash",{"_index":1550,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":668,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["before",{"_index":1566,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["behavior",{"_index":1252,"title":{},"body":{"components/TaskListComponent.html":{}}}],["behaviorsubject",{"_index":1325,"title":{},"body":{"injectables/TaskService.html":{}}}],["between",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["blinkmacsystemfont",{"_index":289,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["block",{"_index":1254,"title":{},"body":{"components/TaskListComponent.html":{}}}],["blockcomment",{"_index":1483,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["body",{"_index":324,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bold",{"_index":306,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["boolean",{"_index":224,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["bootstrap",{"_index":1492,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrapcontext",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["bottom",{"_index":298,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["box",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["brackets",{"_index":1484,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["brand",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["branding",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":621,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["browse",{"_index":1633,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1505,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":1503,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["btn",{"_index":355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["build",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1078,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["básica",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["calcula",{"_index":1135,"title":{},"body":{"components/TaskListComponent.html":{}}}],["call",{"_index":498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":1408,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["cambi",{"_index":1171,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cambio",{"_index":1170,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cambios",{"_index":916,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["campo",{"_index":790,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["campos",{"_index":546,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["cancel",{"_index":918,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["cancela",{"_index":757,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["cancelación",{"_index":1157,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cancelada",{"_index":1247,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cancelar",{"_index":919,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["canceledit",{"_index":739,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["caracteres",{"_index":904,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["características",{"_index":945,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["card",{"_index":922,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["carga",{"_index":809,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["cargando",{"_index":1276,"title":{},"body":{"components/TaskListComponent.html":{}}}],["case",{"_index":620,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskListComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["catch",{"_index":405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["center",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["change",{"_index":445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["changes",{"_index":1568,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["check",{"_index":679,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["check_circle",{"_index":1223,"title":{},"body":{"components/TaskListComponent.html":{}}}],["check_circle_outline",{"_index":1224,"title":{},"body":{"components/TaskListComponent.html":{}}}],["checkbox",{"_index":1064,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["class",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["class=\"tasks",{"_index":1278,"title":{},"body":{"components/TaskListComponent.html":{}}}],["clear",{"_index":454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["clear_all",{"_index":1274,"title":{},"body":{"components/TaskListComponent.html":{}}}],["clearalltasks",{"_index":1112,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["cleartimeout(this.savetimeout",{"_index":411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":693,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["close",{"_index":1487,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["cloud",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":1495,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":1497,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":1496,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":1498,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["code",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["color",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["colors",{"_index":1560,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["column",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":318,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["comienza",{"_index":1231,"title":{},"body":{"components/TaskListComponent.html":{}}}],["comment",{"_index":1470,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":1433,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":610,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":1506,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["como",{"_index":800,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["compara",{"_index":992,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["compare",{"_index":614,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["completa",{"_index":812,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["completada",{"_index":569,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["completadas",{"_index":1100,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["completado",{"_index":949,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["complete",{"_index":663,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["completed",{"_index":570,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["completedtaskscount",{"_index":1292,"title":{},"body":{"injectables/TaskService.html":{}}}],["completion",{"_index":1021,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["completitud",{"_index":1137,"title":{},"body":{"components/TaskListComponent.html":{}}}],["compodoc",{"_index":256,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":194,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component_template",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["componentes",{"_index":1353,"title":{},"body":{"injectables/TaskService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["components/task",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["computada",{"_index":1203,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["computed",{"_index":1195,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["con",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["conditional",{"_index":626,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["config",{"_index":252,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurar",{"_index":1347,"title":{},"body":{"injectables/TaskService.html":{}}}],["configuration",{"_index":257,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirm",{"_index":1256,"title":{},"body":{"components/TaskListComponent.html":{}}}],["confirm('are",{"_index":480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirm(`are",{"_index":1028,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["confirmación",{"_index":997,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["confirmation",{"_index":1023,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["confirmed",{"_index":1255,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.error('error",{"_index":407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["console.error('no",{"_index":491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log",{"_index":1241,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('creating",{"_index":496,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('edición",{"_index":1246,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('nueva",{"_index":1239,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('reset",{"_index":489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('tarea",{"_index":1242,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('template",{"_index":530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('todas",{"_index":1264,"title":{},"body":{"components/TaskListComponent.html":{}}}],["const",{"_index":414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["constructors",{"_index":275,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contador",{"_index":1318,"title":{},"body":{"injectables/TaskService.html":{}}}],["container",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["containing",{"_index":1555,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["contains",{"_index":1534,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["contenido",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["contentdisposition",{"_index":512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1537,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["conteo",{"_index":1331,"title":{},"body":{"injectables/TaskService.html":{}}}],["context",{"_index":629,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/variables.html":{}}}],["contiene",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["control",{"_index":771,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["control?.markastouched",{"_index":893,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["controlname",{"_index":774,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["correspondiente",{"_index":1154,"title":{},"body":{"components/TaskListComponent.html":{}}}],["coverage",{"_index":267,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["crea",{"_index":760,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["creación",{"_index":571,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["creación/edición",{"_index":826,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["creada",{"_index":1041,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["creando",{"_index":914,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["crear",{"_index":541,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["create",{"_index":425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["created",{"_index":421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createdat",{"_index":572,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["createnoderequesthandler(app",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsession",{"_index":412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createtask",{"_index":1295,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtask(taskrequest",{"_index":1302,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskrequest",{"_index":537,"title":{"interfaces/CreateTaskRequest.html":{}},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["creation",{"_index":501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crud",{"_index":1095,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["css",{"_index":1453,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["cuando",{"_index":755,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["currentfilter",{"_index":1109,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cursor",{"_index":335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["custom",{"_index":920,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["customfavicon",{"_index":200,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customization",{"_index":1556,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customization.html",{"_index":1572,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":1558,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":1535,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":1541,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dark",{"_index":260,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["data",{"_index":599,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["date",{"_index":381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["date(date.now",{"_index":1350,"title":{},"body":{"injectables/TaskService.html":{}}}],["date(this.task().duedate",{"_index":1038,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["date.overdue",{"_index":1077,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["date:'short",{"_index":251,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datepipe",{"_index":952,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["datos",{"_index":780,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["dd",{"_index":1044,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ddd",{"_index":671,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":899,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["debounce",{"_index":387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["declarations",{"_index":1491,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["declare",{"_index":603,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["dee2e6",{"_index":299,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["default",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":704,"title":{},"body":{"interfaces/Task.html":{}}}],["defined",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["definitions",{"_index":1447,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["del",{"_index":698,"title":{},"body":{"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["delete",{"_index":1029,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["deleted",{"_index":1031,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["deletetask",{"_index":1296,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":1304,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleting",{"_index":1034,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["delimiter",{"_index":1479,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":685,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["demostración",{"_index":1311,"title":{},"body":{"injectables/TaskService.html":{}}}],["dependencies",{"_index":269,"title":{"dependencies.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"index.html":{}}}],["depth",{"_index":633,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["desarrollado",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["desarrollar",{"_index":1354,"title":{},"body":{"injectables/TaskService.html":{}}}],["descripción",{"_index":551,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["descriptivo",{"_index":989,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["desde",{"_index":773,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["deshacer",{"_index":1262,"title":{},"body":{"components/TaskListComponent.html":{}}}],["design",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["desplaza",{"_index":1176,"title":{},"body":{"components/TaskListComponent.html":{}}}],["después",{"_index":1132,"title":{},"body":{"components/TaskListComponent.html":{}}}],["destroy",{"_index":1391,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["detallada",{"_index":564,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["determinar",{"_index":994,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dev",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":1027,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["diferentes",{"_index":1097,"title":{},"body":{"components/TaskListComponent.html":{}}}],["direction",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["directory",{"_index":1547,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":263,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":201,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":202,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":203,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":204,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":205,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":206,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":207,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":208,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":209,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":210,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":211,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":212,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":213,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":214,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesearch",{"_index":215,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":216,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":217,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":218,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["display",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["disposition",{"_index":514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["doctype",{"_index":1472,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":664,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(a",{"_index":528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('a",{"_index":523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.queryselector('.form",{"_index":1250,"title":{},"body":{"components/TaskListComponent.html":{}}}],["documentation",{"_index":468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["documentation/.../hbs",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":196,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":681,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["donut_large",{"_index":1270,"title":{},"body":{"components/TaskListComponent.html":{}}}],["download",{"_index":254,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["downloadblob",{"_index":1512,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":1515,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloaded",{"_index":531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloading",{"_index":533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["due",{"_index":1076,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["duedate",{"_index":549,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["durante",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["e9ecef",{"_index":310,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":627,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ease",{"_index":313,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["edición",{"_index":758,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["edit",{"_index":896,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["editar",{"_index":781,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["editcancelled",{"_index":747,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["editingtaskid",{"_index":733,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["editor",{"_index":348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":232,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":1389,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":1411,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":1402,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":1396,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":1405,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":1407,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":1398,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":1403,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":1410,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ef9a9a",{"_index":1080,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ejemplo",{"_index":1310,"title":{},"body":{"injectables/TaskService.html":{}}}],["el",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["element",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["elemento",{"_index":1191,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["elementref",{"_index":227,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["elimin",{"_index":1307,"title":{},"body":{"injectables/TaskService.html":{}}}],["elimina",{"_index":976,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["eliminación",{"_index":950,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["eliminada",{"_index":1164,"title":{},"body":{"components/TaskListComponent.html":{}}}],["eliminadas",{"_index":1266,"title":{},"body":{"components/TaskListComponent.html":{}}}],["eliminar",{"_index":996,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["emisor",{"_index":752,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["emite",{"_index":975,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["en",{"_index":702,"title":{},"body":{"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["enabled",{"_index":1421,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["encontr",{"_index":1308,"title":{},"body":{"injectables/TaskService.html":{}}}],["encuentra",{"_index":1314,"title":{},"body":{"injectables/TaskService.html":{}}}],["end",{"_index":930,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["endpoint",{"_index":502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["entidad",{"_index":701,"title":{},"body":{"interfaces/Task.html":{}}}],["entrada",{"_index":972,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["envío",{"_index":806,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["error",{"_index":406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["error('failed",{"_index":424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":678,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["errores",{"_index":998,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["es",{"_index":791,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["escenarios",{"_index":1003,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["español",{"_index":986,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["est",{"_index":568,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["esta",{"_index":703,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListComponent.html":{}}}],["establece",{"_index":1181,"title":{},"body":{"components/TaskListComponent.html":{}}}],["estado",{"_index":581,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["estadísticas",{"_index":1094,"title":{},"body":{"components/TaskListComponent.html":{}}}],["este",{"_index":716,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["estilo",{"_index":951,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["estructura",{"_index":705,"title":{},"body":{"interfaces/Task.html":{}}}],["estás",{"_index":1257,"title":{},"body":{"components/TaskListComponent.html":{}}}],["etc",{"_index":1562,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["event",{"_index":844,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["eventcoalescing",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":845,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["evento",{"_index":753,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["events",{"_index":694,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["example",{"_index":640,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["excelente",{"_index":1229,"title":{},"body":{"components/TaskListComponent.html":{}}}],["existente",{"_index":577,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["existing",{"_index":455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["existingtask",{"_index":1373,"title":{},"body":{"injectables/TaskService.html":{}}}],["exitosa",{"_index":1174,"title":{},"body":{"components/TaskListComponent.html":{}}}],["exitosamente",{"_index":761,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["export",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["export.service",{"_index":235,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":1511,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":1518,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":1520,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":1516,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exports",{"_index":1494,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["exporttemplates",{"_index":1513,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":1517,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exportzip",{"_index":490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":1621,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extract",{"_index":1546,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["f0f0f0",{"_index":1072,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["f0f8ff",{"_index":673,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":934,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["f5f5f5",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["f8f9fa",{"_index":297,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fafafa",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["family",{"_index":286,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fecha",{"_index":553,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["ff9800",{"_index":939,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["ffc107",{"_index":305,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ffcc80",{"_index":1082,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["fff5f5",{"_index":677,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ffffff",{"_index":921,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["field",{"_index":836,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field.dirty",{"_index":866,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field.invalid",{"_index":865,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field.touched",{"_index":867,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["fieldname",{"_index":796,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["file.content",{"_index":1524,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":518,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":1519,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":1522,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1399,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["filter",{"_index":1183,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filter_list",{"_index":1272,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filteredtasks",{"_index":1110,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["filteredtasks.length",{"_index":1378,"title":{},"body":{"injectables/TaskService.html":{}}}],["filtradas",{"_index":1151,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtrado",{"_index":1093,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtrar",{"_index":1273,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtro",{"_index":1140,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtros",{"_index":1098,"title":{},"body":{"components/TaskListComponent.html":{}}}],["finalización",{"_index":582,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["finally",{"_index":886,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["firebase",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fit",{"_index":320,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["flag",{"_index":910,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/ZipExportService.html":{}}}],["flex",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["flujo",{"_index":1341,"title":{},"body":{"injectables/TaskService.html":{}}}],["font",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":1561,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1423,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["footer",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["form",{"_index":720,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["form.component",{"_index":1215,"title":{},"body":{"components/TaskListComponent.html":{}}}],["form.component.html",{"_index":732,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.scss",{"_index":730,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts",{"_index":712,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:104",{"_index":750,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:116",{"_index":778,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:133",{"_index":764,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:146",{"_index":782,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:168",{"_index":788,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:181",{"_index":804,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:233",{"_index":814,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:251",{"_index":797,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:264",{"_index":769,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:53",{"_index":822,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:59",{"_index":828,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:66",{"_index":759,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:73",{"_index":762,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:80",{"_index":751,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:86",{"_index":825,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:92",{"_index":823,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:98",{"_index":819,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form/task",{"_index":711,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":734,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formgroup",{"_index":784,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formsection",{"_index":1249,"title":{},"body":{"components/TaskListComponent.html":{}}}],["formsection.scrollintoview",{"_index":1251,"title":{},"body":{"components/TaskListComponent.html":{}}}],["formsmodule",{"_index":1507,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["formulario",{"_index":713,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["formvalue",{"_index":870,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.description?.trim",{"_index":874,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.duedate",{"_index":876,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.priority",{"_index":875,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalue.title.trim",{"_index":873,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["frame",{"_index":354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["full",{"_index":929,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["funcionalidades",{"_index":1092,"title":{},"body":{"components/TaskListComponent.html":{}}}],["función",{"_index":1187,"title":{},"body":{"components/TaskListComponent.html":{}}}],["function",{"_index":1409,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["functionality",{"_index":488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["functions",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["generados",{"_index":547,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["generar",{"_index":1320,"title":{},"body":{"injectables/TaskService.html":{}}}],["generate",{"_index":1529,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":1573,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generatereadme",{"_index":1514,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generating",{"_index":1538,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":1536,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":259,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gestiona",{"_index":1091,"title":{},"body":{"components/TaskListComponent.html":{}}}],["gestión",{"_index":1284,"title":{},"body":{"injectables/TaskService.html":{}}}],["getcompletionpercentage",{"_index":1113,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getcurrentfilter",{"_index":1114,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getemptystateicon",{"_index":1115,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getemptystatemessage",{"_index":1116,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getemptystatetitle",{"_index":1117,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfilteredtasks",{"_index":1118,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfilteredtasks().length",{"_index":1275,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfiltericon",{"_index":1119,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getfiltertitle",{"_index":1120,"title":{},"body":{"components/TaskListComponent.html":{}}}],["getformcontrol",{"_index":740,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getformcontrol(controlname",{"_index":768,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getlanguagefromfiletype",{"_index":1392,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":1397,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getmockdata",{"_index":589,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getpriorityicon",{"_index":960,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getprioritytext",{"_index":961,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getprioritytooltip",{"_index":962,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["gradient(135deg",{"_index":926,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["graph",{"_index":265,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["grid",{"_index":317,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["grupo",{"_index":785,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["guardando",{"_index":913,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["guardar",{"_index":915,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["h3",{"_index":329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ha",{"_index":793,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["hacia",{"_index":1178,"title":{},"body":{"components/TaskListComponent.html":{}}}],["han",{"_index":1265,"title":{},"body":{"components/TaskListComponent.html":{}}}],["handle",{"_index":692,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars",{"_index":451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":608,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":1469,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":587,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hay",{"_index":1146,"title":{},"body":{"components/TaskListComponent.html":{}}}],["hbs",{"_index":237,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":236,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"index.html":{}}}],["hbsservice",{"_index":396,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["header",{"_index":295,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["headers",{"_index":510,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["height",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["helper",{"_index":615,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpers",{"_index":611,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hh:mm",{"_index":1050,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["hidden",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hide",{"_index":258,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidedarkmodetoggle",{"_index":219,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":220,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["high",{"_index":557,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["hook",{"_index":689,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hooks",{"_index":274,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":1429,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["href",{"_index":697,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":1401,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["http",{"_index":393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclient",{"_index":229,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":1508,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["https://compodoc.app/guides/template",{"_index":1571,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["icon",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["icon.high",{"_index":940,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["icon.low",{"_index":936,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["icon.medium",{"_index":938,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["icono",{"_index":982,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["id",{"_index":562,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["identificador",{"_index":560,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["identifier",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1321,"title":{},"body":{"injectables/TaskService.html":{}}}],["implement",{"_index":487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implements",{"_index":371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["import",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["important",{"_index":935,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["imports",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["includes",{"_index":221,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":222,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["incluye",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["incluyendo",{"_index":719,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["incompleta",{"_index":1054,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["index",{"_index":70,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":566,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["indicador",{"_index":824,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["indicator",{"_index":304,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["individual",{"_index":944,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":639,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["inicial",{"_index":816,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inicializado",{"_index":786,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inicializar",{"_index":779,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["initialize",{"_index":1413,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializeeditmode",{"_index":741,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["initializeeditmode(task",{"_index":777,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["initializeeditor",{"_index":439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":1400,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializeform",{"_index":742,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["initializehandlebars",{"_index":590,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializesampledata",{"_index":1297,"title":{},"body":{"injectables/TaskService.html":{}}}],["initializing",{"_index":408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":830,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["inject(formbuilder",{"_index":821,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inject(taskservice",{"_index":827,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["injectable",{"_index":583,"title":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":584,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["input",{"_index":1009,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["input.required",{"_index":1015,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["inputs",{"_index":643,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["inputsignal",{"_index":1014,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["instalar",{"_index":1348,"title":{},"body":{"injectables/TaskService.html":{}}}],["instance",{"_index":606,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["instructions",{"_index":1526,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["interactivas",{"_index":946,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["interface",{"_index":193,"title":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["interfaces",{"_index":195,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"interfaces/Template.html":{},"interfaces/UpdateTaskRequest.html":{},"index.html":{}}}],["interfaz",{"_index":539,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["internal",{"_index":272,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inválido",{"_index":792,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inyectado",{"_index":1209,"title":{},"body":{"components/TaskListComponent.html":{}}}],["iseditmode",{"_index":735,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["isfieldinvalid",{"_index":743,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["isfieldinvalid(fieldname",{"_index":787,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["isinitial",{"_index":660,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":658,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isloading",{"_index":736,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["isoverdue",{"_index":963,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["istabenabled",{"_index":652,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":686,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["italic",{"_index":347,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["item'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["item.completed",{"_index":1058,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component",{"_index":1214,"title":{},"body":{"components/TaskListComponent.html":{}}}],["item.component.html",{"_index":959,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.scss",{"_index":958,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts",{"_index":942,"title":{},"body":{"components/TaskItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:116",{"_index":999,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:126",{"_index":995,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:155",{"_index":990,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:171",{"_index":981,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:189",{"_index":987,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:207",{"_index":984,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:47",{"_index":1008,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:53",{"_index":971,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:60",{"_index":979,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:67",{"_index":974,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:74",{"_index":977,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:80",{"_index":1005,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:90",{"_index":1001,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.high",{"_index":1060,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.low",{"_index":1062,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.medium",{"_index":1061,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.name",{"_index":536,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item/task",{"_index":941,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["item:hover",{"_index":1055,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item[disabled",{"_index":1088,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["items",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["javascript",{"_index":1456,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["js",{"_index":1455,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["jszip",{"_index":1521,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["keep",{"_index":1564,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["key",{"_index":638,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["keyboard_arrow_down",{"_index":905,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["keyboard_arrow_up",{"_index":908,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["keyword",{"_index":1467,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["label",{"_index":323,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lang.id",{"_index":1460,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1416,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["las",{"_index":1131,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["last",{"_index":248,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lastsaved",{"_index":250,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["layout",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/ZipExportService.html":{}}}],["lectura",{"_index":1337,"title":{},"body":{"injectables/TaskService.html":{}}}],["leer",{"_index":1281,"title":{},"body":{"injectables/TaskService.html":{}}}],["left",{"_index":345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["legend",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["letter",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li",{"_index":334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lifecycle",{"_index":273,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["limpia",{"_index":817,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["limpian",{"_index":1133,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["limpiar",{"_index":917,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["line",{"_index":1067,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["linear",{"_index":925,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["linenumbers",{"_index":1426,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["list",{"_index":328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["list'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["list.component",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["list.component.html",{"_index":1106,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.scss",{"_index":1108,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":1090,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":1180,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:112",{"_index":1150,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:121",{"_index":1134,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:134",{"_index":1153,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:150",{"_index":1155,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:166",{"_index":1144,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:182",{"_index":1149,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:198",{"_index":1147,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:215",{"_index":1159,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:227",{"_index":1169,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:242",{"_index":1162,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:252",{"_index":1166,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:267",{"_index":1173,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:277",{"_index":1156,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:287",{"_index":1175,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:304",{"_index":1130,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:329",{"_index":1186,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:49",{"_index":1208,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:55",{"_index":1206,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:61",{"_index":1194,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:67",{"_index":1204,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:74",{"_index":1201,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:93",{"_index":1138,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list/task",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["listener",{"_index":1443,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["live",{"_index":283,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loading",{"_index":280,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["loadsessionconfig",{"_index":435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["los",{"_index":706,"title":{},"body":{"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["low",{"_index":555,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["ltima",{"_index":573,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["límite",{"_index":554,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["lópez",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["making",{"_index":1567,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["manager",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{}}}],["maneja",{"_index":1002,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["manejador",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manejar",{"_index":805,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["manejo",{"_index":808,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["mapping",{"_index":636,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["marcar",{"_index":798,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["margin",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["markformgrouptouched",{"_index":744,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mat",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["matbadgemodule",{"_index":1103,"title":{},"body":{"components/TaskListComponent.html":{}}}],["matbuttonmodule",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matbuttontogglemodule",{"_index":1104,"title":{},"body":{"components/TaskListComponent.html":{}}}],["matcardmodule",{"_index":728,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matcheckboxmodule",{"_index":954,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["matching",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":955,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matdatepickermodule",{"_index":726,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["matdividermodule",{"_index":957,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["material",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["matformfieldmodule",{"_index":723,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["math.round((completed",{"_index":1222,"title":{},"body":{"components/TaskListComponent.html":{}}}],["maticonmodule",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["matinputmodule",{"_index":724,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["matmenumodule",{"_index":956,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["matnativedatemodule",{"_index":727,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["matprogressspinnermodule",{"_index":1105,"title":{},"body":{"components/TaskListComponent.html":{}}}],["matselectmodule",{"_index":725,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mattoolbarmodule",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["mattooltipmodule",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["max",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["mdc",{"_index":1079,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["media",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["mediante",{"_index":1238,"title":{},"body":{"components/TaskListComponent.html":{}}}],["medium",{"_index":556,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["menos",{"_index":902,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mensaje",{"_index":1148,"title":{},"body":{"components/TaskListComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":244,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["metadata",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["metatag",{"_index":1474,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":1473,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["methods",{"_index":588,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["min",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["minimal",{"_index":223,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":1420,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minmax(200px",{"_index":321,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["miscellaneous",{"_index":1635,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":1043,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["mock",{"_index":675,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["mode",{"_index":261,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["model",{"_index":1450,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["modelo",{"_index":699,"title":{},"body":{"interfaces/Task.html":{}}}],["models/task.model",{"_index":842,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["modify",{"_index":1559,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["modo",{"_index":766,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["module",{"_index":641,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["modules",{"_index":642,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["monaco",{"_index":1412,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":1415,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":1451,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":1459,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":1463,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":1482,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":1464,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monospace",{"_index":303,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["more",{"_index":1569,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["more_vert",{"_index":1051,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["mostrar",{"_index":973,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["mouseevent",{"_index":696,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["muestra",{"_index":943,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["navegación",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["navtabs",{"_index":654,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":656,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":661,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":662,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ndice",{"_index":1190,"title":{},"body":{"components/TaskListComponent.html":{}}}],["new",{"_index":423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newtask",{"_index":882,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["next",{"_index":1468,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["ngclass",{"_index":953,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ngfor",{"_index":1102,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ngif",{"_index":722,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["ngmodule",{"_index":1502,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngondestroy",{"_index":409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["nico",{"_index":561,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["nicos",{"_index":1322,"title":{},"body":{"injectables/TaskService.html":{}}}],["ninguna",{"_index":1226,"title":{},"body":{"components/TaskListComponent.html":{}}}],["nivel",{"_index":558,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["nombre",{"_index":775,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["none",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["notice",{"_index":672,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["now",{"_index":1037,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["nowrap",{"_index":1075,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["nueva",{"_index":543,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["nuevas",{"_index":715,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["nuevo",{"_index":1182,"title":{},"body":{"components/TaskListComponent.html":{}}}],["null",{"_index":378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["number",{"_index":383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["número",{"_index":1344,"title":{},"body":{"injectables/TaskService.html":{}}}],["o",{"_index":776,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.taskform.controls).foreach((key",{"_index":891,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["objeto",{"_index":1192,"title":{},"body":{"components/TaskListComponent.html":{}}}],["objetos",{"_index":707,"title":{},"body":{"interfaces/Task.html":{}}}],["obligatorio",{"_index":898,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["observable",{"_index":1288,"title":{},"body":{"injectables/TaskService.html":{}}}],["observe",{"_index":506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["obtener",{"_index":770,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["obtiene",{"_index":1139,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onchangecallback",{"_index":1390,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onclick",{"_index":691,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":695,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ondeletetask",{"_index":964,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ondestroy",{"_index":228,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oneditcancelled",{"_index":1121,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onedittask",{"_index":965,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["oninit",{"_index":225,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["onsubmit",{"_index":745,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["ontaskcreated",{"_index":1122,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskcreated(task",{"_index":1158,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskdeleted",{"_index":1123,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskdeleted(taskid",{"_index":1161,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskedit",{"_index":1124,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskedit(task",{"_index":1165,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontasktoggled",{"_index":1125,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontasktoggled(task",{"_index":1168,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskupdated",{"_index":1126,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskupdated(task",{"_index":1172,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontogglecomplete",{"_index":966,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["opacity",{"_index":343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["opcional",{"_index":552,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["open",{"_index":1486,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["operaciones",{"_index":1006,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["operación",{"_index":813,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["operator",{"_index":617,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimizada",{"_index":1189,"title":{},"body":{"components/TaskListComponent.html":{}}}],["optional",{"_index":199,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":316,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["options.fn(this",{"_index":622,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":623,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["original",{"_index":1565,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["orlength",{"_index":646,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["osmar",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":1500,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["output",{"_index":831,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["outputemitterref",{"_index":1016,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["outputs",{"_index":644,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["overflow",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["overview",{"_index":264,"title":{"index.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["overviewrulerlanes",{"_index":1431,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["p",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/ZipExportService.html":{}}}],["package",{"_index":497,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["padding",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["page",{"_index":494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":1553,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":1539,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["panel",{"_index":309,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":315,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["para",{"_index":540,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":848,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["parameterhints",{"_index":1435,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":601,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["partial",{"_index":240,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":1554,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["path",{"_index":239,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/to/custom/templates",{"_index":1552,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pendientes",{"_index":1101,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["pending",{"_index":1141,"title":{},"body":{"components/TaskListComponent.html":{}}}],["pendingtaskscount",{"_index":1293,"title":{},"body":{"injectables/TaskService.html":{}}}],["peticiones",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playground",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":1509,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":198,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":1501,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":585,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":197,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":1510,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pointer",{"_index":336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["pop",{"_index":1471,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["por",{"_index":1306,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["porcentaje",{"_index":1136,"title":{},"body":{"components/TaskListComponent.html":{}}}],["position",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["preview",{"_index":284,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary",{"_index":359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primera",{"_index":1234,"title":{},"body":{"components/TaskListComponent.html":{}}}],["principal",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["prioridad",{"_index":559,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["priority",{"_index":550,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["privada",{"_index":1324,"title":{},"body":{"injectables/TaskService.html":{}}}],["privado",{"_index":1319,"title":{},"body":{"injectables/TaskService.html":{}}}],["private",{"_index":270,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["processing",{"_index":885,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["progreso",{"_index":1271,"title":{},"body":{"components/TaskListComponent.html":{}}}],["promise",{"_index":413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["promise.resolve",{"_index":1388,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(false",{"_index":1380,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(newtask",{"_index":1369,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(null",{"_index":1372,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(true",{"_index":1383,"title":{},"body":{"injectables/TaskService.html":{}}}],["promise.resolve(updatedtask",{"_index":1376,"title":{},"body":{"injectables/TaskService.html":{}}}],["proper",{"_index":1026,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["properties",{"_index":148,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"properties.html":{}}}],["proporciona",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["protected",{"_index":271,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":604,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["providerouter(routes",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1493,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proyecto",{"_index":1349,"title":{},"body":{"injectables/TaskService.html":{}}}],["prueba",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["public",{"_index":1291,"title":{},"body":{"injectables/TaskService.html":{}}}],["puede",{"_index":1261,"title":{},"body":{"components/TaskListComponent.html":{}}}],["página",{"_index":1177,"title":{},"body":{"components/TaskListComponent.html":{}}}],["pública",{"_index":1335,"title":{},"body":{"injectables/TaskService.html":{}}}],["que",{"_index":810,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["quicksuggestions",{"_index":1432,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["quieres",{"_index":1259,"title":{},"body":{"components/TaskListComponent.html":{}}}],["radius",{"_index":337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["raíz",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiva",{"_index":1285,"title":{},"body":{"injectables/TaskService.html":{}}}],["reactiveformsmodule",{"_index":721,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["reactivo",{"_index":717,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["readme",{"_index":1525,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{}}}],["real",{"_index":1024,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["recién",{"_index":1160,"title":{},"body":{"components/TaskListComponent.html":{}}}],["red",{"_index":676,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["referencia",{"_index":1207,"title":{},"body":{"components/TaskListComponent.html":{}}}],["refresh",{"_index":285,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":469,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":609,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["registered",{"_index":1462,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhandlebarslanguage",{"_index":1393,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":591,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["reglas",{"_index":783,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["reinicia",{"_index":818,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["reiniciar",{"_index":767,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["relacionadas",{"_index":1280,"title":{},"body":{"injectables/TaskService.html":{}}}],["relative",{"_index":353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":631,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["remove",{"_index":907,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["render.service",{"_index":238,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":586,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":600,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":596,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":594,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":597,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":593,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendered",{"_index":666,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendermode",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendertemplate",{"_index":592,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":598,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["repeat(auto",{"_index":319,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["representa",{"_index":700,"title":{},"body":{"interfaces/Task.html":{}}}],["reqhandler",{"_index":1607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requerido",{"_index":563,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["required",{"_index":970,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["reset",{"_index":253,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}],["resetform",{"_index":746,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["resetting",{"_index":479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resolve(serverdistfolder",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":507,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":513,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsetype",{"_index":504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsive",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/TaskItemComponent.html":{}}}],["resuelve",{"_index":811,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["result",{"_index":618,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":630,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["return",{"_index":389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["returns",{"_index":595,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["rgba(0",{"_index":924,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["rgba(80",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["roboto",{"_index":292,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["root",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["roundedselection",{"_index":1427,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["routes",{"_index":266,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1085,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["running",{"_index":1548,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["rxjs",{"_index":1343,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["salida",{"_index":754,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["salir",{"_index":765,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["sample",{"_index":682,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":683,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sampletasks",{"_index":1346,"title":{},"body":{"injectables/TaskService.html":{}}}],["sans",{"_index":293,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save",{"_index":444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"interfaces/Template.html":{}}}],["save_delay",{"_index":384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":249,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetemplate(content",{"_index":463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":247,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schedule",{"_index":458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scripts",{"_index":1543,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollbar",{"_index":1428,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":1422,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrolltoform",{"_index":1127,"title":{},"body":{"components/TaskListComponent.html":{}}}],["scss",{"_index":1454,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["se",{"_index":756,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["search",{"_index":268,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary",{"_index":363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["section",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/TaskListComponent.html":{}}}],["segoe",{"_index":290,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seguimiento",{"_index":1188,"title":{},"body":{"components/TaskListComponent.html":{}}}],["seguro",{"_index":1258,"title":{},"body":{"components/TaskListComponent.html":{}}}],["según",{"_index":1096,"title":{},"body":{"components/TaskListComponent.html":{}}}],["select",{"_index":430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile",{"_index":377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":281,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":282,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["serif",{"_index":294,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":1609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/task.service",{"_index":843,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["servicio",{"_index":829,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["session",{"_index":241,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":242,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":245,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["seteditorcontent",{"_index":1394,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":1404,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setfilter",{"_index":1128,"title":{},"body":{"components/TaskListComponent.html":{}}}],["setfilter(filter",{"_index":1179,"title":{},"body":{"components/TaskListComponent.html":{}}}],["setonchangecallback",{"_index":1395,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":1406,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["settimeout",{"_index":1248,"title":{},"body":{"components/TaskListComponent.html":{}}}],["señal",{"_index":1202,"title":{},"body":{"components/TaskListComponent.html":{}}}],["shadow",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["showconfigpanel",{"_index":379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["shrink",{"_index":1065,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["si",{"_index":567,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["side",{"_index":500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sidebar",{"_index":325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sido",{"_index":794,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["signal",{"_index":1210,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["signal('all",{"_index":1193,"title":{},"body":{"components/TaskListComponent.html":{}}}],["signals",{"_index":1283,"title":{},"body":{"injectables/TaskService.html":{}}}],["signature",{"_index":690,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sigue",{"_index":1227,"title":{},"body":{"components/TaskListComponent.html":{}}}],["simple",{"_index":634,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["sin",{"_index":545,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["size",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["sm",{"_index":370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["smooth",{"_index":1253,"title":{},"body":{"components/TaskListComponent.html":{}}}],["solicita",{"_index":978,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["solicitar",{"_index":1000,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["solicitud",{"_index":1167,"title":{},"body":{"components/TaskListComponent.html":{}}}],["solid",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["solo",{"_index":1336,"title":{},"body":{"injectables/TaskService.html":{}}}],["soporta",{"_index":947,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specify",{"_index":1549,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spinner",{"_index":1213,"title":{},"body":{"components/TaskListComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:216",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:222",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/task",{"_index":710,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["src/app/models/task.model.ts",{"_index":538,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":684,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/services/task.service.ts",{"_index":1279,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:122",{"_index":1303,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:150",{"_index":1316,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:183",{"_index":1305,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:203",{"_index":1313,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:217",{"_index":1301,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:25",{"_index":1323,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:31",{"_index":1326,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:37",{"_index":1317,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:44",{"_index":1334,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:51",{"_index":1340,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:58",{"_index":1330,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:67",{"_index":1332,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:76",{"_index":1300,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:87",{"_index":1309,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/main.server.ts",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["start",{"_index":1063,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["state",{"_index":1087,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["statements",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["status",{"_index":300,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sticky",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["stretch",{"_index":1084,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["string",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{}}}],["strings",{"_index":1434,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["structure",{"_index":669,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["style",{"_index":277,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":1540,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":1107,"title":{},"body":{"components/TaskListComponent.html":{}}}],["styleurls",{"_index":729,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["su",{"_index":815,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["submit",{"_index":931,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["subtitle",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":243,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["success:hover",{"_index":367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successfully",{"_index":532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["suggestontriggercharacters",{"_index":1439,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["superior",{"_index":1235,"title":{},"body":{"components/TaskListComponent.html":{}}}],["support",{"_index":1631,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["surroundingpairs",{"_index":1488,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suscripciones",{"_index":1327,"title":{},"body":{"injectables/TaskService.html":{}}}],["svg",{"_index":1632,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":619,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskListComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["syntax",{"_index":680,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":288,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t.id",{"_index":657,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TaskService.html":{}}}],["t\\r\\n",{"_index":1476,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":276,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tabcompletion",{"_index":1441,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":655,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1475,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tarea",{"_index":544,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["tareas",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["task",{"_index":17,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["task().completed",{"_index":1052,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().createdat",{"_index":1042,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().description",{"_index":1040,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().duedate",{"_index":1046,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().title",{"_index":1039,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task().updatedat",{"_index":1049,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.completed",{"_index":1200,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["task.completed).length",{"_index":1329,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.description",{"_index":854,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["task.duedate",{"_index":856,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["task.id",{"_index":851,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["task.priority",{"_index":855,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["task.title",{"_index":853,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["taskcreated",{"_index":748,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["taskdeleted",{"_index":967,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskedit",{"_index":968,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskform",{"_index":737,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["taskform.initializeeditmode(task",{"_index":1244,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskformcomponent",{"_index":182,"title":{"components/TaskFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["taskformref",{"_index":1111,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskid",{"_index":1163,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskindex",{"_index":1370,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskitemcomponent",{"_index":184,"title":{"components/TaskItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["tasklistcomponent",{"_index":43,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["taskrequest",{"_index":881,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["taskrequest.description",{"_index":1362,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskrequest.duedate",{"_index":1364,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskrequest.priority",{"_index":1363,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskrequest.title",{"_index":1361,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks",{"_index":1197,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["tasks.filter((t",{"_index":1377,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks.filter((task",{"_index":1199,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasks.findindex((t",{"_index":1371,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks.length",{"_index":1379,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks[taskindex",{"_index":1374,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskservice",{"_index":738,"title":{"injectables/TaskService.html":{}},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskservice.completedtaskscount",{"_index":1269,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskservice.pendingtaskscount",{"_index":1268,"title":{},"body":{"components/TaskListComponent.html":{}}}],["taskservice.totaltaskscount",{"_index":1267,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasktoggled",{"_index":969,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskupdated",{"_index":749,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["template",{"_index":137,"title":{"interfaces/Template.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":278,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":279,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":602,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":231,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"index.html":{}}}],["templateplaygroundcomponent",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"index.html":{}}}],["templateplaygroundmodule",{"_index":1490,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{},"modules.html":{}}}],["templates",{"_index":255,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":1533,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":731,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["tener",{"_index":900,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["text",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["texto",{"_index":985,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["theme",{"_index":1417,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["then((content",{"_index":1531,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this._nextid",{"_index":1359,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._nextid.tostring",{"_index":1360,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks",{"_index":1366,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.asobservable",{"_index":1339,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next",{"_index":1387,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next(filteredtasks",{"_index":1382,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next(sampletasks",{"_index":1358,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks$.next(updatedtasks",{"_index":1368,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks().filter((task",{"_index":1328,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks().find((t",{"_index":1384,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks().length",{"_index":1342,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.asreadonly",{"_index":1333,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set",{"_index":1386,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set(filteredtasks",{"_index":1381,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set(sampletasks",{"_index":1357,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._tasks.set(updatedtasks",{"_index":1367,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.canceledit",{"_index":880,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.config",{"_index":437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.createsession",{"_index":401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currentfilter",{"_index":1196,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.currentfilter.set(filter",{"_index":1217,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.downloadblob(content",{"_index":1532,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.editcancelled.emit",{"_index":858,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.editingtaskid",{"_index":850,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.editor",{"_index":1414,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":1489,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":1444,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":1452,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.filteredtasks",{"_index":1218,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.formbuilder.group",{"_index":859,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.generatereadme",{"_index":1527,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":1449,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.handlebarsinstance",{"_index":607,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":665,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":616,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":628,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":659,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":653,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":647,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":632,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":625,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializeeditor",{"_index":404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializeform",{"_index":847,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.initializehandlebars",{"_index":605,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.initializesampledata",{"_index":1345,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.iseditmode",{"_index":849,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.isloading",{"_index":869,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["this.lastsaved",{"_index":461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessionconfig",{"_index":403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.markformgrouptouched",{"_index":887,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.onchangecallback",{"_index":1445,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":1446,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.previewframe.nativeelement.src",{"_index":476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.registerhandlebarslanguage",{"_index":1448,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":613,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.resetform",{"_index":857,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.save_delay",{"_index":462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scrolltoform",{"_index":1245,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.selectedfile",{"_index":433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showconfigpanel",{"_index":473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.task().completed",{"_index":1036,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task().duedate",{"_index":1035,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task().id",{"_index":1018,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task().title",{"_index":1030,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskcreated.emit(newtask",{"_index":884,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskdeleted.emit(this.task().id",{"_index":1033,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskedit.emit(this.task",{"_index":1022,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskform",{"_index":846,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.get(controlname",{"_index":895,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.get(fieldname",{"_index":864,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.get(key",{"_index":892,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.markaspristine",{"_index":889,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.markasuntouched",{"_index":890,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.patchvalue",{"_index":852,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.reset",{"_index":888,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.valid",{"_index":868,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.value",{"_index":871,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskformref",{"_index":1243,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.clearalltasks",{"_index":1263,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.completedtaskscount",{"_index":1221,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.createtask(taskrequest",{"_index":883,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskservice.deletetask(this.task().id",{"_index":1032,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskservice.tasks",{"_index":1198,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.toggletaskcompletion",{"_index":1017,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskservice.totaltaskscount",{"_index":1220,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.updatetask(this.editingtaskid",{"_index":878,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.tasktoggled.emit(updatedtask",{"_index":1019,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.taskupdated.emit(updatedtask",{"_index":879,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.templates",{"_index":428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.updatetask(id",{"_index":1385,"title":{},"body":{"injectables/TaskService.html":{}}}],["through",{"_index":1070,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["throw",{"_index":422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["timeout",{"_index":456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tips",{"_index":1557,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["tocado",{"_index":795,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["tocados",{"_index":801,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["toda",{"_index":709,"title":{},"body":{"interfaces/Task.html":{}}}],["todas",{"_index":1099,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["todo",{"_index":486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["todos",{"_index":799,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["toggle",{"_index":262,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["toggleconfigpanel",{"_index":472,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggletaskcompletion",{"_index":1298,"title":{},"body":{"injectables/TaskService.html":{}}}],["toggletaskcompletion(id",{"_index":1312,"title":{},"body":{"injectables/TaskService.html":{}}}],["toggling",{"_index":1020,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["token",{"_index":1466,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":1465,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["toolbar",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":988,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["top",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":1219,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["totaltaskscount",{"_index":1294,"title":{},"body":{"injectables/TaskService.html":{}}}],["trabajando",{"_index":1228,"title":{},"body":{"components/TaskListComponent.html":{}}}],["trackbyname(index",{"_index":534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["trackbytaskid",{"_index":1129,"title":{},"body":{"components/TaskListComponent.html":{}}}],["trackbytaskid(index",{"_index":1185,"title":{},"body":{"components/TaskListComponent.html":{}}}],["transform",{"_index":332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["transition",{"_index":311,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["translatey",{"_index":1057,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["translation",{"_index":635,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":637,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":645,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":357,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["trigger",{"_index":520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["true",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["ts",{"_index":1457,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":1551,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["tslib",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1233,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tus",{"_index":1230,"title":{},"body":{"components/TaskListComponent.html":{}}}],["type",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UpdateTaskRequest.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1458,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["técnica",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["título",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["ui",{"_index":291,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["un",{"_index":714,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["una",{"_index":542,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["undefined",{"_index":565,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["underline",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["undo",{"_index":1053,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["undone",{"_index":485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unless",{"_index":624,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["up",{"_index":442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":1048,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["updateconfig",{"_index":465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updatedat",{"_index":575,"title":{},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{}}}],["updatedtask",{"_index":877,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskService.html":{}}}],["updatedtasks",{"_index":1365,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatedtasks[taskindex",{"_index":1375,"title":{},"body":{"injectables/TaskService.html":{}}}],["updaterequest",{"_index":872,"title":{},"body":{"components/TaskFormComponent.html":{},"injectables/TaskService.html":{}}}],["updatetask",{"_index":1299,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(id",{"_index":1315,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskrequest",{"_index":578,"title":{"interfaces/UpdateTaskRequest.html":{}},"body":{"interfaces/CreateTaskRequest.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskRequest.html":{},"coverage.html":{}}}],["updating",{"_index":471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["uppercase",{"_index":333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["url.createobjecturl(zipblob",{"_index":522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["usado",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":1545,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["usando",{"_index":807,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["use",{"_index":1025,"title":{},"body":{"components/TaskItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["used",{"_index":612,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["utiliza",{"_index":1282,"title":{},"body":{"injectables/TaskService.html":{}}}],["utilizados",{"_index":708,"title":{},"body":{"interfaces/Task.html":{}}}],["vacío",{"_index":1145,"title":{},"body":{"components/TaskListComponent.html":{}}}],["validación",{"_index":718,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators",{"_index":832,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.maxlength(100",{"_index":862,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.maxlength(500",{"_index":863,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.minlength(3",{"_index":861,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.required",{"_index":860,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["value",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateTaskRequest.html":{},"injectables/HbsRenderService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":651,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["values",{"_index":483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["var",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["variable",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1636,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vencida",{"_index":991,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["vencimiento",{"_index":911,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["ver",{"_index":1277,"title":{},"body":{"components/TaskListComponent.html":{}}}],["verificar",{"_index":789,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["version",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"properties.html":{}}}],["versión",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["vertical",{"_index":1430,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["viewchild",{"_index":226,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskListComponent.html":{},"interfaces/Template.html":{}}}],["viewchild('editorcontainer",{"_index":372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild.required(taskformcomponent",{"_index":1205,"title":{},"body":{"components/TaskListComponent.html":{}}}],["visible",{"_index":688,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":1570,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visualización",{"_index":803,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["void",{"_index":453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":1418,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w",{"_index":1481,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w+)(\\s*=\\s",{"_index":1477,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":1047,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["weight",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["welcome",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":687,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["white",{"_index":342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["width",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Template.html":{}}}],["window.settimeout(async",{"_index":459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1574,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1576,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["word",{"_index":1069,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["wordbasedsuggestions",{"_index":1442,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":1425,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wrap",{"_index":667,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/TaskItemComponent.html":{}}}],["wrapper",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{}}}],["writablesignal",{"_index":1216,"title":{},"body":{"components/TaskListComponent.html":{}}}],["x",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":1236,"title":{},"body":{"components/TaskListComponent.html":{}}}],["yyyy",{"_index":1045,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["z",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["zip",{"_index":234,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":1528,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":1523,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":1530,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":508,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":233,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["zipservice",{"_index":395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1499,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Principal de la Aplicación\nComponente raíz de la aplicación Task Manager. Proporciona el layout principal\ny contiene el componente de lista de tareas. Incluye toolbar con branding\ny navegación básica.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbarModule\n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                                TaskListComponent\n                \n            \n\n\n            \n                styles\n                \n      .app-container {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        background-color: #fafafa;\n      }\n\n      /* Toolbar */\n      .main-toolbar {\n        box-shadow: 0 2px 8px rgba(80, 56, 218, 0.1);\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n      }\n\n      .toolbar-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      .brand-section {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .brand-icon {\n        font-size: 1.5rem;\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      .brand-title {\n        font-size: 1.2rem;\n        font-weight: 500;\n        letter-spacing: 0.5px;\n      }\n\n      .toolbar-actions {\n        display: flex;\n        gap: 8px;\n      }\n\n      /* Contenido principal */\n      .main-content {\n        flex: 1;\n        overflow-x: hidden;\n      }\n\n      .content-wrapper {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      /* Footer */\n      .app-footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #e0e0e0;\n        padding: 20px 16px;\n        text-align: center;\n        color: #666;\n      }\n\n      .footer-content {\n        max-width: 1200px;\n        margin: 0 auto;\n      }\n\n      .footer-content p {\n        margin: 4px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        font-size: 0.9rem;\n      }\n\n      .footer-content mat-icon {\n        font-size: 1rem;\n        width: 1rem;\n        height: 1rem;\n      }\n\n      .version-info a {\n        color: #1976d2;\n        text-decoration: none;\n      }\n\n      .version-info a:hover {\n        text-decoration: underline;\n      }\n\n      /* Responsive */\n      @media (max-width: 768px) {\n        .toolbar-content {\n          padding: 0 8px;\n        }\n\n        .brand-title {\n          font-size: 1rem;\n        }\n\n        .welcome-section {\n          padding: 30px 16px;\n          margin: 16px -16px;\n        }\n\n        .welcome-title {\n          font-size: 1.8rem;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .welcome-subtitle {\n          font-size: 1rem;\n        }\n\n        .content-wrapper {\n          padding: 0 8px;\n        }\n\n        .footer-content p {\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .welcome-title {\n          font-size: 1.5rem;\n        }\n\n        .toolbar-actions {\n          gap: 4px;\n        }\n      }\n    \n            \n\n            \n                template\n                \n  \n  \n    \n      \n        assignment\n        {{ applicationTitle }}\n      \n    \n  \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n    \n      \n        code\n        Desarrollado con Angular 19 + Material Design\n      \n      \n        Versión {{ applicationVersion }} |\n        Angular |\n        Material\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                applicationTitle\n                            \n                            \n                                    Readonly\n                                applicationVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        applicationTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Task Manager'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:216\n                        \n                    \n\n            \n                \n                    Título de la aplicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        applicationVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Prueba técnica Angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:222\n                        \n                    \n\n            \n                \n                    Versión de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TaskListComponent } from './components/task-list/task-list.component';\n\n/**\n * Componente Principal de la Aplicación\n *\n * Componente raíz de la aplicación Task Manager. Proporciona el layout principal\n * y contiene el componente de lista de tareas. Incluye toolbar con branding\n * y navegación básica.\n *\n * @component AppComponent\n * @author osmar lópez\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    TaskListComponent,\n  ],\n  template: `\n    \n      \n      \n        \n          \n            assignment\n            {{ applicationTitle }}\n          \n        \n      \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n        \n          \n            code\n            Desarrollado con Angular 19 + Material Design\n          \n          \n            Versión {{ applicationVersion }} |\n            Angular |\n            Material\n          \n        \n      \n    \n  `,\n  styles: [\n    `\n      .app-container {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        background-color: #fafafa;\n      }\n\n      /* Toolbar */\n      .main-toolbar {\n        box-shadow: 0 2px 8px rgba(80, 56, 218, 0.1);\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n      }\n\n      .toolbar-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      .brand-section {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .brand-icon {\n        font-size: 1.5rem;\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      .brand-title {\n        font-size: 1.2rem;\n        font-weight: 500;\n        letter-spacing: 0.5px;\n      }\n\n      .toolbar-actions {\n        display: flex;\n        gap: 8px;\n      }\n\n      /* Contenido principal */\n      .main-content {\n        flex: 1;\n        overflow-x: hidden;\n      }\n\n      .content-wrapper {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      /* Footer */\n      .app-footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #e0e0e0;\n        padding: 20px 16px;\n        text-align: center;\n        color: #666;\n      }\n\n      .footer-content {\n        max-width: 1200px;\n        margin: 0 auto;\n      }\n\n      .footer-content p {\n        margin: 4px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        font-size: 0.9rem;\n      }\n\n      .footer-content mat-icon {\n        font-size: 1rem;\n        width: 1rem;\n        height: 1rem;\n      }\n\n      .version-info a {\n        color: #1976d2;\n        text-decoration: none;\n      }\n\n      .version-info a:hover {\n        text-decoration: underline;\n      }\n\n      /* Responsive */\n      @media (max-width: 768px) {\n        .toolbar-content {\n          padding: 0 8px;\n        }\n\n        .brand-title {\n          font-size: 1rem;\n        }\n\n        .welcome-section {\n          padding: 30px 16px;\n          margin: 16px -16px;\n        }\n\n        .welcome-title {\n          font-size: 1.8rem;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .welcome-subtitle {\n          font-size: 1rem;\n        }\n\n        .content-wrapper {\n          padding: 0 8px;\n        }\n\n        .footer-content p {\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .welcome-title {\n          font-size: 1.5rem;\n        }\n\n        .toolbar-actions {\n          gap: 4px;\n        }\n      }\n    `,\n  ],\n})\nexport class AppComponent {\n  /**\n   * Título de la aplicación\n   * @type {string}\n   */\n  readonly applicationTitle = 'Task Manager';\n\n  /**\n   * Versión de la aplicación\n   * @type {string}\n   */\n  readonly applicationVersion = 'Prueba técnica Angular';\n}\n\n    \n\n\n    \n            \n      .app-container {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        background-color: #fafafa;\n      }\n\n      /* Toolbar */\n      .main-toolbar {\n        box-shadow: 0 2px 8px rgba(80, 56, 218, 0.1);\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n      }\n\n      .toolbar-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      .brand-section {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .brand-icon {\n        font-size: 1.5rem;\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      .brand-title {\n        font-size: 1.2rem;\n        font-weight: 500;\n        letter-spacing: 0.5px;\n      }\n\n      .toolbar-actions {\n        display: flex;\n        gap: 8px;\n      }\n\n      /* Contenido principal */\n      .main-content {\n        flex: 1;\n        overflow-x: hidden;\n      }\n\n      .content-wrapper {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 0 16px;\n      }\n\n      /* Footer */\n      .app-footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #e0e0e0;\n        padding: 20px 16px;\n        text-align: center;\n        color: #666;\n      }\n\n      .footer-content {\n        max-width: 1200px;\n        margin: 0 auto;\n      }\n\n      .footer-content p {\n        margin: 4px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        font-size: 0.9rem;\n      }\n\n      .footer-content mat-icon {\n        font-size: 1rem;\n        width: 1rem;\n        height: 1rem;\n      }\n\n      .version-info a {\n        color: #1976d2;\n        text-decoration: none;\n      }\n\n      .version-info a:hover {\n        text-decoration: underline;\n      }\n\n      /* Responsive */\n      @media (max-width: 768px) {\n        .toolbar-content {\n          padding: 0 8px;\n        }\n\n        .brand-title {\n          font-size: 1rem;\n        }\n\n        .welcome-section {\n          padding: 30px 16px;\n          margin: 16px -16px;\n        }\n\n        .welcome-title {\n          font-size: 1.8rem;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .welcome-subtitle {\n          font-size: 1rem;\n        }\n\n        .content-wrapper {\n          padding: 0 8px;\n        }\n\n        .footer-content p {\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .welcome-title {\n          font-size: 1.5rem;\n        }\n\n        .toolbar-actions {\n          gap: 4px;\n        }\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      assignment        {{ applicationTitle }}                                                            code        Desarrollado con Angular 19 + Material Design                    Versión {{ applicationVersion }} |        Angular |        Material            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTaskRequest.html":{"url":"interfaces/CreateTaskRequest.html","title":"interface - CreateTaskRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTaskRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripción opcional para la nueva tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Fecha límite opcional para la nueva tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"low\" | \"medium\" | \"high\"\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'medium'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     \"low\" | \"medium\" | \"high\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Nivel de prioridad para la nueva tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la nueva tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  /**\n   * Identificador único de la tarea\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Título de la tarea (requerido)\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción detallada opcional de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Indica si la tarea está completada\n   * @type {boolean}\n   * @default false\n   */\n  completed: boolean;\n\n  /**\n   * Nivel de prioridad de la tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha de creación de la tarea\n   * @type {Date}\n   */\n  createdAt: Date;\n\n  /**\n   * Fecha de última actualización de la tarea\n   * @type {Date}\n   */\n  updatedAt: Date;\n\n  /**\n   * Fecha límite opcional de la tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n *\n * @interface CreateTaskRequest\n */\nexport interface CreateTaskRequest {\n  /**\n   * Título de la nueva tarea\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción opcional para la nueva tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Nivel de prioridad para la nueva tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite opcional para la nueva tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para actualizar una tarea existente\n *\n * @interface UpdateTaskRequest\n */\nexport interface UpdateTaskRequest {\n  /**\n   * Título actualizado de la tarea\n   * @type {string | undefined}\n   */\n  title?: string;\n\n  /**\n   * Descripción actualizada de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Estado de finalización actualizado\n   * @type {boolean | undefined}\n   */\n  completed?: boolean;\n\n  /**\n   * Nivel de prioridad actualizado\n   * @type {'low' | 'medium' | 'high' | undefined}\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite actualizada\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz del Modelo de Tarea\nRepresenta una entidad de tarea en la aplicación Task Manager.\nEsta interfaz define la estructura para los objetos de tarea utilizados en toda la aplicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indica si la tarea está completada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de creación de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripción detallada opcional de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Fecha límite opcional de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador único de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"low\" | \"medium\" | \"high\"\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'medium'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     \"low\" | \"medium\" | \"high\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nivel de prioridad de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la tarea (requerido)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de última actualización de la tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  /**\n   * Identificador único de la tarea\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Título de la tarea (requerido)\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción detallada opcional de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Indica si la tarea está completada\n   * @type {boolean}\n   * @default false\n   */\n  completed: boolean;\n\n  /**\n   * Nivel de prioridad de la tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha de creación de la tarea\n   * @type {Date}\n   */\n  createdAt: Date;\n\n  /**\n   * Fecha de última actualización de la tarea\n   * @type {Date}\n   */\n  updatedAt: Date;\n\n  /**\n   * Fecha límite opcional de la tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n *\n * @interface CreateTaskRequest\n */\nexport interface CreateTaskRequest {\n  /**\n   * Título de la nueva tarea\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción opcional para la nueva tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Nivel de prioridad para la nueva tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite opcional para la nueva tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para actualizar una tarea existente\n *\n * @interface UpdateTaskRequest\n */\nexport interface UpdateTaskRequest {\n  /**\n   * Título actualizado de la tarea\n   * @type {string | undefined}\n   */\n  title?: string;\n\n  /**\n   * Descripción actualizada de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Estado de finalización actualizado\n   * @type {boolean | undefined}\n   */\n  completed?: boolean;\n\n  /**\n   * Nivel de prioridad actualizado\n   * @type {'low' | 'medium' | 'high' | undefined}\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite actualizada\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskFormComponent.html":{"url":"components/TaskFormComponent.html","title":"component - TaskFormComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TaskFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-form/task-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Formulario de Tarea\nUn componente standalone para crear nuevas tareas. Este componente proporciona un formulario reactivo\ncon validación para la creación de tareas incluyendo título, descripción, prioridad y fecha límite.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgIf\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatSelectModule\n                            MatDatepickerModule\n                            MatNativeDateModule\n                            MatCardModule\n                            MatIconModule\n                \n            \n\n            \n                styleUrls\n                ./task-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editingTaskId\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isEditMode\n                            \n                            \n                                isLoading\n                            \n                            \n                                taskForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEdit\n                            \n                            \n                                getFormControl\n                            \n                            \n                                initializeEditMode\n                            \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                    Private\n                                markFormGroupTouched\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                editCancelled\n                            \n                            \n                                taskCreated\n                            \n                            \n                                taskUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/task-form/task-form.component.ts:104\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        editCancelled\n                    \n                \n                \n                    \n                        Type :         void\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-form/task-form.component.ts:80\n                            \n                        \n                \n                    \n                        Emisor de evento de salida para cuando se cancela la edición\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        taskCreated\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-form/task-form.component.ts:66\n                            \n                        \n                \n                    \n                        Emisor de evento de salida para cuando una tarea se crea exitosamente\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        taskUpdated\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-form/task-form.component.ts:73\n                            \n                        \n                \n                    \n                        Emisor de evento de salida para cuando una tarea se actualiza exitosamente\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEdit\n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Salir del modo de edición y reiniciar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormControl\n                        \n                    \n                \n            \n            \n                \ngetFormControl(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:264\n                        \n                    \n\n\n            \n                \n                        Obtener control del formulario para acceso desde el template\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del control del formulario\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                El control del formulario o null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditMode\n                        \n                    \n                \n            \n            \n                \ninitializeEditMode(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Inicializar el formulario para modo de edición con datos de tarea existente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea a editar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Inicializar el formulario reactivo con reglas de validación\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                El grupo de formulario inicializado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Verificar si un campo del formulario es inválido y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del campo del formulario a verificar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markFormGroupTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:251\n                        \n                    \n\n\n            \n                \n                        Marcar todos los campos del formulario como tocados para activar la visualización de validación\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Manejar el envío del formulario\nCrea una nueva tarea o actualiza una existente usando los datos del formulario.\nIncluye validación del formulario y manejo del estado de carga.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se completa la operación\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:233\n                        \n                    \n\n\n            \n                \n                        Reiniciar el formulario a su estado inicial\nLimpia todos los campos del formulario y reinicia el estado de validación.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editingTaskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:98\n                        \n                    \n\n            \n                \n                    ID de la tarea en edición (si aplica)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:53\n                        \n                    \n\n            \n                \n                    Formulario reactivo para creación de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:92\n                        \n                    \n\n            \n                \n                    Indicador de modo de edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:86\n                        \n                    \n\n            \n                \n                    Indicador de estado de carga\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:104\n                        \n                    \n\n            \n                \n                    Grupo de formulario reactivo para creación/edición de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:59\n                        \n                    \n\n            \n                \n                    Servicio de tareas para crear tareas\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, output } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CreateTaskRequest, Task, UpdateTaskRequest } from '../../models/task.model';\nimport { TaskService } from '../../services/task.service';\n\n/**\n * Componente Formulario de Tarea\n *\n * Un componente standalone para crear nuevas tareas. Este componente proporciona un formulario reactivo\n * con validación para la creación de tareas incluyendo título, descripción, prioridad y fecha límite.\n *\n * @component TaskFormComponent\n * @standalone\n *\n */\n@Component({\n  selector: 'app-task-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgIf,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatIconModule,\n  ],\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n})\nexport class TaskFormComponent {\n  /**\n   * Formulario reactivo para creación de tareas\n   * @private\n   */\n  private readonly formBuilder = inject(FormBuilder);\n\n  /**\n   * Servicio de tareas para crear tareas\n   * @private\n   */\n  private readonly taskService = inject(TaskService);\n\n  /**\n   * Emisor de evento de salida para cuando una tarea se crea exitosamente\n   * @event taskCreated\n   * @type {EventEmitter}\n   */\n  readonly taskCreated = output();\n\n  /**\n   * Emisor de evento de salida para cuando una tarea se actualiza exitosamente\n   * @event taskUpdated\n   * @type {EventEmitter}\n   */\n  readonly taskUpdated = output();\n\n  /**\n   * Emisor de evento de salida para cuando se cancela la edición\n   * @event editCancelled\n   * @type {EventEmitter}\n   */\n  readonly editCancelled = output();\n\n  /**\n   * Indicador de estado de carga\n   * @type {boolean}\n   */\n  isLoading = false;\n\n  /**\n   * Indicador de modo de edición\n   * @type {boolean}\n   */\n  isEditMode = false;\n\n  /**\n   * ID de la tarea en edición (si aplica)\n   * @type {string | null}\n   */\n  editingTaskId: string | null = null;\n\n  /**\n   * Grupo de formulario reactivo para creación/edición de tareas\n   * @type {FormGroup}\n   */\n  taskForm: FormGroup;\n\n  constructor() {\n    this.taskForm = this.initializeForm();\n  }\n\n  /**\n   * Inicializar el formulario para modo de edición con datos de tarea existente\n   *\n   * @param {Task} task - La tarea a editar\n   * @returns {void}\n   */\n  initializeEditMode(task: Task): void {\n    this.isEditMode = true;\n    this.editingTaskId = task.id;\n    \n    this.taskForm.patchValue({\n      title: task.title,\n      description: task.description || '',\n      priority: task.priority,\n      dueDate: task.dueDate || null\n    });\n  }\n\n  /**\n   * Salir del modo de edición y reiniciar el formulario\n   *\n   * @returns {void}\n   */\n  cancelEdit(): void {\n    this.isEditMode = false;\n    this.editingTaskId = null;\n    this.resetForm();\n    this.editCancelled.emit();\n  }\n\n  /**\n   * Inicializar el formulario reactivo con reglas de validación\n   *\n   * @private\n   * @returns {FormGroup} El grupo de formulario inicializado\n   */\n  private initializeForm(): FormGroup {\n    return this.formBuilder.group({\n      title: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n      description: ['', [Validators.maxLength(500)]],\n      priority: ['medium', Validators.required],\n      dueDate: [null],\n    });\n  }\n\n  /**\n   * Verificar si un campo del formulario es inválido y ha sido tocado\n   *\n   * @param {string} fieldName - El nombre del campo del formulario a verificar\n   * @returns {boolean} True si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.taskForm.get(fieldName);\n    return !!(field && field.invalid && (field.dirty || field.touched));\n  }\n\n  /**\n   * Manejar el envío del formulario\n   *\n   * Crea una nueva tarea o actualiza una existente usando los datos del formulario.\n   * Incluye validación del formulario y manejo del estado de carga.\n   *\n   * @returns {Promise} Promise que se resuelve cuando se completa la operación\n   */\n  async onSubmit(): Promise {\n    if (this.taskForm.valid && !this.isLoading) {\n      try {\n        this.isLoading = true;\n\n        const formValue = this.taskForm.value;\n\n        if (this.isEditMode && this.editingTaskId) {\n          // Modo edición: Actualizar tarea existente\n          const updateRequest: UpdateTaskRequest = {\n            title: formValue.title.trim(),\n            description: formValue.description?.trim() || undefined,\n            priority: formValue.priority,\n            dueDate: formValue.dueDate || undefined,\n          };\n\n          const updatedTask = await this.taskService.updateTask(this.editingTaskId, updateRequest);\n\n          if (updatedTask) {\n            this.taskUpdated.emit(updatedTask);\n            this.cancelEdit();\n          }\n        } else {\n          // Modo creación: Crear nueva tarea\n          const taskRequest: CreateTaskRequest = {\n            title: formValue.title.trim(),\n            description: formValue.description?.trim() || undefined,\n            priority: formValue.priority,\n            dueDate: formValue.dueDate || undefined,\n          };\n\n          const newTask = await this.taskService.createTask(taskRequest);\n          this.taskCreated.emit(newTask);\n          this.resetForm();\n        }\n      } catch (error) {\n        console.error('Error processing task:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n\n  /**\n   * Reiniciar el formulario a su estado inicial\n   *\n   * Limpia todos los campos del formulario y reinicia el estado de validación.\n   *\n   * @returns {void}\n   */\n  resetForm(): void {\n    this.taskForm.reset({\n      title: '',\n      description: '',\n      priority: 'medium',\n      dueDate: null,\n    });\n\n    this.taskForm.markAsPristine();\n    this.taskForm.markAsUntouched();\n  }\n\n  /**\n   * Marcar todos los campos del formulario como tocados para activar la visualización de validación\n   *\n   * @private\n   * @returns {void}\n   */\n  private markFormGroupTouched(): void {\n    Object.keys(this.taskForm.controls).forEach((key) => {\n      const control = this.taskForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  /**\n   * Obtener control del formulario para acceso desde el template\n   *\n   * @param {string} controlName - Nombre del control del formulario\n   * @returns {AbstractControl | null} El control del formulario o null\n   */\n  getFormControl(controlName: string) {\n    return this.taskForm.get(controlName);\n  }\n}\n    \n\n    \n        \n  \n    \n      {{ isEditMode ? 'edit' : 'add_task' }}\n      {{ isEditMode ? 'Editar Tarea' : 'Crear Nueva Tarea' }}\n    \n  \n\n  \n    \n      \n      \n        Título de la Tarea\n        \n        title\n        \n          El título de la tarea es obligatorio\n        \n        \n          El título debe tener al menos 3 caracteres\n        \n      \n\n      \n      \n        Descripción\n        \n        description\n      \n\n      \n      \n        Prioridad\n        \n          \n            keyboard_arrow_down\n            Prioridad Baja\n          \n          \n            remove\n            Prioridad Media\n          \n          \n            keyboard_arrow_up\n            Prioridad Alta\n          \n        \n        flag\n      \n\n      \n      \n        Fecha de Vencimiento (Opcional)\n        \n        event\n        \n      \n\n      \n      \n        \n          {{ isEditMode ? 'save' : 'add' }}\n          {{ isLoading ? (isEditMode ? 'Guardando...' : 'Creando...') : (isEditMode ? 'Guardar Cambios' : 'Crear Tarea') }}\n        \n\n        \n          clear\n          Limpiar Formulario\n        \n\n        \n          cancel\n          Cancelar Edición\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-form.component.scss\n                \n                .title-custom {\n  color: #ffffff;\n}\n\n.task-form-card {\n  max-width: 600px;\n  margin: 20px auto;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.task-form {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 16px 0;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.form-actions {\n  display: flex;\n  gap: 16px;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n\n.submit-btn {\n  min-width: 140px;\n}\n\n.reset-btn {\n  min-width: 120px;\n}\n\n.error {\n  border-color: #f44336 !important;\n}\n\n.priority-icon {\n  margin-right: 8px;\n}\n\n.priority-icon.low {\n  color: #4caf50;\n}\n\n.priority-icon.medium {\n  color: #ff9800;\n}\n\n.priority-icon.high {\n  color: #f44336;\n}\n\nmat-card-header {\n  margin-bottom: 16px;\n}\n\nmat-card-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n@media (max-width: 768px) {\n  .task-form-card {\n    margin: 10px;\n    max-width: none;\n  }\n\n  .form-actions {\n    flex-direction: column;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ isEditMode ? \\'edit\\' : \\'add_task\\' }}      {{ isEditMode ? \\'Editar Tarea\\' : \\'Crear Nueva Tarea\\' }}                                Título de la Tarea                title                  El título de la tarea es obligatorio                          El título debe tener al menos 3 caracteres                                  Descripción                description                          Prioridad                              keyboard_arrow_down            Prioridad Baja                                remove            Prioridad Media                                keyboard_arrow_up            Prioridad Alta                          flag                          Fecha de Vencimiento (Opcional)                event                                            {{ isEditMode ? \\'save\\' : \\'add\\' }}          {{ isLoading ? (isEditMode ? \\'Guardando...\\' : \\'Creando...\\') : (isEditMode ? \\'Guardar Cambios\\' : \\'Crear Tarea\\') }}                          clear          Limpiar Formulario                          cancel          Cancelar Edición                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskItemComponent.html":{"url":"components/TaskItemComponent.html","title":"component - TaskItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TaskItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-item/task-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Item de Tarea\nUn componente standalone que muestra una tarea individual con características interactivas.\nSoporta alternar completado de tarea, edición y eliminación con estilo Material Design.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                            NgClass\n                            NgIf\n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatCheckboxModule\n                            MatChipsModule\n                            MatTooltipModule\n                            MatMenuModule\n                            MatDividerModule\n                \n            \n\n            \n                styleUrls\n                ./task-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPriorityIcon\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                getPriorityTooltip\n                            \n                            \n                                isOverdue\n                            \n                            \n                                    Async\n                                onDeleteTask\n                            \n                            \n                                onEditTask\n                            \n                            \n                                    Async\n                                onToggleComplete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskDeleted\n                            \n                            \n                                taskEdit\n                            \n                            \n                                taskToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:53\n                            \n                        \n                \n                    \n                        Entrada: Datos de la tarea a mostrar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        taskDeleted\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:67\n                            \n                        \n                \n                    \n                        Salida: Se emite cuando se elimina la tarea\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        taskEdit\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:74\n                            \n                        \n                \n                    \n                        Salida: Se emite cuando se solicita editar la tarea\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        taskToggled\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-item/task-item.component.ts:60\n                            \n                        \n                \n                    \n                        Salida: Se emite cuando se alterna el completado de la tarea\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityIcon\n                        \n                    \n                \n            \n            \n                \ngetPriorityIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Obtener icono de prioridad basado en la prioridad de la tarea\n``\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre del icono Material para el nivel de prioridad\n``\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityText\n                        \n                    \n                \n            \n            \n                \ngetPriorityText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Obtener texto de prioridad en español\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Texto de prioridad en español\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityTooltip\n                        \n                    \n                \n            \n            \n                \ngetPriorityTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Obtener texto del tooltip de prioridad\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Tooltip descriptivo para el nivel de prioridad\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverdue\n                        \n                    \n                \n            \n            \n                \nisOverdue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Verificar si la tarea está vencida\nCompara la fecha límite de la tarea con la fecha actual para determinar si está vencida.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si la tarea está vencida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onDeleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Eliminar la tarea actual\nElimina la tarea y emite el evento taskDeleted con el ID de la tarea.\nIncluye confirmación y manejo de errores.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditTask\n                        \n                    \n                \n            \n            \n                \nonEditTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Solicitar edición de la tarea actual\nEmite el evento taskEdit con la tarea a editar.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onToggleComplete\n                        \n                    \n                \n            \n            \n                \n                        \n                    onToggleComplete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-item/task-item.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Alternar el estado de completado de la tarea\nActualiza el estado de completado de la tarea y emite el evento taskToggled.\nManeja el estado de carga y escenarios de error.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se completa el alternado\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-item/task-item.component.ts:80\n                        \n                    \n\n            \n                \n                    Estado de carga para operaciones asíncronas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-item/task-item.component.ts:47\n                        \n                    \n\n            \n                \n                    Servicio de tareas para operaciones de tareas\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, output, inject } from '@angular/core';\nimport { DatePipe, NgClass, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Task } from '../../models/task.model';\nimport { TaskService } from '../../services/task.service';\n\n/**\n * Componente Item de Tarea\n *\n * Un componente standalone que muestra una tarea individual con características interactivas.\n * Soporta alternar completado de tarea, edición y eliminación con estilo Material Design.\n *\n * @component TaskItemComponent\n * @standalone\n */\n@Component({\n  selector: 'app-task-item',\n  standalone: true,\n  imports: [\n    DatePipe,\n    NgClass,\n    NgIf,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.scss'],\n})\nexport class TaskItemComponent {\n  /**\n   * Servicio de tareas para operaciones de tareas\n   * @private\n   */\n  private readonly taskService = inject(TaskService);\n\n  /**\n   * Entrada: Datos de la tarea a mostrar\n   * @type {InputSignal}\n   */\n  readonly task = input.required();\n\n  /**\n   * Salida: Se emite cuando se alterna el completado de la tarea\n   * @event taskToggled\n   * @type {OutputEmitterRef}\n   */\n  readonly taskToggled = output();\n\n  /**\n   * Salida: Se emite cuando se elimina la tarea\n   * @event taskDeleted\n   * @type {OutputEmitterRef}\n   */\n  readonly taskDeleted = output();\n\n  /**\n   * Salida: Se emite cuando se solicita editar la tarea\n   * @event taskEdit\n   * @type {OutputEmitterRef}\n   */\n  readonly taskEdit = output();\n\n  /**\n   * Estado de carga para operaciones asíncronas\n   * @type {boolean}\n   */\n  isLoading = false;\n\n  /**\n   * Alternar el estado de completado de la tarea\n   *\n   * Actualiza el estado de completado de la tarea y emite el evento taskToggled.\n   * Maneja el estado de carga y escenarios de error.\n   *\n   * @returns {Promise} Promise que se resuelve cuando se completa el alternado\n   */\n  async onToggleComplete(): Promise {\n    if (this.isLoading) return;\n\n    try {\n      this.isLoading = true;\n      const updatedTask = await this.taskService.toggleTaskCompletion(\n        this.task().id\n      );\n\n      if (updatedTask) {\n        this.taskToggled.emit(updatedTask);\n      }\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Solicitar edición de la tarea actual\n   *\n   * Emite el evento taskEdit con la tarea a editar.\n   *\n   * @returns {void}\n   */\n  onEditTask(): void {\n    this.taskEdit.emit(this.task());\n  }\n\n  /**\n   * Eliminar la tarea actual\n   *\n   * Elimina la tarea y emite el evento taskDeleted con el ID de la tarea.\n   * Incluye confirmación y manejo de errores.\n   */\n  async onDeleteTask(): Promise {\n    if (this.isLoading) return;\n\n    // Simple confirmation (in a real app, use a proper dialog)\n    if (!confirm(`Are you sure you want to delete \"${this.task().title}\"?`)) {\n      return;\n    }\n\n    try {\n      this.isLoading = true;\n      const deleted = await this.taskService.deleteTask(this.task().id);\n\n      if (deleted) {\n        this.taskDeleted.emit(this.task().id);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Verificar si la tarea está vencida\n   *\n   * Compara la fecha límite de la tarea con la fecha actual para determinar si está vencida.\n   *\n   * @returns {boolean} True si la tarea está vencida\n   */\n  isOverdue(): boolean {\n    if (!this.task().dueDate || this.task().completed) {\n      return false;\n    }\n\n    const now = new Date();\n    const dueDate = new Date(this.task().dueDate!);\n    return dueDate \n    \n\n    \n        \n  \n    \n    \n      \n    \n\n    \n    \n      \n        \n          {{ task().title }}\n        \n\n        \n        \n          \n            {{ getPriorityIcon() }}\n            {{ getPriorityText() }}\n          \n        \n      \n\n      \n      \n        {{ task().description }}\n      \n\n      \n      \n        \n          schedule\n          \n            Creada: {{ task().createdAt | date : \"MMM dd, yyyy\" }}\n          \n        \n\n        \n          event\n          \n            Fecha: {{ task().dueDate | date : \"MMM dd, yyyy\" }}\n          \n          \n            warning\n          \n        \n\n        \n          update\n          \n            Actualizado:\n            {{ task().updatedAt | date : \"MMM dd, yyyy HH:mm\" }}\n          \n        \n      \n    \n\n    \n    \n      \n        more_vert\n      \n\n      \n      \n        \n          {{ task().completed ? \"undo\" : \"check\" }}\n          {{\n            task().completed ? \"Marcar Incompleta\" : \"Marcar Completa\"\n          }}\n        \n\n        \n          edit\n          Editar Tarea\n        \n\n        \n\n        \n          delete\n          Eliminar Tarea\n        \n      \n\n      \n      \n        {{ task().completed ? \"undo\" : \"check\" }}\n      \n\n      \n        edit\n      \n\n      \n        delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-item.component.scss\n                \n                .task-item {\n  margin-bottom: 16px;\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.task-item:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transform: translateY(-2px);\n}\n\n.task-item.completed {\n  opacity: 0.8;\n  background-color: #f5f5f5;\n}\n\n.task-item.high-priority {\n  border-left-color: #f44336;\n}\n\n.task-item.medium-priority {\n  border-left-color: #ff9800;\n}\n\n.task-item.low-priority {\n  border-left-color: #4caf50;\n}\n\n.task-content {\n  display: flex;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 16px;\n}\n\n.task-checkbox {\n  flex-shrink: 0;\n  margin-top: 4px;\n}\n\n.task-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.task-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 8px;\n  gap: 16px;\n}\n\n.task-title {\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 500;\n  line-height: 1.4;\n  word-break: break-word;\n  color: #ffffff;\n}\n\n.completed-text {\n  text-decoration: line-through;\n  color: #000000;\n}\n\n.task-description {\n  margin: 0 0 12px 0;\n  color: #f0f0f0;\n  line-height: 1.5;\n  word-break: break-word;\n}\n\n.task-metadata {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  font-size: 0.85rem;\n  color: #e0e0e0;\n}\n\n.metadata-item {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.metadata-icon {\n  font-size: 16px;\n  width: 16px;\n  height: 16px;\n  color: #ffffff;\n}\n\n.metadata-text {\n  white-space: nowrap;\n}\n\n.due-date.overdue {\n  color: #f44336;\n  font-weight: 500;\n}\n\n.warning-icon {\n  color: #f44336;\n  font-size: 16px;\n  width: 16px;\n  height: 16px;\n}\n\n.task-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  flex-shrink: 0;\n}\n\n.task-actions button {\n  color: #ffffff;\n}\n\n.task-actions .mat-mdc-icon-button {\n  color: #ffffff;\n}\n\n.delete-action {\n  color: #f44336 !important;\n}\n\n.delete-action mat-icon {\n  color: #f44336 !important;\n}\n\n.priority-high {\n  background-color: #ef9a9a !important;\n  color: #212121 !important;\n}\n\n.priority-medium {\n  background-color: #ffcc80 !important;\n  color: #212121 !important;\n}\n\n.priority-low {\n  background-color: #a5d6a7 !important;\n  color: #212121 !important;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .task-content {\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .task-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .task-metadata {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .task-actions {\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n}\n\n/* Animation for completion state */\n.task-item.completed .task-title,\n.task-item.completed .task-description {\n  transition: all 0.3s ease;\n}\n\n/* Loading state */\n.task-item[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{ task().title }}                                              {{ getPriorityIcon() }}            {{ getPriorityText() }}                                            {{ task().description }}                                    schedule                      Creada: {{ task().createdAt | date : \"MMM dd, yyyy\" }}                                    event                      Fecha: {{ task().dueDate | date : \"MMM dd, yyyy\" }}                                warning                                    update                      Actualizado:            {{ task().updatedAt | date : \"MMM dd, yyyy HH:mm\" }}                                                  more_vert                                    {{ task().completed ? \"undo\" : \"check\" }}          {{            task().completed ? \"Marcar Incompleta\" : \"Marcar Completa\"          }}                          edit          Editar Tarea                                  delete          Eliminar Tarea                                  {{ task().completed ? \"undo\" : \"check\" }}                    edit                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-list/task-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Lista de Tareas\nComponente standalone que muestra y gestiona una lista de tareas con funcionalidades\nde filtrado, estadísticas y operaciones CRUD. Incluye formulario para crear nuevas tareas\ny maneja la visualización según diferentes filtros (todas, completadas, pendientes).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                            NgIf\n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatBadgeModule\n                            MatChipsModule\n                            MatButtonToggleModule\n                            MatProgressSpinnerModule\n                                TaskItemComponent\n                                TaskFormComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFilter\n                            \n                            \n                                    Readonly\n                                filteredTasks\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                taskFormRef\n                            \n                            \n                                    Readonly\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAllTasks\n                            \n                            \n                                getCompletionPercentage\n                            \n                            \n                                getCurrentFilter\n                            \n                            \n                                getEmptyStateIcon\n                            \n                            \n                                getEmptyStateMessage\n                            \n                            \n                                getEmptyStateTitle\n                            \n                            \n                                getFilteredTasks\n                            \n                            \n                                getFilterIcon\n                            \n                            \n                                getFilterTitle\n                            \n                            \n                                onEditCancelled\n                            \n                            \n                                onTaskCreated\n                            \n                            \n                                onTaskDeleted\n                            \n                            \n                                onTaskEdit\n                            \n                            \n                                onTaskToggled\n                            \n                            \n                                onTaskUpdated\n                            \n                            \n                                    Private\n                                scrollToForm\n                            \n                            \n                                setFilter\n                            \n                            \n                                trackByTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:304\n                        \n                    \n\n\n            \n                \n                        Limpia todas las tareas después de confirmación\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se limpian las tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCompletionPercentage\n                        \n                    \n                \n            \n            \n                \ngetCompletionPercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Calcula el porcentaje de completitud de las tareas\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                Porcentaje de tareas completadas (0-100)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentFilter\n                        \n                    \n                \n            \n            \n                \ngetCurrentFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Obtiene el filtro actual\n\n\n                        \n                            Returns :     \"all\" | \"pending\" | \"completed\"\n\n                        \n                            \n                                El filtro actualmente aplicado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmptyStateIcon\n                        \n                    \n                \n            \n            \n                \ngetEmptyStateIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Obtiene el icono para el estado vacío\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre del icono para mostrar cuando no hay tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmptyStateMessage\n                        \n                    \n                \n            \n            \n                \ngetEmptyStateMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje para el estado vacío\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje descriptivo cuando no hay tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmptyStateTitle\n                        \n                    \n                \n            \n            \n                \ngetEmptyStateTitle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Obtiene el título para el estado vacío\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Título descriptivo cuando no hay tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredTasks\n                        \n                    \n                \n            \n            \n                \ngetFilteredTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Obtiene las tareas filtradas según el filtro actual\n\n\n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                Array de tareas filtradas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilterIcon\n                        \n                    \n                \n            \n            \n                \ngetFilterIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Obtiene el icono correspondiente al filtro actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre del icono de Material Design\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilterTitle\n                        \n                    \n                \n            \n            \n                \ngetFilterTitle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Obtiene el título correspondiente al filtro actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Título descriptivo del filtro\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditCancelled\n                        \n                    \n                \n            \n            \n                \nonEditCancelled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:277\n                        \n                    \n\n\n            \n                \n                        Maneja la cancelación de la edición\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskCreated\n                        \n                    \n                \n            \n            \n                \nonTaskCreated(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:215\n                        \n                    \n\n\n            \n                \n                        Maneja la creación de una nueva tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea recién creada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskDeleted\n                        \n                    \n                \n            \n            \n                \nonTaskDeleted(taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID de la tarea eliminada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskEdit\n                        \n                    \n                \n            \n            \n                \nonTaskEdit(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:252\n                        \n                    \n\n\n            \n                \n                        Maneja la solicitud de edición de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea a editar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskToggled\n                        \n                    \n                \n            \n            \n                \nonTaskToggled(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Maneja el cambio de estado de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea que cambió de estado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskUpdated\n                        \n                    \n                \n            \n            \n                \nonTaskUpdated(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:267\n                        \n                    \n\n\n            \n                \n                        Maneja la actualización exitosa de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa tarea actualizada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scrollToForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Desplaza la página hacia el formulario de tareas\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(filter: \"all\" | \"pending\" | \"completed\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Establece un nuevo filtro para las tareas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        \"all\" | \"pending\" | \"completed\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl filtro a aplicar ('all', 'pending', 'completed')\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByTaskId\n                        \n                    \n                \n            \n            \n                \ntrackByTaskId(index: number, task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-list/task-list.component.ts:329\n                        \n                    \n\n\n            \n                \n                        Función de seguimiento para ngFor optimizada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nÍndice del elemento\n\n\n                                            \n                                        \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObjeto de tarea\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                ID único de la tarea\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('all')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:61\n                        \n                    \n\n            \n                \n                    Filtro actual aplicado a las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filter = this.currentFilter();\n    const tasks = this.taskService.tasks();\n\n    switch (filter) {\n      case 'completed':\n        return tasks.filter((task) => task.completed);\n      case 'pending':\n        return tasks.filter((task) => !task.completed);\n      default:\n        return tasks;\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:74\n                        \n                    \n\n            \n                \n                    Señal computada de tareas filtradas según el filtro actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:67\n                        \n                    \n\n            \n                \n                    Estado de carga\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taskFormRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild.required(TaskFormComponent)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:55\n                        \n                    \n\n            \n                \n                    Referencia al componente del formulario de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-list/task-list.component.ts:49\n                        \n                    \n\n            \n                \n                    Servicio de tareas inyectado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, signal, computed, viewChild } from '@angular/core';\nimport { NgFor, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TaskItemComponent } from '../task-item/task-item.component';\nimport { TaskFormComponent } from '../task-form/task-form.component';\nimport { Task } from '../../models/task.model';\nimport { TaskService } from '../../services/task.service';\n\n/**\n * Componente Lista de Tareas\n *\n * Componente standalone que muestra y gestiona una lista de tareas con funcionalidades\n * de filtrado, estadísticas y operaciones CRUD. Incluye formulario para crear nuevas tareas\n * y maneja la visualización según diferentes filtros (todas, completadas, pendientes).\n *\n * @component TaskListComponent\n * @standalone\n */\n@Component({\n  selector: 'app-task-list',\n  standalone: true,\n  imports: [\n    NgFor,\n    NgIf,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    MatProgressSpinnerModule,\n    TaskItemComponent,\n    TaskFormComponent,\n  ],\n  templateUrl: './task-list.component.html',\n  styleUrl: './task-list.component.scss',\n})\nexport class TaskListComponent {\n  /**\n   * Servicio de tareas inyectado\n   * @readonly\n   */\n  readonly taskService = inject(TaskService);\n\n  /**\n   * Referencia al componente del formulario de tareas\n   * @private\n   */\n  private readonly taskFormRef = viewChild.required(TaskFormComponent);\n\n  /**\n   * Filtro actual aplicado a las tareas\n   * @type {WritableSignal}\n   */\n  readonly currentFilter = signal('all');\n\n  /**\n   * Estado de carga\n   * @type {boolean}\n   */\n  isLoading = false;\n\n  /**\n   * Señal computada de tareas filtradas según el filtro actual\n   * @readonly\n   * @returns {Signal} Array de tareas filtradas\n   */\n  readonly filteredTasks = computed(() => {\n    const filter = this.currentFilter();\n    const tasks = this.taskService.tasks();\n\n    switch (filter) {\n      case 'completed':\n        return tasks.filter((task) => task.completed);\n      case 'pending':\n        return tasks.filter((task) => !task.completed);\n      default:\n        return tasks;\n    }\n  });\n\n  /**\n   * Obtiene el filtro actual\n   *\n   * @returns {'all' | 'pending' | 'completed'} El filtro actualmente aplicado\n   */\n  getCurrentFilter(): 'all' | 'pending' | 'completed' {\n    return this.currentFilter();\n  }\n\n  /**\n   * Establece un nuevo filtro para las tareas\n   *\n   * @param {string} filter - El filtro a aplicar ('all', 'pending', 'completed')\n   * @returns {void}\n   */\n  setFilter(filter: 'all' | 'pending' | 'completed'): void {\n    this.currentFilter.set(filter);\n  }\n\n  /**\n   * Obtiene las tareas filtradas según el filtro actual\n   *\n   * @returns {Task[]} Array de tareas filtradas\n   */\n  getFilteredTasks(): Task[] {\n    return this.filteredTasks();\n  }\n\n  /**\n   * Calcula el porcentaje de completitud de las tareas\n   *\n   * @returns {number} Porcentaje de tareas completadas (0-100)\n   */\n  getCompletionPercentage(): number {\n    const total = this.taskService.totalTasksCount();\n    if (total === 0) return 0;\n\n    const completed = this.taskService.completedTasksCount();\n    return Math.round((completed / total) * 100);\n  }\n\n  /**\n   * Obtiene el icono correspondiente al filtro actual\n   *\n   * @returns {string} Nombre del icono de Material Design\n   */\n  getFilterIcon(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'check_circle';\n      case 'pending':\n        return 'schedule';\n      default:\n        return 'list';\n    }\n  }\n\n  /**\n   * Obtiene el título correspondiente al filtro actual\n   *\n   * @returns {string} Título descriptivo del filtro\n   */\n  getFilterTitle(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'Tareas Completadas';\n      case 'pending':\n        return 'Tareas Pendientes';\n      default:\n        return 'Todas las Tareas';\n    }\n  }\n\n  /**\n   * Obtiene el icono para el estado vacío\n   *\n   * @returns {string} Nombre del icono para mostrar cuando no hay tareas\n   */\n  getEmptyStateIcon(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'check_circle_outline';\n      case 'pending':\n        return 'schedule';\n      default:\n        return 'assignment';\n    }\n  }\n\n  /**\n   * Obtiene el título para el estado vacío\n   *\n   * @returns {string} Título descriptivo cuando no hay tareas\n   */\n  getEmptyStateTitle(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'No hay tareas completadas';\n      case 'pending':\n        return 'No hay tareas pendientes';\n      default:\n        return 'No hay tareas';\n    }\n  }\n\n  /**\n   * Obtiene el mensaje para el estado vacío\n   *\n   * @returns {string} Mensaje descriptivo cuando no hay tareas\n   */\n  getEmptyStateMessage(): string {\n    switch (this.currentFilter()) {\n      case 'completed':\n        return 'Aún no has completado ninguna tarea. ¡Sigue trabajando!';\n      case 'pending':\n        return '¡Excelente! Has completado todas tus tareas.';\n      default:\n        return 'Comienza agregando tu primera tarea usando el formulario superior.';\n    }\n  }\n\n  /**\n   * Maneja la creación de una nueva tarea\n   *\n   * @param {Task} task - La tarea recién creada\n   * @returns {void}\n   */\n  onTaskCreated(task: Task): void {\n    // La tarea ya se agregó al servicio mediante el formulario\n    console.log('Nueva tarea creada:', task.title);\n    alert(`Tarea \"${task.title}\" creada exitosamente`);\n  }\n\n  /**\n   * Maneja el cambio de estado de una tarea\n   *\n   * @param {Task} task - La tarea que cambió de estado\n   * @returns {void}\n   */\n  onTaskToggled(task: Task): void {\n    console.log(\n      'Tarea actualizada:',\n      task.title,\n      'Completada:',\n      task.completed\n    );\n  }\n\n  /**\n   * Maneja la eliminación de una tarea\n   *\n   * @param {string} taskId - ID de la tarea eliminada\n   * @returns {void}\n   */\n  onTaskDeleted(taskId: string): void {\n    console.log('Tarea eliminada con ID:', taskId);\n  }\n\n  /**\n   * Maneja la solicitud de edición de una tarea\n   *\n   * @param {Task} task - La tarea a editar\n   * @returns {void}\n   */\n  onTaskEdit(task: Task): void {\n    console.log('Tarea a editar:', task.title);\n    const taskForm = this.taskFormRef();\n    if (taskForm) {\n      taskForm.initializeEditMode(task);\n      this.scrollToForm();\n    }\n  }\n\n  /**\n   * Maneja la actualización exitosa de una tarea\n   *\n   * @param {Task} task - La tarea actualizada\n   * @returns {void}\n   */\n  onTaskUpdated(task: Task): void {\n    console.log('Tarea actualizada:', task.title);\n    alert(`Tarea \"${task.title}\" actualizada exitosamente`);\n  }\n\n  /**\n   * Maneja la cancelación de la edición\n   *\n   * @returns {void}\n   */\n  onEditCancelled(): void {\n    console.log('Edición cancelada');\n  }\n\n  /**\n   * Desplaza la página hacia el formulario de tareas\n   *\n   * @private\n   * @returns {void}\n   */\n  private scrollToForm(): void {\n    setTimeout(() => {\n      const formSection = document.querySelector('.form-section');\n      if (formSection) {\n        formSection.scrollIntoView({ \n          behavior: 'smooth', \n          block: 'start'\n        });\n      }\n    }, 100);\n  }\n\n  /**\n   * Limpia todas las tareas después de confirmación\n   *\n   * @returns {Promise} Promise que se resuelve cuando se limpian las tareas\n   */\n  async clearAllTasks(): Promise {\n    const confirmed = confirm(\n      '¿Estás seguro de que quieres eliminar todas las tareas? Esta acción no se puede deshacer.'\n    );\n\n    if (confirmed) {\n      try {\n        this.isLoading = true;\n        await this.taskService.clearAllTasks();\n        console.log('Todas las tareas han sido eliminadas');\n      } catch (error) {\n        console.error('Error al limpiar tareas:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n\n  /**\n   * Función de seguimiento para ngFor optimizada\n   *\n   * @param {number} index - Índice del elemento\n   * @param {Task} task - Objeto de tarea\n   * @returns {string} ID único de la tarea\n   */\n  trackByTaskId(index: number, task: Task): string {\n    return task.id;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            assignment\n            \n              {{\n                taskService.totalTasksCount()\n              }}\n              Total\n            \n          \n\n          \n            schedule\n            \n              {{\n                taskService.pendingTasksCount()\n              }}\n              Pendientes\n            \n          \n\n          \n            check_circle\n            \n              {{\n                taskService.completedTasksCount()\n              }}\n              Completadas\n            \n          \n\n          \n            donut_large\n            \n              {{ getCompletionPercentage() }}%\n              Progreso\n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n  \n\n  \n  \n    \n      \n        \n          \n            filter_list\n            Filtrar Tareas\n          \n        \n\n        \n          \n            list\n            Todas\n            {{\n              taskService.totalTasksCount()\n            }}\n          \n\n          \n            schedule\n            Pendientes\n            {{\n              taskService.pendingTasksCount()\n            }}\n          \n\n          \n            check_circle\n            Completadas\n            {{\n              taskService.completedTasksCount()\n            }}\n          \n        \n\n        \n        \n          \n            clear_all\n            Limpiar Todo\n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        {{ getFilterIcon() }}\n        {{ getFilterTitle() }}\n        {{ getFilteredTasks().length }}\n      \n    \n\n    \n    \n      \n      \n      Cargando tareas...\n    \n\n    \n    \n      \n      \n        \n          \n            \n              {{ getEmptyStateIcon() }}\n              {{ getEmptyStateTitle() }}\n              {{ getEmptyStateMessage() }}\n\n              \n                list\n                Ver Todas las Tareas\n              \n            \n          \n        \n      \n\n      \n       0\" class=\"tasks-container\">\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            assignment                          {{                taskService.totalTasksCount()              }}              Total                                            schedule                          {{                taskService.pendingTasksCount()              }}              Pendientes                                            check_circle                          {{                taskService.completedTasksCount()              }}              Completadas                                            donut_large                          {{ getCompletionPercentage() }}%              Progreso                                                                                                filter_list            Filtrar Tareas                                                list            Todas            {{              taskService.totalTasksCount()            }}                                schedule            Pendientes            {{              taskService.pendingTasksCount()            }}                                check_circle            Completadas            {{              taskService.completedTasksCount()            }}                                                        clear_all            Limpiar Todo                                                    {{ getFilterIcon() }}        {{ getFilterTitle() }}        {{ getFilteredTasks().length }}                                    Cargando tareas...                                                                    {{ getEmptyStateIcon() }}              {{ getEmptyStateTitle() }}              {{ getEmptyStateMessage() }}                              list                Ver Todas las Tareas                                                               0\" class=\"tasks-container\">                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de Tareas - Operaciones CRUD\nEste servicio maneja todas las operaciones relacionadas con tareas incluyendo Crear, Leer, Actualizar y Eliminar.\nUtiliza Angular Signals para gestión reactiva del estado y proporciona APIs basadas en Observable y Signal.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _nextId\n                            \n                            \n                                    Private\n                                    Readonly\n                                _tasks\n                            \n                            \n                                    Private\n                                    Readonly\n                                _tasks$\n                            \n                            \n                                    Public\n                                    Readonly\n                                completedTasksCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                pendingTasksCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                tasks\n                            \n                            \n                                    Public\n                                    Readonly\n                                tasks$\n                            \n                            \n                                    Public\n                                    Readonly\n                                totalTasksCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAllTasks\n                            \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                    Private\n                                initializeSampleData\n                            \n                            \n                                    Async\n                                toggleTaskCompletion\n                            \n                            \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:76\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Limpiar todas las tareas\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve cuando se limpian todas las tareas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(taskRequest: CreateTaskRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Crear una nueva tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                taskRequest\n                                            \n                                                            CreateTaskRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos de la tarea a crear\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise que se resuelve con la tarea creada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:183\n                        \n                    \n\n\n            \n                \n                        Eliminar una tarea por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID de la tarea a eliminar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise que se resuelve con true si se eliminó, false si no se encontró\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeSampleData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeSampleData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Inicializar el servicio con datos de ejemplo para demostración\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleTaskCompletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleTaskCompletion(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Alternar el estado de completado de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID de la tarea a alternar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise que se resuelve con la tarea actualizada o null si no se encuentra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(id: string, updateRequest: UpdateTaskRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:150\n                        \n                    \n\n\n            \n                \n                        Actualizar una tarea existente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID de la tarea a actualizar\n\n\n                                            \n                                        \n                                        \n                                                updateRequest\n                                            \n                                                            UpdateTaskRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos a actualizar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise que se resuelve con la tarea actualizada o null si no se encuentra\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:37\n                        \n                    \n\n            \n                \n                    Contador privado para generar IDs únicos de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:25\n                        \n                    \n\n            \n                \n                    Signal privada que contiene todas las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:31\n                        \n                    \n\n            \n                \n                    BehaviorSubject privado para suscripciones basadas en Observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        completedTasksCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this._tasks().filter((task) => task.completed).length\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:58\n                        \n                    \n\n            \n                \n                    Signal computada para el conteo de tareas completadas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pendingTasksCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this._tasks().filter((task) => !task.completed).length\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:67\n                        \n                    \n\n            \n                \n                    Signal computada para el conteo de tareas pendientes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._tasks.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:44\n                        \n                    \n\n            \n                \n                    Signal pública de solo lectura para acceder a las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._tasks$.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:51\n                        \n                    \n\n            \n                \n                    Flujo Observable de todas las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        totalTasksCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this._tasks().length)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:76\n                        \n                    \n\n            \n                \n                    Signal computada para el conteo total de tareas\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, computed } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  Task,\n  CreateTaskRequest,\n  UpdateTaskRequest,\n} from '../models/task.model';\n\n/**\n * Servicio de Tareas - Operaciones CRUD\n *\n * Este servicio maneja todas las operaciones relacionadas con tareas incluyendo Crear, Leer, Actualizar y Eliminar.\n * Utiliza Angular Signals para gestión reactiva del estado y proporciona APIs basadas en Observable y Signal.\n *\n * @class TaskService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  /**\n   * Signal privada que contiene todas las tareas\n   * @private\n   */\n  private readonly _tasks = signal([]);\n\n  /**\n   * BehaviorSubject privado para suscripciones basadas en Observable\n   * @private\n   */\n  private readonly _tasks$ = new BehaviorSubject([]);\n\n  /**\n   * Contador privado para generar IDs únicos de tareas\n   * @private\n   */\n  private _nextId = 1;\n\n  /**\n   * Signal pública de solo lectura para acceder a las tareas\n   * @readonly\n   * @returns {Signal} Todas las tareas\n   */\n  public readonly tasks = this._tasks.asReadonly();\n\n  /**\n   * Flujo Observable de todas las tareas\n   * @readonly\n   * @returns {Observable} Observable de todas las tareas\n   */\n  public readonly tasks$: Observable = this._tasks$.asObservable();\n\n  /**\n   * Signal computada para el conteo de tareas completadas\n   * @readonly\n   * @returns {Signal} Número de tareas completadas\n   */\n  public readonly completedTasksCount = computed(\n    () => this._tasks().filter((task) => task.completed).length\n  );\n\n  /**\n   * Signal computada para el conteo de tareas pendientes\n   * @readonly\n   * @returns {Signal} Número de tareas pendientes\n   */\n  public readonly pendingTasksCount = computed(\n    () => this._tasks().filter((task) => !task.completed).length\n  );\n\n  /**\n   * Signal computada para el conteo total de tareas\n   * @readonly\n   * @returns {Signal} Número total de tareas\n   */\n  public readonly totalTasksCount = computed(() => this._tasks().length);\n\n  constructor() {\n    this.initializeSampleData();\n  }\n\n  /**\n   * Inicializar el servicio con datos de ejemplo para demostración\n   * @private\n   * @returns {void}\n   */\n  private initializeSampleData(): void {\n    const sampleTasks: Task[] = [\n      {\n        id: '1',\n        title: 'Configurar Angular Material',\n        description: 'Instalar y configurar Angular Material en el proyecto',\n        completed: true,\n        priority: 'high',\n        createdAt: new Date(Date.now() - 86400000),\n        updatedAt: new Date(Date.now() - 86400000),\n      },\n      {\n        id: '2',\n        title: 'Crear componentes de tareas',\n        description:\n          'Desarrollar los componentes de lista de tareas, elemento de tarea y formulario de tarea',\n        completed: false,\n        priority: 'high',\n        createdAt: new Date(Date.now() - 3600000),\n        updatedAt: new Date(Date.now() - 3600000),\n        dueDate: new Date(Date.now() + 259200000),\n      },\n    ];\n\n    this._tasks.set(sampleTasks);\n    this._tasks$.next(sampleTasks);\n    this._nextId = 3;\n  }\n\n  /**\n   * Crear una nueva tarea\n   *\n   * @param {CreateTaskRequest} taskRequest - Los datos de la tarea a crear\n   * @returns {Promise} Promise que se resuelve con la tarea creada\n   */\n  async createTask(taskRequest: CreateTaskRequest): Promise {\n    const now = new Date();\n    const newTask: Task = {\n      id: this._nextId.toString(),\n      title: taskRequest.title,\n      description: taskRequest.description || '',\n      completed: false,\n      priority: taskRequest.priority || 'medium',\n      createdAt: now,\n      updatedAt: now,\n      dueDate: taskRequest.dueDate,\n    };\n\n    this._nextId++;\n    const updatedTasks = [...this._tasks(), newTask];\n    this._tasks.set(updatedTasks);\n    this._tasks$.next(updatedTasks);\n\n    return Promise.resolve(newTask);\n  }\n\n  /**\n   * Actualizar una tarea existente\n   *\n   * @param {string} id - El ID de la tarea a actualizar\n   * @param {UpdateTaskRequest} updateRequest - Los datos a actualizar\n   * @returns {Promise} Promise que se resuelve con la tarea actualizada o null si no se encuentra\n   */\n  async updateTask(\n    id: string,\n    updateRequest: UpdateTaskRequest\n  ): Promise {\n    const tasks = this._tasks();\n    const taskIndex = tasks.findIndex((t) => t.id === id);\n\n    if (taskIndex === -1) {\n      return Promise.resolve(null);\n    }\n\n    const existingTask = tasks[taskIndex];\n    const updatedTask: Task = {\n      ...existingTask,\n      ...updateRequest,\n      updatedAt: new Date(),\n    };\n\n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex] = updatedTask;\n\n    this._tasks.set(updatedTasks);\n    this._tasks$.next(updatedTasks);\n\n    return Promise.resolve(updatedTask);\n  }\n\n  /**\n   * Eliminar una tarea por ID\n   *\n   * @param {string} id - El ID de la tarea a eliminar\n   * @returns {Promise} Promise que se resuelve con true si se eliminó, false si no se encontró\n   */\n  async deleteTask(id: string): Promise {\n    const tasks = this._tasks();\n    const filteredTasks = tasks.filter((t) => t.id !== id);\n\n    if (filteredTasks.length === tasks.length) {\n      return Promise.resolve(false);\n    }\n\n    this._tasks.set(filteredTasks);\n    this._tasks$.next(filteredTasks);\n\n    return Promise.resolve(true);\n  }\n\n  /**\n   * Alternar el estado de completado de una tarea\n   *\n   * @param {string} id - El ID de la tarea a alternar\n   * @returns {Promise} Promise que se resuelve con la tarea actualizada o null si no se encuentra\n   */\n  async toggleTaskCompletion(id: string): Promise {\n    const task = this._tasks().find((t) => t.id === id);\n    if (!task) {\n      return Promise.resolve(null);\n    }\n\n    return this.updateTask(id, { completed: !task.completed });\n  }\n\n  /**\n   * Limpiar todas las tareas\n   *\n   * @returns {Promise} Promise que se resuelve cuando se limpian todas las tareas\n   */\n  async clearAllTasks(): Promise {\n    this._tasks.set([]);\n    this._tasks$.next([]);\n    this._nextId = 1;\n    return Promise.resolve();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateTaskRequest.html":{"url":"interfaces/UpdateTaskRequest.html","title":"interface - UpdateTaskRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateTaskRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para actualizar una tarea existente\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Estado de finalización actualizado\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripción actualizada de la tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Fecha límite actualizada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"low\" | \"medium\" | \"high\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"low\" | \"medium\" | \"high\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Nivel de prioridad actualizado\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Título actualizado de la tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  /**\n   * Identificador único de la tarea\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Título de la tarea (requerido)\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción detallada opcional de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Indica si la tarea está completada\n   * @type {boolean}\n   * @default false\n   */\n  completed: boolean;\n\n  /**\n   * Nivel de prioridad de la tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha de creación de la tarea\n   * @type {Date}\n   */\n  createdAt: Date;\n\n  /**\n   * Fecha de última actualización de la tarea\n   * @type {Date}\n   */\n  updatedAt: Date;\n\n  /**\n   * Fecha límite opcional de la tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para crear una nueva tarea (sin campos generados automáticamente)\n *\n * @interface CreateTaskRequest\n */\nexport interface CreateTaskRequest {\n  /**\n   * Título de la nueva tarea\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * Descripción opcional para la nueva tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Nivel de prioridad para la nueva tarea\n   * @type {'low' | 'medium' | 'high'}\n   * @default 'medium'\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite opcional para la nueva tarea\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n/**\n * Interfaz para actualizar una tarea existente\n *\n * @interface UpdateTaskRequest\n */\nexport interface UpdateTaskRequest {\n  /**\n   * Título actualizado de la tarea\n   * @type {string | undefined}\n   */\n  title?: string;\n\n  /**\n   * Descripción actualizada de la tarea\n   * @type {string | undefined}\n   */\n  description?: string;\n\n  /**\n   * Estado de finalización actualizado\n   * @type {boolean | undefined}\n   */\n  completed?: boolean;\n\n  /**\n   * Nivel de prioridad actualizado\n   * @type {'low' | 'medium' | 'high' | undefined}\n   */\n  priority?: 'low' | 'medium' | 'high';\n\n  /**\n   * Fecha límite actualizada\n   * @type {Date | undefined}\n   */\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/task-form/task-form.component.ts\n            \n            component\n            TaskFormComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                        src/app/components/task-item/task-item.component.ts\n            \n            component\n            TaskItemComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        src/app/components/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                        src/app/models/task.model.ts\n            \n            interface\n            CreateTaskRequest\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/models/task.model.ts\n            \n            interface\n            Task\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/models/task.model.ts\n            \n            interface\n            UpdateTaskRequest\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.19\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.19\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/ssr : ^19.2.16\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Manejador de peticiones usado por Angular CLI (para dev-server y durante build) o Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay())]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (context: BootstrapContext) =>\n    bootstrapApplication(AppComponent, config, context)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
